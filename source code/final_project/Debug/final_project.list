
final_project.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003c58  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000ec  08003d64  08003d64  00013d64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08003e50  08003e50  000200bc  2**0
                  CONTENTS
  4 .ARM          00000000  08003e50  08003e50  000200bc  2**0
                  CONTENTS
  5 .preinit_array 00000000  08003e50  08003e50  000200bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08003e50  08003e50  00013e50  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08003e54  08003e54  00013e54  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000bc  20000000  08003e58  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000178  200000bc  08003f14  000200bc  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000234  08003f14  00020234  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000200bc  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000c0cc  00000000  00000000  000200e5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002299  00000000  00000000  0002c1b1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000cd0  00000000  00000000  0002e450  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000bb0  00000000  00000000  0002f120  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001925a  00000000  00000000  0002fcd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000f391  00000000  00000000  00048f2a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008b285  00000000  00000000  000582bb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000e3540  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003714  00000000  00000000  000e3590  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	200000bc 	.word	0x200000bc
 8000128:	00000000 	.word	0x00000000
 800012c:	08003d4c 	.word	0x08003d4c

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	200000c0 	.word	0x200000c0
 8000148:	08003d4c 	.word	0x08003d4c

0800014c <auto_fsm>:
#include "software_timer.h"
#include "stdio.h"
#include "main.h"
#include "stdint.h"
char str[50];
void auto_fsm(){
 800014c:	b580      	push	{r7, lr}
 800014e:	af00      	add	r7, sp, #0
	switch(state){
 8000150:	4baa      	ldr	r3, [pc, #680]	; (80003fc <auto_fsm+0x2b0>)
 8000152:	681b      	ldr	r3, [r3, #0]
 8000154:	2b03      	cmp	r3, #3
 8000156:	f200 814e 	bhi.w	80003f6 <auto_fsm+0x2aa>
 800015a:	a201      	add	r2, pc, #4	; (adr r2, 8000160 <auto_fsm+0x14>)
 800015c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000160:	08000171 	.word	0x08000171
 8000164:	080001b7 	.word	0x080001b7
 8000168:	08000285 	.word	0x08000285
 800016c:	0800033f 	.word	0x0800033f
	case INIT:
		red_duration=5;
 8000170:	4ba3      	ldr	r3, [pc, #652]	; (8000400 <auto_fsm+0x2b4>)
 8000172:	2205      	movs	r2, #5
 8000174:	601a      	str	r2, [r3, #0]
		green_duration=3;
 8000176:	4ba3      	ldr	r3, [pc, #652]	; (8000404 <auto_fsm+0x2b8>)
 8000178:	2203      	movs	r2, #3
 800017a:	601a      	str	r2, [r3, #0]
		yellow_duration=2;
 800017c:	4ba2      	ldr	r3, [pc, #648]	; (8000408 <auto_fsm+0x2bc>)
 800017e:	2202      	movs	r2, #2
 8000180:	601a      	str	r2, [r3, #0]
		counter1=red_duration;
 8000182:	4b9f      	ldr	r3, [pc, #636]	; (8000400 <auto_fsm+0x2b4>)
 8000184:	681b      	ldr	r3, [r3, #0]
 8000186:	4aa1      	ldr	r2, [pc, #644]	; (800040c <auto_fsm+0x2c0>)
 8000188:	6013      	str	r3, [r2, #0]
		HAL_UART_Transmit(&huart2 ,(void*)str,sprintf(str,"red=%d\r\n"
 800018a:	4ba0      	ldr	r3, [pc, #640]	; (800040c <auto_fsm+0x2c0>)
 800018c:	681b      	ldr	r3, [r3, #0]
 800018e:	461a      	mov	r2, r3
 8000190:	499f      	ldr	r1, [pc, #636]	; (8000410 <auto_fsm+0x2c4>)
 8000192:	48a0      	ldr	r0, [pc, #640]	; (8000414 <auto_fsm+0x2c8>)
 8000194:	f003 f960 	bl	8003458 <siprintf>
 8000198:	4603      	mov	r3, r0
 800019a:	b29a      	uxth	r2, r3
 800019c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80001a0:	499c      	ldr	r1, [pc, #624]	; (8000414 <auto_fsm+0x2c8>)
 80001a2:	489d      	ldr	r0, [pc, #628]	; (8000418 <auto_fsm+0x2cc>)
 80001a4:	f002 ffbb 	bl	800311e <HAL_UART_Transmit>
							  		,counter1),1000) ;
		setTimer1(1000);
 80001a8:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80001ac:	f000 fec0 	bl	8000f30 <setTimer1>
		state=AUTO_RED;
 80001b0:	4b92      	ldr	r3, [pc, #584]	; (80003fc <auto_fsm+0x2b0>)
 80001b2:	2201      	movs	r2, #1
 80001b4:	601a      	str	r2, [r3, #0]
	case AUTO_RED:
		//reset flag for setting button and manual button
		is_button_pressed(SETTING_IDX);
 80001b6:	2001      	movs	r0, #1
 80001b8:	f000 fa22 	bl	8000600 <is_button_pressed>
		is_button_pressed(MANUAL_IDX);
 80001bc:	2002      	movs	r0, #2
 80001be:	f000 fa1f 	bl	8000600 <is_button_pressed>
		//hien thi mau do tren den giao thong 1
		set_color_light1(DO);
 80001c2:	2001      	movs	r0, #1
 80001c4:	f000 f93a 	bl	800043c <set_color_light1>
		//hien thi den giao thong 2
		if (counter1>yellow_duration) set_color_light2(XANH);
 80001c8:	4b90      	ldr	r3, [pc, #576]	; (800040c <auto_fsm+0x2c0>)
 80001ca:	681a      	ldr	r2, [r3, #0]
 80001cc:	4b8e      	ldr	r3, [pc, #568]	; (8000408 <auto_fsm+0x2bc>)
 80001ce:	681b      	ldr	r3, [r3, #0]
 80001d0:	429a      	cmp	r2, r3
 80001d2:	dd03      	ble.n	80001dc <auto_fsm+0x90>
 80001d4:	2003      	movs	r0, #3
 80001d6:	f000 f97d 	bl	80004d4 <set_color_light2>
 80001da:	e002      	b.n	80001e2 <auto_fsm+0x96>
		else set_color_light2(VANG);
 80001dc:	2002      	movs	r0, #2
 80001de:	f000 f979 	bl	80004d4 <set_color_light2>
		//dem lui moi 1s
		if(timer1_flag==1){
 80001e2:	4b8e      	ldr	r3, [pc, #568]	; (800041c <auto_fsm+0x2d0>)
 80001e4:	681b      	ldr	r3, [r3, #0]
 80001e6:	2b01      	cmp	r3, #1
 80001e8:	d132      	bne.n	8000250 <auto_fsm+0x104>
			counter1--;
 80001ea:	4b88      	ldr	r3, [pc, #544]	; (800040c <auto_fsm+0x2c0>)
 80001ec:	681b      	ldr	r3, [r3, #0]
 80001ee:	3b01      	subs	r3, #1
 80001f0:	4a86      	ldr	r2, [pc, #536]	; (800040c <auto_fsm+0x2c0>)
 80001f2:	6013      	str	r3, [r2, #0]
			if (counter1<=0) {
 80001f4:	4b85      	ldr	r3, [pc, #532]	; (800040c <auto_fsm+0x2c0>)
 80001f6:	681b      	ldr	r3, [r3, #0]
 80001f8:	2b00      	cmp	r3, #0
 80001fa:	dc16      	bgt.n	800022a <auto_fsm+0xde>
				counter1=green_duration;//nap lai thoi gian cho duration
 80001fc:	4b81      	ldr	r3, [pc, #516]	; (8000404 <auto_fsm+0x2b8>)
 80001fe:	681b      	ldr	r3, [r3, #0]
 8000200:	4a82      	ldr	r2, [pc, #520]	; (800040c <auto_fsm+0x2c0>)
 8000202:	6013      	str	r3, [r2, #0]
				state=AUTO_GREEN;
 8000204:	4b7d      	ldr	r3, [pc, #500]	; (80003fc <auto_fsm+0x2b0>)
 8000206:	2202      	movs	r2, #2
 8000208:	601a      	str	r2, [r3, #0]
				HAL_UART_Transmit(&huart2 ,(void*)str,sprintf(str,"green=%d\r\n"
 800020a:	4b80      	ldr	r3, [pc, #512]	; (800040c <auto_fsm+0x2c0>)
 800020c:	681b      	ldr	r3, [r3, #0]
 800020e:	461a      	mov	r2, r3
 8000210:	4983      	ldr	r1, [pc, #524]	; (8000420 <auto_fsm+0x2d4>)
 8000212:	4880      	ldr	r0, [pc, #512]	; (8000414 <auto_fsm+0x2c8>)
 8000214:	f003 f920 	bl	8003458 <siprintf>
 8000218:	4603      	mov	r3, r0
 800021a:	b29a      	uxth	r2, r3
 800021c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000220:	497c      	ldr	r1, [pc, #496]	; (8000414 <auto_fsm+0x2c8>)
 8000222:	487d      	ldr	r0, [pc, #500]	; (8000418 <auto_fsm+0x2cc>)
 8000224:	f002 ff7b 	bl	800311e <HAL_UART_Transmit>
 8000228:	e00e      	b.n	8000248 <auto_fsm+0xfc>
												  		,counter1),1000) ;
			}//nguoc lai van o trang thai auto_red
			else
			HAL_UART_Transmit(&huart2 ,(void*)str,sprintf(str,"red=%d\r\n"
 800022a:	4b78      	ldr	r3, [pc, #480]	; (800040c <auto_fsm+0x2c0>)
 800022c:	681b      	ldr	r3, [r3, #0]
 800022e:	461a      	mov	r2, r3
 8000230:	4977      	ldr	r1, [pc, #476]	; (8000410 <auto_fsm+0x2c4>)
 8000232:	4878      	ldr	r0, [pc, #480]	; (8000414 <auto_fsm+0x2c8>)
 8000234:	f003 f910 	bl	8003458 <siprintf>
 8000238:	4603      	mov	r3, r0
 800023a:	b29a      	uxth	r2, r3
 800023c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000240:	4974      	ldr	r1, [pc, #464]	; (8000414 <auto_fsm+0x2c8>)
 8000242:	4875      	ldr	r0, [pc, #468]	; (8000418 <auto_fsm+0x2cc>)
 8000244:	f002 ff6b 	bl	800311e <HAL_UART_Transmit>
								  		,counter1),1000) ;
			setTimer1(1000);
 8000248:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800024c:	f000 fe70 	bl	8000f30 <setTimer1>
		}

		//neu an nut 1 thi chuyen sang trang thai setting
		if (is_button_pressed(STATE_IDX))
 8000250:	2000      	movs	r0, #0
 8000252:	f000 f9d5 	bl	8000600 <is_button_pressed>
 8000256:	4603      	mov	r3, r0
 8000258:	2b00      	cmp	r3, #0
 800025a:	f000 80e7 	beq.w	800042c <auto_fsm+0x2e0>
			{
			HAL_UART_Transmit(&huart2 ,(void*)str,sprintf(str,"setting_red=%d\r\n"
 800025e:	4b68      	ldr	r3, [pc, #416]	; (8000400 <auto_fsm+0x2b4>)
 8000260:	681b      	ldr	r3, [r3, #0]
 8000262:	461a      	mov	r2, r3
 8000264:	496f      	ldr	r1, [pc, #444]	; (8000424 <auto_fsm+0x2d8>)
 8000266:	486b      	ldr	r0, [pc, #428]	; (8000414 <auto_fsm+0x2c8>)
 8000268:	f003 f8f6 	bl	8003458 <siprintf>
 800026c:	4603      	mov	r3, r0
 800026e:	b29a      	uxth	r2, r3
 8000270:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000274:	4967      	ldr	r1, [pc, #412]	; (8000414 <auto_fsm+0x2c8>)
 8000276:	4868      	ldr	r0, [pc, #416]	; (8000418 <auto_fsm+0x2cc>)
 8000278:	f002 ff51 	bl	800311e <HAL_UART_Transmit>
										,red_duration),1000);
			state=SETTING_RED;
 800027c:	4b5f      	ldr	r3, [pc, #380]	; (80003fc <auto_fsm+0x2b0>)
 800027e:	2204      	movs	r2, #4
 8000280:	601a      	str	r2, [r3, #0]
			}
		break;
 8000282:	e0d3      	b.n	800042c <auto_fsm+0x2e0>
	case AUTO_GREEN:
		//reset flag for setting button and manual button
		is_button_pressed(SETTING_IDX);
 8000284:	2001      	movs	r0, #1
 8000286:	f000 f9bb 	bl	8000600 <is_button_pressed>
		is_button_pressed(MANUAL_IDX);
 800028a:	2002      	movs	r0, #2
 800028c:	f000 f9b8 	bl	8000600 <is_button_pressed>
		//hien thi mau xanh tren den giao thong 1
		set_color_light1(XANH);
 8000290:	2003      	movs	r0, #3
 8000292:	f000 f8d3 	bl	800043c <set_color_light1>
		//hien thi den giao thong 2
		set_color_light2(DO);
 8000296:	2001      	movs	r0, #1
 8000298:	f000 f91c 	bl	80004d4 <set_color_light2>
		//gui tin hieu uart de hien thi thoi gian
			//can bo sung them ham trong hardware_layer
		//dem lui moi 1s
		if(timer1_flag==1){
 800029c:	4b5f      	ldr	r3, [pc, #380]	; (800041c <auto_fsm+0x2d0>)
 800029e:	681b      	ldr	r3, [r3, #0]
 80002a0:	2b01      	cmp	r3, #1
 80002a2:	d132      	bne.n	800030a <auto_fsm+0x1be>
			counter1--;
 80002a4:	4b59      	ldr	r3, [pc, #356]	; (800040c <auto_fsm+0x2c0>)
 80002a6:	681b      	ldr	r3, [r3, #0]
 80002a8:	3b01      	subs	r3, #1
 80002aa:	4a58      	ldr	r2, [pc, #352]	; (800040c <auto_fsm+0x2c0>)
 80002ac:	6013      	str	r3, [r2, #0]
			if (counter1<=0) {
 80002ae:	4b57      	ldr	r3, [pc, #348]	; (800040c <auto_fsm+0x2c0>)
 80002b0:	681b      	ldr	r3, [r3, #0]
 80002b2:	2b00      	cmp	r3, #0
 80002b4:	dc16      	bgt.n	80002e4 <auto_fsm+0x198>
				counter1=yellow_duration;//nap lai thoi gian cho duration
 80002b6:	4b54      	ldr	r3, [pc, #336]	; (8000408 <auto_fsm+0x2bc>)
 80002b8:	681b      	ldr	r3, [r3, #0]
 80002ba:	4a54      	ldr	r2, [pc, #336]	; (800040c <auto_fsm+0x2c0>)
 80002bc:	6013      	str	r3, [r2, #0]
				state=AUTO_YELLOW;
 80002be:	4b4f      	ldr	r3, [pc, #316]	; (80003fc <auto_fsm+0x2b0>)
 80002c0:	2203      	movs	r2, #3
 80002c2:	601a      	str	r2, [r3, #0]
				HAL_UART_Transmit(&huart2 ,(void*)str,sprintf(str,"yellow=%d\r\n"
 80002c4:	4b51      	ldr	r3, [pc, #324]	; (800040c <auto_fsm+0x2c0>)
 80002c6:	681b      	ldr	r3, [r3, #0]
 80002c8:	461a      	mov	r2, r3
 80002ca:	4957      	ldr	r1, [pc, #348]	; (8000428 <auto_fsm+0x2dc>)
 80002cc:	4851      	ldr	r0, [pc, #324]	; (8000414 <auto_fsm+0x2c8>)
 80002ce:	f003 f8c3 	bl	8003458 <siprintf>
 80002d2:	4603      	mov	r3, r0
 80002d4:	b29a      	uxth	r2, r3
 80002d6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80002da:	494e      	ldr	r1, [pc, #312]	; (8000414 <auto_fsm+0x2c8>)
 80002dc:	484e      	ldr	r0, [pc, #312]	; (8000418 <auto_fsm+0x2cc>)
 80002de:	f002 ff1e 	bl	800311e <HAL_UART_Transmit>
 80002e2:	e00e      	b.n	8000302 <auto_fsm+0x1b6>
												  		,counter1),1000) ;
			}//nguoc lai van o trang thai auto_green
			else
			HAL_UART_Transmit(&huart2 ,(void*)str,sprintf(str,"green=%d\r\n"
 80002e4:	4b49      	ldr	r3, [pc, #292]	; (800040c <auto_fsm+0x2c0>)
 80002e6:	681b      	ldr	r3, [r3, #0]
 80002e8:	461a      	mov	r2, r3
 80002ea:	494d      	ldr	r1, [pc, #308]	; (8000420 <auto_fsm+0x2d4>)
 80002ec:	4849      	ldr	r0, [pc, #292]	; (8000414 <auto_fsm+0x2c8>)
 80002ee:	f003 f8b3 	bl	8003458 <siprintf>
 80002f2:	4603      	mov	r3, r0
 80002f4:	b29a      	uxth	r2, r3
 80002f6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80002fa:	4946      	ldr	r1, [pc, #280]	; (8000414 <auto_fsm+0x2c8>)
 80002fc:	4846      	ldr	r0, [pc, #280]	; (8000418 <auto_fsm+0x2cc>)
 80002fe:	f002 ff0e 	bl	800311e <HAL_UART_Transmit>
											  		,counter1),1000) ;
			setTimer1(1000);
 8000302:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000306:	f000 fe13 	bl	8000f30 <setTimer1>
		}
		//neu counter1 == 0 chuyen trang thai sang auto_yellow


		//neu an nut 1 thi chuyen sang trang thai setting_red
		if (is_button_pressed(STATE_IDX))
 800030a:	2000      	movs	r0, #0
 800030c:	f000 f978 	bl	8000600 <is_button_pressed>
 8000310:	4603      	mov	r3, r0
 8000312:	2b00      	cmp	r3, #0
 8000314:	f000 808c 	beq.w	8000430 <auto_fsm+0x2e4>
		{
			HAL_UART_Transmit(&huart2 ,(void*)str,sprintf(str,"setting_red=%d\r\n"
 8000318:	4b39      	ldr	r3, [pc, #228]	; (8000400 <auto_fsm+0x2b4>)
 800031a:	681b      	ldr	r3, [r3, #0]
 800031c:	461a      	mov	r2, r3
 800031e:	4941      	ldr	r1, [pc, #260]	; (8000424 <auto_fsm+0x2d8>)
 8000320:	483c      	ldr	r0, [pc, #240]	; (8000414 <auto_fsm+0x2c8>)
 8000322:	f003 f899 	bl	8003458 <siprintf>
 8000326:	4603      	mov	r3, r0
 8000328:	b29a      	uxth	r2, r3
 800032a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800032e:	4939      	ldr	r1, [pc, #228]	; (8000414 <auto_fsm+0x2c8>)
 8000330:	4839      	ldr	r0, [pc, #228]	; (8000418 <auto_fsm+0x2cc>)
 8000332:	f002 fef4 	bl	800311e <HAL_UART_Transmit>
										,red_duration),1000);
			state=SETTING_RED;
 8000336:	4b31      	ldr	r3, [pc, #196]	; (80003fc <auto_fsm+0x2b0>)
 8000338:	2204      	movs	r2, #4
 800033a:	601a      	str	r2, [r3, #0]
		}
		break;
 800033c:	e078      	b.n	8000430 <auto_fsm+0x2e4>
	case AUTO_YELLOW:
		//reset flag for setting button and manual button
		is_button_pressed(SETTING_IDX);
 800033e:	2001      	movs	r0, #1
 8000340:	f000 f95e 	bl	8000600 <is_button_pressed>
		is_button_pressed(MANUAL_IDX);
 8000344:	2002      	movs	r0, #2
 8000346:	f000 f95b 	bl	8000600 <is_button_pressed>
		//hien thi mau xanh tren den giao thong 1
		set_color_light1(VANG);
 800034a:	2002      	movs	r0, #2
 800034c:	f000 f876 	bl	800043c <set_color_light1>
		//hien thi den giao thong 2
		set_color_light2(DO);
 8000350:	2001      	movs	r0, #1
 8000352:	f000 f8bf 	bl	80004d4 <set_color_light2>
		//gui tin hieu uart de hien thi thoi gian
			//can bo sung them ham trong hardware_layer
		//dem lui moi 1s
		if(timer1_flag==1){
 8000356:	4b31      	ldr	r3, [pc, #196]	; (800041c <auto_fsm+0x2d0>)
 8000358:	681b      	ldr	r3, [r3, #0]
 800035a:	2b01      	cmp	r3, #1
 800035c:	d132      	bne.n	80003c4 <auto_fsm+0x278>
			counter1--;
 800035e:	4b2b      	ldr	r3, [pc, #172]	; (800040c <auto_fsm+0x2c0>)
 8000360:	681b      	ldr	r3, [r3, #0]
 8000362:	3b01      	subs	r3, #1
 8000364:	4a29      	ldr	r2, [pc, #164]	; (800040c <auto_fsm+0x2c0>)
 8000366:	6013      	str	r3, [r2, #0]
			//neu counter1 == 0 chuyen trang thai sang auto_red
			if (counter1==0) {
 8000368:	4b28      	ldr	r3, [pc, #160]	; (800040c <auto_fsm+0x2c0>)
 800036a:	681b      	ldr	r3, [r3, #0]
 800036c:	2b00      	cmp	r3, #0
 800036e:	d116      	bne.n	800039e <auto_fsm+0x252>
				counter1=red_duration;//nap lai thoi gian cho duration
 8000370:	4b23      	ldr	r3, [pc, #140]	; (8000400 <auto_fsm+0x2b4>)
 8000372:	681b      	ldr	r3, [r3, #0]
 8000374:	4a25      	ldr	r2, [pc, #148]	; (800040c <auto_fsm+0x2c0>)
 8000376:	6013      	str	r3, [r2, #0]
				HAL_UART_Transmit(&huart2 ,(void*)str,sprintf(str,"red=%d\r\n"
 8000378:	4b24      	ldr	r3, [pc, #144]	; (800040c <auto_fsm+0x2c0>)
 800037a:	681b      	ldr	r3, [r3, #0]
 800037c:	461a      	mov	r2, r3
 800037e:	4924      	ldr	r1, [pc, #144]	; (8000410 <auto_fsm+0x2c4>)
 8000380:	4824      	ldr	r0, [pc, #144]	; (8000414 <auto_fsm+0x2c8>)
 8000382:	f003 f869 	bl	8003458 <siprintf>
 8000386:	4603      	mov	r3, r0
 8000388:	b29a      	uxth	r2, r3
 800038a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800038e:	4921      	ldr	r1, [pc, #132]	; (8000414 <auto_fsm+0x2c8>)
 8000390:	4821      	ldr	r0, [pc, #132]	; (8000418 <auto_fsm+0x2cc>)
 8000392:	f002 fec4 	bl	800311e <HAL_UART_Transmit>
															  		,counter1),1000) ;
				state=AUTO_RED;
 8000396:	4b19      	ldr	r3, [pc, #100]	; (80003fc <auto_fsm+0x2b0>)
 8000398:	2201      	movs	r2, #1
 800039a:	601a      	str	r2, [r3, #0]
 800039c:	e00e      	b.n	80003bc <auto_fsm+0x270>
			}//nguoc lai van o trang thai auto_yellow
			else HAL_UART_Transmit(&huart2 ,(void*)str,sprintf(str,"yellow=%d\r\n"
 800039e:	4b1b      	ldr	r3, [pc, #108]	; (800040c <auto_fsm+0x2c0>)
 80003a0:	681b      	ldr	r3, [r3, #0]
 80003a2:	461a      	mov	r2, r3
 80003a4:	4920      	ldr	r1, [pc, #128]	; (8000428 <auto_fsm+0x2dc>)
 80003a6:	481b      	ldr	r0, [pc, #108]	; (8000414 <auto_fsm+0x2c8>)
 80003a8:	f003 f856 	bl	8003458 <siprintf>
 80003ac:	4603      	mov	r3, r0
 80003ae:	b29a      	uxth	r2, r3
 80003b0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80003b4:	4917      	ldr	r1, [pc, #92]	; (8000414 <auto_fsm+0x2c8>)
 80003b6:	4818      	ldr	r0, [pc, #96]	; (8000418 <auto_fsm+0x2cc>)
 80003b8:	f002 feb1 	bl	800311e <HAL_UART_Transmit>
														  		,counter1),1000) ;
			setTimer1(1000);
 80003bc:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80003c0:	f000 fdb6 	bl	8000f30 <setTimer1>
		}


		//neu an nut 1 thi chuyen sang trang thai setting_red
		if (is_button_pressed(STATE_IDX))
 80003c4:	2000      	movs	r0, #0
 80003c6:	f000 f91b 	bl	8000600 <is_button_pressed>
 80003ca:	4603      	mov	r3, r0
 80003cc:	2b00      	cmp	r3, #0
 80003ce:	d031      	beq.n	8000434 <auto_fsm+0x2e8>
		{
			HAL_UART_Transmit(&huart2 ,(void*)str,sprintf(str,"setting_red=%d\r\n"
 80003d0:	4b0b      	ldr	r3, [pc, #44]	; (8000400 <auto_fsm+0x2b4>)
 80003d2:	681b      	ldr	r3, [r3, #0]
 80003d4:	461a      	mov	r2, r3
 80003d6:	4913      	ldr	r1, [pc, #76]	; (8000424 <auto_fsm+0x2d8>)
 80003d8:	480e      	ldr	r0, [pc, #56]	; (8000414 <auto_fsm+0x2c8>)
 80003da:	f003 f83d 	bl	8003458 <siprintf>
 80003de:	4603      	mov	r3, r0
 80003e0:	b29a      	uxth	r2, r3
 80003e2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80003e6:	490b      	ldr	r1, [pc, #44]	; (8000414 <auto_fsm+0x2c8>)
 80003e8:	480b      	ldr	r0, [pc, #44]	; (8000418 <auto_fsm+0x2cc>)
 80003ea:	f002 fe98 	bl	800311e <HAL_UART_Transmit>
							,red_duration),1000) ;
			state=SETTING_RED;
 80003ee:	4b03      	ldr	r3, [pc, #12]	; (80003fc <auto_fsm+0x2b0>)
 80003f0:	2204      	movs	r2, #4
 80003f2:	601a      	str	r2, [r3, #0]

		}
		break;
 80003f4:	e01e      	b.n	8000434 <auto_fsm+0x2e8>
	default:
		break;
 80003f6:	bf00      	nop
 80003f8:	e01d      	b.n	8000436 <auto_fsm+0x2ea>
 80003fa:	bf00      	nop
 80003fc:	2000011c 	.word	0x2000011c
 8000400:	20000110 	.word	0x20000110
 8000404:	20000114 	.word	0x20000114
 8000408:	20000118 	.word	0x20000118
 800040c:	2000010c 	.word	0x2000010c
 8000410:	08003d64 	.word	0x08003d64
 8000414:	200000d8 	.word	0x200000d8
 8000418:	200001c0 	.word	0x200001c0
 800041c:	20000204 	.word	0x20000204
 8000420:	08003d70 	.word	0x08003d70
 8000424:	08003d7c 	.word	0x08003d7c
 8000428:	08003d90 	.word	0x08003d90
		break;
 800042c:	bf00      	nop
 800042e:	e002      	b.n	8000436 <auto_fsm+0x2ea>
		break;
 8000430:	bf00      	nop
 8000432:	e000      	b.n	8000436 <auto_fsm+0x2ea>
		break;
 8000434:	bf00      	nop
	}
}
 8000436:	bf00      	nop
 8000438:	bd80      	pop	{r7, pc}
 800043a:	bf00      	nop

0800043c <set_color_light1>:


#include "hardware_layer.h"
#include "main.h"
#include "stdio.h"
void set_color_light1(int color){
 800043c:	b580      	push	{r7, lr}
 800043e:	b082      	sub	sp, #8
 8000440:	af00      	add	r7, sp, #0
 8000442:	6078      	str	r0, [r7, #4]
	switch (color){
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	2b03      	cmp	r3, #3
 8000448:	d83a      	bhi.n	80004c0 <set_color_light1+0x84>
 800044a:	a201      	add	r2, pc, #4	; (adr r2, 8000450 <set_color_light1+0x14>)
 800044c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000450:	08000461 	.word	0x08000461
 8000454:	08000479 	.word	0x08000479
 8000458:	080004a9 	.word	0x080004a9
 800045c:	08000491 	.word	0x08000491
	case 0://khong mau
		HAL_GPIO_WritePin(Light1_1_GPIO_Port, Light1_1_Pin, RESET);
 8000460:	2200      	movs	r2, #0
 8000462:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000466:	4819      	ldr	r0, [pc, #100]	; (80004cc <set_color_light1+0x90>)
 8000468:	f001 fa83 	bl	8001972 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(Light1_2_GPIO_Port, Light1_2_Pin, RESET);
 800046c:	2200      	movs	r2, #0
 800046e:	2108      	movs	r1, #8
 8000470:	4817      	ldr	r0, [pc, #92]	; (80004d0 <set_color_light1+0x94>)
 8000472:	f001 fa7e 	bl	8001972 <HAL_GPIO_WritePin>
		break;
 8000476:	e024      	b.n	80004c2 <set_color_light1+0x86>
	case DO://mau do
		HAL_GPIO_WritePin(Light1_1_GPIO_Port, Light1_1_Pin, SET);
 8000478:	2201      	movs	r2, #1
 800047a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800047e:	4813      	ldr	r0, [pc, #76]	; (80004cc <set_color_light1+0x90>)
 8000480:	f001 fa77 	bl	8001972 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(Light1_2_GPIO_Port, Light1_2_Pin, RESET);
 8000484:	2200      	movs	r2, #0
 8000486:	2108      	movs	r1, #8
 8000488:	4811      	ldr	r0, [pc, #68]	; (80004d0 <set_color_light1+0x94>)
 800048a:	f001 fa72 	bl	8001972 <HAL_GPIO_WritePin>
		break;
 800048e:	e018      	b.n	80004c2 <set_color_light1+0x86>
	case XANH://mau xanh
		HAL_GPIO_WritePin(Light1_1_GPIO_Port, Light1_1_Pin, RESET);
 8000490:	2200      	movs	r2, #0
 8000492:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000496:	480d      	ldr	r0, [pc, #52]	; (80004cc <set_color_light1+0x90>)
 8000498:	f001 fa6b 	bl	8001972 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(Light1_2_GPIO_Port, Light1_2_Pin, SET);
 800049c:	2201      	movs	r2, #1
 800049e:	2108      	movs	r1, #8
 80004a0:	480b      	ldr	r0, [pc, #44]	; (80004d0 <set_color_light1+0x94>)
 80004a2:	f001 fa66 	bl	8001972 <HAL_GPIO_WritePin>
		break;
 80004a6:	e00c      	b.n	80004c2 <set_color_light1+0x86>
	case VANG://mau vang
		HAL_GPIO_WritePin(Light1_1_GPIO_Port, Light1_1_Pin, SET);
 80004a8:	2201      	movs	r2, #1
 80004aa:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80004ae:	4807      	ldr	r0, [pc, #28]	; (80004cc <set_color_light1+0x90>)
 80004b0:	f001 fa5f 	bl	8001972 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(Light1_2_GPIO_Port, Light1_2_Pin, SET);
 80004b4:	2201      	movs	r2, #1
 80004b6:	2108      	movs	r1, #8
 80004b8:	4805      	ldr	r0, [pc, #20]	; (80004d0 <set_color_light1+0x94>)
 80004ba:	f001 fa5a 	bl	8001972 <HAL_GPIO_WritePin>
		break;
 80004be:	e000      	b.n	80004c2 <set_color_light1+0x86>
	default:
		break;
 80004c0:	bf00      	nop
	}
}
 80004c2:	bf00      	nop
 80004c4:	3708      	adds	r7, #8
 80004c6:	46bd      	mov	sp, r7
 80004c8:	bd80      	pop	{r7, pc}
 80004ca:	bf00      	nop
 80004cc:	40010800 	.word	0x40010800
 80004d0:	40010c00 	.word	0x40010c00

080004d4 <set_color_light2>:

void set_color_light2(int color){
 80004d4:	b580      	push	{r7, lr}
 80004d6:	b082      	sub	sp, #8
 80004d8:	af00      	add	r7, sp, #0
 80004da:	6078      	str	r0, [r7, #4]
	switch (color){
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	2b03      	cmp	r3, #3
 80004e0:	d836      	bhi.n	8000550 <set_color_light2+0x7c>
 80004e2:	a201      	add	r2, pc, #4	; (adr r2, 80004e8 <set_color_light2+0x14>)
 80004e4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80004e8:	080004f9 	.word	0x080004f9
 80004ec:	0800050f 	.word	0x0800050f
 80004f0:	0800053b 	.word	0x0800053b
 80004f4:	08000525 	.word	0x08000525
		case 0://khong mau
			HAL_GPIO_WritePin(Light2_1_GPIO_Port, Light2_1_Pin, RESET);
 80004f8:	2200      	movs	r2, #0
 80004fa:	2110      	movs	r1, #16
 80004fc:	4817      	ldr	r0, [pc, #92]	; (800055c <set_color_light2+0x88>)
 80004fe:	f001 fa38 	bl	8001972 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Light2_2_GPIO_Port, Light2_2_Pin, RESET);
 8000502:	2200      	movs	r2, #0
 8000504:	2120      	movs	r1, #32
 8000506:	4815      	ldr	r0, [pc, #84]	; (800055c <set_color_light2+0x88>)
 8000508:	f001 fa33 	bl	8001972 <HAL_GPIO_WritePin>
			break;
 800050c:	e021      	b.n	8000552 <set_color_light2+0x7e>
		case DO://mau do
			HAL_GPIO_WritePin(Light2_1_GPIO_Port, Light2_1_Pin, RESET);
 800050e:	2200      	movs	r2, #0
 8000510:	2110      	movs	r1, #16
 8000512:	4812      	ldr	r0, [pc, #72]	; (800055c <set_color_light2+0x88>)
 8000514:	f001 fa2d 	bl	8001972 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Light2_2_GPIO_Port, Light2_2_Pin, SET);
 8000518:	2201      	movs	r2, #1
 800051a:	2120      	movs	r1, #32
 800051c:	480f      	ldr	r0, [pc, #60]	; (800055c <set_color_light2+0x88>)
 800051e:	f001 fa28 	bl	8001972 <HAL_GPIO_WritePin>
			break;
 8000522:	e016      	b.n	8000552 <set_color_light2+0x7e>
		case XANH://mau xanh
			HAL_GPIO_WritePin(Light2_1_GPIO_Port, Light2_1_Pin, SET);
 8000524:	2201      	movs	r2, #1
 8000526:	2110      	movs	r1, #16
 8000528:	480c      	ldr	r0, [pc, #48]	; (800055c <set_color_light2+0x88>)
 800052a:	f001 fa22 	bl	8001972 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Light2_2_GPIO_Port, Light2_2_Pin, RESET);
 800052e:	2200      	movs	r2, #0
 8000530:	2120      	movs	r1, #32
 8000532:	480a      	ldr	r0, [pc, #40]	; (800055c <set_color_light2+0x88>)
 8000534:	f001 fa1d 	bl	8001972 <HAL_GPIO_WritePin>
			break;
 8000538:	e00b      	b.n	8000552 <set_color_light2+0x7e>
		case VANG://mau vang
			HAL_GPIO_WritePin(Light2_1_GPIO_Port, Light2_1_Pin, SET);
 800053a:	2201      	movs	r2, #1
 800053c:	2110      	movs	r1, #16
 800053e:	4807      	ldr	r0, [pc, #28]	; (800055c <set_color_light2+0x88>)
 8000540:	f001 fa17 	bl	8001972 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Light2_2_GPIO_Port, Light2_2_Pin, SET);
 8000544:	2201      	movs	r2, #1
 8000546:	2120      	movs	r1, #32
 8000548:	4804      	ldr	r0, [pc, #16]	; (800055c <set_color_light2+0x88>)
 800054a:	f001 fa12 	bl	8001972 <HAL_GPIO_WritePin>
			break;
 800054e:	e000      	b.n	8000552 <set_color_light2+0x7e>
		default:
			break;
 8000550:	bf00      	nop
		}
}
 8000552:	bf00      	nop
 8000554:	3708      	adds	r7, #8
 8000556:	46bd      	mov	sp, r7
 8000558:	bd80      	pop	{r7, pc}
 800055a:	bf00      	nop
 800055c:	40010c00 	.word	0x40010c00

08000560 <set_color_pedestrian_light>:

void set_color_pedestrian_light(int color){
 8000560:	b580      	push	{r7, lr}
 8000562:	b082      	sub	sp, #8
 8000564:	af00      	add	r7, sp, #0
 8000566:	6078      	str	r0, [r7, #4]
	switch (color){
 8000568:	687b      	ldr	r3, [r7, #4]
 800056a:	2b03      	cmp	r3, #3
 800056c:	d83e      	bhi.n	80005ec <set_color_pedestrian_light+0x8c>
 800056e:	a201      	add	r2, pc, #4	; (adr r2, 8000574 <set_color_pedestrian_light+0x14>)
 8000570:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000574:	08000585 	.word	0x08000585
 8000578:	0800059f 	.word	0x0800059f
 800057c:	080005d3 	.word	0x080005d3
 8000580:	080005b9 	.word	0x080005b9
		case 0://khong mau
			HAL_GPIO_WritePin(Pedes_light1_GPIO_Port, Pedes_light1_Pin, RESET);
 8000584:	2200      	movs	r2, #0
 8000586:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800058a:	481b      	ldr	r0, [pc, #108]	; (80005f8 <set_color_pedestrian_light+0x98>)
 800058c:	f001 f9f1 	bl	8001972 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Pedes_light2_GPIO_Port, Pedes_light2_Pin, RESET);
 8000590:	2200      	movs	r2, #0
 8000592:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000596:	4819      	ldr	r0, [pc, #100]	; (80005fc <set_color_pedestrian_light+0x9c>)
 8000598:	f001 f9eb 	bl	8001972 <HAL_GPIO_WritePin>
			break;
 800059c:	e027      	b.n	80005ee <set_color_pedestrian_light+0x8e>
		case DO://mau do
			HAL_GPIO_WritePin(Pedes_light1_GPIO_Port, Pedes_light1_Pin, SET);
 800059e:	2201      	movs	r2, #1
 80005a0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80005a4:	4814      	ldr	r0, [pc, #80]	; (80005f8 <set_color_pedestrian_light+0x98>)
 80005a6:	f001 f9e4 	bl	8001972 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Pedes_light2_GPIO_Port, Pedes_light2_Pin, RESET);
 80005aa:	2200      	movs	r2, #0
 80005ac:	f44f 7180 	mov.w	r1, #256	; 0x100
 80005b0:	4812      	ldr	r0, [pc, #72]	; (80005fc <set_color_pedestrian_light+0x9c>)
 80005b2:	f001 f9de 	bl	8001972 <HAL_GPIO_WritePin>
			break;
 80005b6:	e01a      	b.n	80005ee <set_color_pedestrian_light+0x8e>
		case XANH://mau xanh
			HAL_GPIO_WritePin(Pedes_light1_GPIO_Port, Pedes_light1_Pin, RESET);
 80005b8:	2200      	movs	r2, #0
 80005ba:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80005be:	480e      	ldr	r0, [pc, #56]	; (80005f8 <set_color_pedestrian_light+0x98>)
 80005c0:	f001 f9d7 	bl	8001972 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Pedes_light2_GPIO_Port, Pedes_light2_Pin, SET);
 80005c4:	2201      	movs	r2, #1
 80005c6:	f44f 7180 	mov.w	r1, #256	; 0x100
 80005ca:	480c      	ldr	r0, [pc, #48]	; (80005fc <set_color_pedestrian_light+0x9c>)
 80005cc:	f001 f9d1 	bl	8001972 <HAL_GPIO_WritePin>
			break;
 80005d0:	e00d      	b.n	80005ee <set_color_pedestrian_light+0x8e>
		case VANG://mau vang
			HAL_GPIO_WritePin(Pedes_light1_GPIO_Port, Pedes_light1_Pin, SET);
 80005d2:	2201      	movs	r2, #1
 80005d4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80005d8:	4807      	ldr	r0, [pc, #28]	; (80005f8 <set_color_pedestrian_light+0x98>)
 80005da:	f001 f9ca 	bl	8001972 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Pedes_light2_GPIO_Port, Pedes_light2_Pin, SET);
 80005de:	2201      	movs	r2, #1
 80005e0:	f44f 7180 	mov.w	r1, #256	; 0x100
 80005e4:	4805      	ldr	r0, [pc, #20]	; (80005fc <set_color_pedestrian_light+0x9c>)
 80005e6:	f001 f9c4 	bl	8001972 <HAL_GPIO_WritePin>
			break;
 80005ea:	e000      	b.n	80005ee <set_color_pedestrian_light+0x8e>
		default:
			break;
 80005ec:	bf00      	nop
		}
}
 80005ee:	bf00      	nop
 80005f0:	3708      	adds	r7, #8
 80005f2:	46bd      	mov	sp, r7
 80005f4:	bd80      	pop	{r7, pc}
 80005f6:	bf00      	nop
 80005f8:	40010c00 	.word	0x40010c00
 80005fc:	40010800 	.word	0x40010800

08000600 <is_button_pressed>:
int KeyReg2[NO_OF_BUTTONS] = {NORMAL_STATE};
int KeyReg3[NO_OF_BUTTONS] = {NORMAL_STATE};
int FlagFor3secPressed[NO_OF_BUTTONS] = {0};
int TimeForKeyPress = 300;

int is_button_pressed(int index){
 8000600:	b480      	push	{r7}
 8000602:	b083      	sub	sp, #12
 8000604:	af00      	add	r7, sp, #0
 8000606:	6078      	str	r0, [r7, #4]
	if(button_flag[index]==1){
 8000608:	4a09      	ldr	r2, [pc, #36]	; (8000630 <is_button_pressed+0x30>)
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000610:	2b01      	cmp	r3, #1
 8000612:	d106      	bne.n	8000622 <is_button_pressed+0x22>
		button_flag[index]=0;
 8000614:	4a06      	ldr	r2, [pc, #24]	; (8000630 <is_button_pressed+0x30>)
 8000616:	687b      	ldr	r3, [r7, #4]
 8000618:	2100      	movs	r1, #0
 800061a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		return 1;
 800061e:	2301      	movs	r3, #1
 8000620:	e000      	b.n	8000624 <is_button_pressed+0x24>
	}
	return 0;
 8000622:	2300      	movs	r3, #0
}
 8000624:	4618      	mov	r0, r3
 8000626:	370c      	adds	r7, #12
 8000628:	46bd      	mov	sp, r7
 800062a:	bc80      	pop	{r7}
 800062c:	4770      	bx	lr
 800062e:	bf00      	nop
 8000630:	20000120 	.word	0x20000120

08000634 <read_pin>:
void read_pin(int i){
 8000634:	b580      	push	{r7, lr}
 8000636:	b082      	sub	sp, #8
 8000638:	af00      	add	r7, sp, #0
 800063a:	6078      	str	r0, [r7, #4]
	switch (i){
 800063c:	687b      	ldr	r3, [r7, #4]
 800063e:	2b03      	cmp	r3, #3
 8000640:	d82e      	bhi.n	80006a0 <read_pin+0x6c>
 8000642:	a201      	add	r2, pc, #4	; (adr r2, 8000648 <read_pin+0x14>)
 8000644:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000648:	08000659 	.word	0x08000659
 800064c:	0800066b 	.word	0x0800066b
 8000650:	0800067d 	.word	0x0800067d
 8000654:	0800068f 	.word	0x0800068f
	case 0:
		KeyReg2[0]=HAL_GPIO_ReadPin(Button1_GPIO_Port, Button1_Pin);
 8000658:	2102      	movs	r1, #2
 800065a:	4814      	ldr	r0, [pc, #80]	; (80006ac <read_pin+0x78>)
 800065c:	f001 f972 	bl	8001944 <HAL_GPIO_ReadPin>
 8000660:	4603      	mov	r3, r0
 8000662:	461a      	mov	r2, r3
 8000664:	4b12      	ldr	r3, [pc, #72]	; (80006b0 <read_pin+0x7c>)
 8000666:	601a      	str	r2, [r3, #0]
		break;
 8000668:	e01b      	b.n	80006a2 <read_pin+0x6e>
	case 1:
		KeyReg2[1]=HAL_GPIO_ReadPin(Button2_GPIO_Port, Button2_Pin);
 800066a:	2110      	movs	r1, #16
 800066c:	480f      	ldr	r0, [pc, #60]	; (80006ac <read_pin+0x78>)
 800066e:	f001 f969 	bl	8001944 <HAL_GPIO_ReadPin>
 8000672:	4603      	mov	r3, r0
 8000674:	461a      	mov	r2, r3
 8000676:	4b0e      	ldr	r3, [pc, #56]	; (80006b0 <read_pin+0x7c>)
 8000678:	605a      	str	r2, [r3, #4]
		break;
 800067a:	e012      	b.n	80006a2 <read_pin+0x6e>
	case 2:
		KeyReg2[2]=HAL_GPIO_ReadPin(Button3_GPIO_Port, Button3_Pin);
 800067c:	2101      	movs	r1, #1
 800067e:	480d      	ldr	r0, [pc, #52]	; (80006b4 <read_pin+0x80>)
 8000680:	f001 f960 	bl	8001944 <HAL_GPIO_ReadPin>
 8000684:	4603      	mov	r3, r0
 8000686:	461a      	mov	r2, r3
 8000688:	4b09      	ldr	r3, [pc, #36]	; (80006b0 <read_pin+0x7c>)
 800068a:	609a      	str	r2, [r3, #8]
		break;
 800068c:	e009      	b.n	80006a2 <read_pin+0x6e>
	case 3:
		KeyReg2[3]=HAL_GPIO_ReadPin(Pedes_button_GPIO_Port, Pedes_button_Pin);
 800068e:	2101      	movs	r1, #1
 8000690:	4806      	ldr	r0, [pc, #24]	; (80006ac <read_pin+0x78>)
 8000692:	f001 f957 	bl	8001944 <HAL_GPIO_ReadPin>
 8000696:	4603      	mov	r3, r0
 8000698:	461a      	mov	r2, r3
 800069a:	4b05      	ldr	r3, [pc, #20]	; (80006b0 <read_pin+0x7c>)
 800069c:	60da      	str	r2, [r3, #12]
				break;
 800069e:	e000      	b.n	80006a2 <read_pin+0x6e>
	default:
		break;
 80006a0:	bf00      	nop
	}
}
 80006a2:	bf00      	nop
 80006a4:	3708      	adds	r7, #8
 80006a6:	46bd      	mov	sp, r7
 80006a8:	bd80      	pop	{r7, pc}
 80006aa:	bf00      	nop
 80006ac:	40010800 	.word	0x40010800
 80006b0:	20000028 	.word	0x20000028
 80006b4:	40010c00 	.word	0x40010c00

080006b8 <input_reading>:

void input_reading(){
 80006b8:	b580      	push	{r7, lr}
 80006ba:	b082      	sub	sp, #8
 80006bc:	af00      	add	r7, sp, #0
for(int i=0;i<4;i++){
 80006be:	2300      	movs	r3, #0
 80006c0:	607b      	str	r3, [r7, #4]
 80006c2:	e05d      	b.n	8000780 <input_reading+0xc8>
	KeyReg0[i]=KeyReg1[i];
 80006c4:	4a32      	ldr	r2, [pc, #200]	; (8000790 <input_reading+0xd8>)
 80006c6:	687b      	ldr	r3, [r7, #4]
 80006c8:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80006cc:	4931      	ldr	r1, [pc, #196]	; (8000794 <input_reading+0xdc>)
 80006ce:	687b      	ldr	r3, [r7, #4]
 80006d0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	KeyReg1[i]=KeyReg2[i];
 80006d4:	4a30      	ldr	r2, [pc, #192]	; (8000798 <input_reading+0xe0>)
 80006d6:	687b      	ldr	r3, [r7, #4]
 80006d8:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80006dc:	492c      	ldr	r1, [pc, #176]	; (8000790 <input_reading+0xd8>)
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	//sua lai ham readpin
	read_pin(i);
 80006e4:	6878      	ldr	r0, [r7, #4]
 80006e6:	f7ff ffa5 	bl	8000634 <read_pin>
	if((KeyReg0[i]==KeyReg1[i])&&(KeyReg1[i]==KeyReg2[i])){
 80006ea:	4a2a      	ldr	r2, [pc, #168]	; (8000794 <input_reading+0xdc>)
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80006f2:	4927      	ldr	r1, [pc, #156]	; (8000790 <input_reading+0xd8>)
 80006f4:	687b      	ldr	r3, [r7, #4]
 80006f6:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80006fa:	429a      	cmp	r2, r3
 80006fc:	d13d      	bne.n	800077a <input_reading+0xc2>
 80006fe:	4a24      	ldr	r2, [pc, #144]	; (8000790 <input_reading+0xd8>)
 8000700:	687b      	ldr	r3, [r7, #4]
 8000702:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000706:	4924      	ldr	r1, [pc, #144]	; (8000798 <input_reading+0xe0>)
 8000708:	687b      	ldr	r3, [r7, #4]
 800070a:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800070e:	429a      	cmp	r2, r3
 8000710:	d133      	bne.n	800077a <input_reading+0xc2>
		if(KeyReg3[i]!=KeyReg2[i]){
 8000712:	4a22      	ldr	r2, [pc, #136]	; (800079c <input_reading+0xe4>)
 8000714:	687b      	ldr	r3, [r7, #4]
 8000716:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800071a:	491f      	ldr	r1, [pc, #124]	; (8000798 <input_reading+0xe0>)
 800071c:	687b      	ldr	r3, [r7, #4]
 800071e:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8000722:	429a      	cmp	r2, r3
 8000724:	d017      	beq.n	8000756 <input_reading+0x9e>
			KeyReg3[i]=KeyReg2[i];
 8000726:	4a1c      	ldr	r2, [pc, #112]	; (8000798 <input_reading+0xe0>)
 8000728:	687b      	ldr	r3, [r7, #4]
 800072a:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800072e:	491b      	ldr	r1, [pc, #108]	; (800079c <input_reading+0xe4>)
 8000730:	687b      	ldr	r3, [r7, #4]
 8000732:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
			if(KeyReg2[i]==PRESSED_STATE){
 8000736:	4a18      	ldr	r2, [pc, #96]	; (8000798 <input_reading+0xe0>)
 8000738:	687b      	ldr	r3, [r7, #4]
 800073a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800073e:	2b00      	cmp	r3, #0
 8000740:	d11b      	bne.n	800077a <input_reading+0xc2>
				button_flag[i]=1;
 8000742:	4a17      	ldr	r2, [pc, #92]	; (80007a0 <input_reading+0xe8>)
 8000744:	687b      	ldr	r3, [r7, #4]
 8000746:	2101      	movs	r1, #1
 8000748:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

				//after 3 sec button change to pressed_more_than_3sec_state
				TimeForKeyPress=300;
 800074c:	4b15      	ldr	r3, [pc, #84]	; (80007a4 <input_reading+0xec>)
 800074e:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8000752:	601a      	str	r2, [r3, #0]
 8000754:	e011      	b.n	800077a <input_reading+0xc2>
				}
		}else{
			TimeForKeyPress--;
 8000756:	4b13      	ldr	r3, [pc, #76]	; (80007a4 <input_reading+0xec>)
 8000758:	681b      	ldr	r3, [r3, #0]
 800075a:	3b01      	subs	r3, #1
 800075c:	4a11      	ldr	r2, [pc, #68]	; (80007a4 <input_reading+0xec>)
 800075e:	6013      	str	r3, [r2, #0]
			if(TimeForKeyPress==0) {
 8000760:	4b10      	ldr	r3, [pc, #64]	; (80007a4 <input_reading+0xec>)
 8000762:	681b      	ldr	r3, [r3, #0]
 8000764:	2b00      	cmp	r3, #0
 8000766:	d108      	bne.n	800077a <input_reading+0xc2>
				//pressed_more_than_3sec_state
			    //PressedKeyProcess(index);
				if(KeyReg2[i]==PRESSED_STATE) //TODO
 8000768:	4a0b      	ldr	r2, [pc, #44]	; (8000798 <input_reading+0xe0>)
 800076a:	687b      	ldr	r3, [r7, #4]
 800076c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000770:	2b00      	cmp	r3, #0
 8000772:	d102      	bne.n	800077a <input_reading+0xc2>
				TimeForKeyPress=100;
 8000774:	4b0b      	ldr	r3, [pc, #44]	; (80007a4 <input_reading+0xec>)
 8000776:	2264      	movs	r2, #100	; 0x64
 8000778:	601a      	str	r2, [r3, #0]
for(int i=0;i<4;i++){
 800077a:	687b      	ldr	r3, [r7, #4]
 800077c:	3301      	adds	r3, #1
 800077e:	607b      	str	r3, [r7, #4]
 8000780:	687b      	ldr	r3, [r7, #4]
 8000782:	2b03      	cmp	r3, #3
 8000784:	dd9e      	ble.n	80006c4 <input_reading+0xc>
				}
			}
	}//end if
}//end for

}
 8000786:	bf00      	nop
 8000788:	bf00      	nop
 800078a:	3708      	adds	r7, #8
 800078c:	46bd      	mov	sp, r7
 800078e:	bd80      	pop	{r7, pc}
 8000790:	20000018 	.word	0x20000018
 8000794:	20000008 	.word	0x20000008
 8000798:	20000028 	.word	0x20000028
 800079c:	20000038 	.word	0x20000038
 80007a0:	20000120 	.word	0x20000120
 80007a4:	20000048 	.word	0x20000048

080007a8 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void HAL_TIM_PeriodElapsedCallback ( TIM_HandleTypeDef * htim ){
 80007a8:	b580      	push	{r7, lr}
 80007aa:	b082      	sub	sp, #8
 80007ac:	af00      	add	r7, sp, #0
 80007ae:	6078      	str	r0, [r7, #4]
	timer1_run();
 80007b0:	f000 fbda 	bl	8000f68 <timer1_run>
	timer2_run();
 80007b4:	f000 fbf6 	bl	8000fa4 <timer2_run>
	timer3_run();
 80007b8:	f000 fc2e 	bl	8001018 <timer3_run>
	input_reading();
 80007bc:	f7ff ff7c 	bl	80006b8 <input_reading>
}
 80007c0:	bf00      	nop
 80007c2:	3708      	adds	r7, #8
 80007c4:	46bd      	mov	sp, r7
 80007c6:	bd80      	pop	{r7, pc}

080007c8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80007c8:	b580      	push	{r7, lr}
 80007ca:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80007cc:	f000 fdc6 	bl	800135c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80007d0:	f000 f848 	bl	8000864 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80007d4:	f000 f958 	bl	8000a88 <MX_GPIO_Init>
  MX_TIM2_Init();
 80007d8:	f000 f886 	bl	80008e8 <MX_TIM2_Init>
  MX_TIM3_Init();
 80007dc:	f000 f8d0 	bl	8000980 <MX_TIM3_Init>
  MX_USART2_UART_Init();
 80007e0:	f000 f928 	bl	8000a34 <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 80007e4:	2100      	movs	r1, #0
 80007e6:	4816      	ldr	r0, [pc, #88]	; (8000840 <main+0x78>)
 80007e8:	f001 fde8 	bl	80023bc <HAL_TIM_PWM_Start>
  HAL_TIM_Base_Start_IT(&htim2);
 80007ec:	4815      	ldr	r0, [pc, #84]	; (8000844 <main+0x7c>)
 80007ee:	f001 fd43 	bl	8002278 <HAL_TIM_Base_Start_IT>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  setTimer1(1000);
 80007f2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80007f6:	f000 fb9b 	bl	8000f30 <setTimer1>
  red_duration=5;
 80007fa:	4b13      	ldr	r3, [pc, #76]	; (8000848 <main+0x80>)
 80007fc:	2205      	movs	r2, #5
 80007fe:	601a      	str	r2, [r3, #0]
  green_duration=3;
 8000800:	4b12      	ldr	r3, [pc, #72]	; (800084c <main+0x84>)
 8000802:	2203      	movs	r2, #3
 8000804:	601a      	str	r2, [r3, #0]
  yellow_duration=2;
 8000806:	4b12      	ldr	r3, [pc, #72]	; (8000850 <main+0x88>)
 8000808:	2202      	movs	r2, #2
 800080a:	601a      	str	r2, [r3, #0]
  counter1=5;
 800080c:	4b11      	ldr	r3, [pc, #68]	; (8000854 <main+0x8c>)
 800080e:	2205      	movs	r2, #5
 8000810:	601a      	str	r2, [r3, #0]
  state=INIT;
 8000812:	4b11      	ldr	r3, [pc, #68]	; (8000858 <main+0x90>)
 8000814:	2200      	movs	r2, #0
 8000816:	601a      	str	r2, [r3, #0]
  manual_state=1;
 8000818:	4b10      	ldr	r3, [pc, #64]	; (800085c <main+0x94>)
 800081a:	2201      	movs	r2, #1
 800081c:	601a      	str	r2, [r3, #0]
  pedes_state=10;
 800081e:	4b10      	ldr	r3, [pc, #64]	; (8000860 <main+0x98>)
 8000820:	220a      	movs	r2, #10
 8000822:	601a      	str	r2, [r3, #0]
  setTimer3(500);
 8000824:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000828:	f000 fbda 	bl	8000fe0 <setTimer3>
  while (1)
  {
	  pedestrian_fsm();
 800082c:	f000 f9fe 	bl	8000c2c <pedestrian_fsm>
	  auto_fsm();
 8000830:	f7ff fc8c 	bl	800014c <auto_fsm>
	  setting_fsm();
 8000834:	f000 fa92 	bl	8000d5c <setting_fsm>
	  manual_fsm();
 8000838:	f000 f9a6 	bl	8000b88 <manual_fsm>
	  pedestrian_fsm();
 800083c:	e7f6      	b.n	800082c <main+0x64>
 800083e:	bf00      	nop
 8000840:	20000178 	.word	0x20000178
 8000844:	20000130 	.word	0x20000130
 8000848:	20000110 	.word	0x20000110
 800084c:	20000114 	.word	0x20000114
 8000850:	20000118 	.word	0x20000118
 8000854:	2000010c 	.word	0x2000010c
 8000858:	2000011c 	.word	0x2000011c
 800085c:	20000000 	.word	0x20000000
 8000860:	20000004 	.word	0x20000004

08000864 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000864:	b580      	push	{r7, lr}
 8000866:	b090      	sub	sp, #64	; 0x40
 8000868:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800086a:	f107 0318 	add.w	r3, r7, #24
 800086e:	2228      	movs	r2, #40	; 0x28
 8000870:	2100      	movs	r1, #0
 8000872:	4618      	mov	r0, r3
 8000874:	f002 fde8 	bl	8003448 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000878:	1d3b      	adds	r3, r7, #4
 800087a:	2200      	movs	r2, #0
 800087c:	601a      	str	r2, [r3, #0]
 800087e:	605a      	str	r2, [r3, #4]
 8000880:	609a      	str	r2, [r3, #8]
 8000882:	60da      	str	r2, [r3, #12]
 8000884:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000886:	2302      	movs	r3, #2
 8000888:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800088a:	2301      	movs	r3, #1
 800088c:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800088e:	2310      	movs	r3, #16
 8000890:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000892:	2302      	movs	r3, #2
 8000894:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 8000896:	2300      	movs	r3, #0
 8000898:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 800089a:	f44f 1360 	mov.w	r3, #3670016	; 0x380000
 800089e:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80008a0:	f107 0318 	add.w	r3, r7, #24
 80008a4:	4618      	mov	r0, r3
 80008a6:	f001 f87d 	bl	80019a4 <HAL_RCC_OscConfig>
 80008aa:	4603      	mov	r3, r0
 80008ac:	2b00      	cmp	r3, #0
 80008ae:	d001      	beq.n	80008b4 <SystemClock_Config+0x50>
  {
    Error_Handler();
 80008b0:	f000 f964 	bl	8000b7c <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80008b4:	230f      	movs	r3, #15
 80008b6:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80008b8:	2302      	movs	r3, #2
 80008ba:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80008bc:	2300      	movs	r3, #0
 80008be:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80008c0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80008c4:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80008c6:	2300      	movs	r3, #0
 80008c8:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 80008ca:	1d3b      	adds	r3, r7, #4
 80008cc:	2102      	movs	r1, #2
 80008ce:	4618      	mov	r0, r3
 80008d0:	f001 faea 	bl	8001ea8 <HAL_RCC_ClockConfig>
 80008d4:	4603      	mov	r3, r0
 80008d6:	2b00      	cmp	r3, #0
 80008d8:	d001      	beq.n	80008de <SystemClock_Config+0x7a>
  {
    Error_Handler();
 80008da:	f000 f94f 	bl	8000b7c <Error_Handler>
  }
}
 80008de:	bf00      	nop
 80008e0:	3740      	adds	r7, #64	; 0x40
 80008e2:	46bd      	mov	sp, r7
 80008e4:	bd80      	pop	{r7, pc}
	...

080008e8 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80008e8:	b580      	push	{r7, lr}
 80008ea:	b086      	sub	sp, #24
 80008ec:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80008ee:	f107 0308 	add.w	r3, r7, #8
 80008f2:	2200      	movs	r2, #0
 80008f4:	601a      	str	r2, [r3, #0]
 80008f6:	605a      	str	r2, [r3, #4]
 80008f8:	609a      	str	r2, [r3, #8]
 80008fa:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80008fc:	463b      	mov	r3, r7
 80008fe:	2200      	movs	r2, #0
 8000900:	601a      	str	r2, [r3, #0]
 8000902:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8000904:	4b1d      	ldr	r3, [pc, #116]	; (800097c <MX_TIM2_Init+0x94>)
 8000906:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800090a:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 63;
 800090c:	4b1b      	ldr	r3, [pc, #108]	; (800097c <MX_TIM2_Init+0x94>)
 800090e:	223f      	movs	r2, #63	; 0x3f
 8000910:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000912:	4b1a      	ldr	r3, [pc, #104]	; (800097c <MX_TIM2_Init+0x94>)
 8000914:	2200      	movs	r2, #0
 8000916:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 9999;
 8000918:	4b18      	ldr	r3, [pc, #96]	; (800097c <MX_TIM2_Init+0x94>)
 800091a:	f242 720f 	movw	r2, #9999	; 0x270f
 800091e:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000920:	4b16      	ldr	r3, [pc, #88]	; (800097c <MX_TIM2_Init+0x94>)
 8000922:	2200      	movs	r2, #0
 8000924:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000926:	4b15      	ldr	r3, [pc, #84]	; (800097c <MX_TIM2_Init+0x94>)
 8000928:	2200      	movs	r2, #0
 800092a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800092c:	4813      	ldr	r0, [pc, #76]	; (800097c <MX_TIM2_Init+0x94>)
 800092e:	f001 fc53 	bl	80021d8 <HAL_TIM_Base_Init>
 8000932:	4603      	mov	r3, r0
 8000934:	2b00      	cmp	r3, #0
 8000936:	d001      	beq.n	800093c <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8000938:	f000 f920 	bl	8000b7c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800093c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000940:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000942:	f107 0308 	add.w	r3, r7, #8
 8000946:	4619      	mov	r1, r3
 8000948:	480c      	ldr	r0, [pc, #48]	; (800097c <MX_TIM2_Init+0x94>)
 800094a:	f001 ff9f 	bl	800288c <HAL_TIM_ConfigClockSource>
 800094e:	4603      	mov	r3, r0
 8000950:	2b00      	cmp	r3, #0
 8000952:	d001      	beq.n	8000958 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8000954:	f000 f912 	bl	8000b7c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000958:	2300      	movs	r3, #0
 800095a:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800095c:	2300      	movs	r3, #0
 800095e:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000960:	463b      	mov	r3, r7
 8000962:	4619      	mov	r1, r3
 8000964:	4805      	ldr	r0, [pc, #20]	; (800097c <MX_TIM2_Init+0x94>)
 8000966:	f002 fb1d 	bl	8002fa4 <HAL_TIMEx_MasterConfigSynchronization>
 800096a:	4603      	mov	r3, r0
 800096c:	2b00      	cmp	r3, #0
 800096e:	d001      	beq.n	8000974 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8000970:	f000 f904 	bl	8000b7c <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8000974:	bf00      	nop
 8000976:	3718      	adds	r7, #24
 8000978:	46bd      	mov	sp, r7
 800097a:	bd80      	pop	{r7, pc}
 800097c:	20000130 	.word	0x20000130

08000980 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8000980:	b580      	push	{r7, lr}
 8000982:	b08a      	sub	sp, #40	; 0x28
 8000984:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000986:	f107 0320 	add.w	r3, r7, #32
 800098a:	2200      	movs	r2, #0
 800098c:	601a      	str	r2, [r3, #0]
 800098e:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000990:	1d3b      	adds	r3, r7, #4
 8000992:	2200      	movs	r2, #0
 8000994:	601a      	str	r2, [r3, #0]
 8000996:	605a      	str	r2, [r3, #4]
 8000998:	609a      	str	r2, [r3, #8]
 800099a:	60da      	str	r2, [r3, #12]
 800099c:	611a      	str	r2, [r3, #16]
 800099e:	615a      	str	r2, [r3, #20]
 80009a0:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 80009a2:	4b22      	ldr	r3, [pc, #136]	; (8000a2c <MX_TIM3_Init+0xac>)
 80009a4:	4a22      	ldr	r2, [pc, #136]	; (8000a30 <MX_TIM3_Init+0xb0>)
 80009a6:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 63;
 80009a8:	4b20      	ldr	r3, [pc, #128]	; (8000a2c <MX_TIM3_Init+0xac>)
 80009aa:	223f      	movs	r2, #63	; 0x3f
 80009ac:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80009ae:	4b1f      	ldr	r3, [pc, #124]	; (8000a2c <MX_TIM3_Init+0xac>)
 80009b0:	2200      	movs	r2, #0
 80009b2:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 999;
 80009b4:	4b1d      	ldr	r3, [pc, #116]	; (8000a2c <MX_TIM3_Init+0xac>)
 80009b6:	f240 32e7 	movw	r2, #999	; 0x3e7
 80009ba:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80009bc:	4b1b      	ldr	r3, [pc, #108]	; (8000a2c <MX_TIM3_Init+0xac>)
 80009be:	2200      	movs	r2, #0
 80009c0:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80009c2:	4b1a      	ldr	r3, [pc, #104]	; (8000a2c <MX_TIM3_Init+0xac>)
 80009c4:	2200      	movs	r2, #0
 80009c6:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 80009c8:	4818      	ldr	r0, [pc, #96]	; (8000a2c <MX_TIM3_Init+0xac>)
 80009ca:	f001 fca7 	bl	800231c <HAL_TIM_PWM_Init>
 80009ce:	4603      	mov	r3, r0
 80009d0:	2b00      	cmp	r3, #0
 80009d2:	d001      	beq.n	80009d8 <MX_TIM3_Init+0x58>
  {
    Error_Handler();
 80009d4:	f000 f8d2 	bl	8000b7c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80009d8:	2300      	movs	r3, #0
 80009da:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80009dc:	2300      	movs	r3, #0
 80009de:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80009e0:	f107 0320 	add.w	r3, r7, #32
 80009e4:	4619      	mov	r1, r3
 80009e6:	4811      	ldr	r0, [pc, #68]	; (8000a2c <MX_TIM3_Init+0xac>)
 80009e8:	f002 fadc 	bl	8002fa4 <HAL_TIMEx_MasterConfigSynchronization>
 80009ec:	4603      	mov	r3, r0
 80009ee:	2b00      	cmp	r3, #0
 80009f0:	d001      	beq.n	80009f6 <MX_TIM3_Init+0x76>
  {
    Error_Handler();
 80009f2:	f000 f8c3 	bl	8000b7c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80009f6:	2360      	movs	r3, #96	; 0x60
 80009f8:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80009fa:	2300      	movs	r3, #0
 80009fc:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80009fe:	2300      	movs	r3, #0
 8000a00:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000a02:	2300      	movs	r3, #0
 8000a04:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8000a06:	1d3b      	adds	r3, r7, #4
 8000a08:	2200      	movs	r2, #0
 8000a0a:	4619      	mov	r1, r3
 8000a0c:	4807      	ldr	r0, [pc, #28]	; (8000a2c <MX_TIM3_Init+0xac>)
 8000a0e:	f001 fe7f 	bl	8002710 <HAL_TIM_PWM_ConfigChannel>
 8000a12:	4603      	mov	r3, r0
 8000a14:	2b00      	cmp	r3, #0
 8000a16:	d001      	beq.n	8000a1c <MX_TIM3_Init+0x9c>
  {
    Error_Handler();
 8000a18:	f000 f8b0 	bl	8000b7c <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 8000a1c:	4803      	ldr	r0, [pc, #12]	; (8000a2c <MX_TIM3_Init+0xac>)
 8000a1e:	f000 fb8d 	bl	800113c <HAL_TIM_MspPostInit>

}
 8000a22:	bf00      	nop
 8000a24:	3728      	adds	r7, #40	; 0x28
 8000a26:	46bd      	mov	sp, r7
 8000a28:	bd80      	pop	{r7, pc}
 8000a2a:	bf00      	nop
 8000a2c:	20000178 	.word	0x20000178
 8000a30:	40000400 	.word	0x40000400

08000a34 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8000a34:	b580      	push	{r7, lr}
 8000a36:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8000a38:	4b11      	ldr	r3, [pc, #68]	; (8000a80 <MX_USART2_UART_Init+0x4c>)
 8000a3a:	4a12      	ldr	r2, [pc, #72]	; (8000a84 <MX_USART2_UART_Init+0x50>)
 8000a3c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 8000a3e:	4b10      	ldr	r3, [pc, #64]	; (8000a80 <MX_USART2_UART_Init+0x4c>)
 8000a40:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8000a44:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8000a46:	4b0e      	ldr	r3, [pc, #56]	; (8000a80 <MX_USART2_UART_Init+0x4c>)
 8000a48:	2200      	movs	r2, #0
 8000a4a:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8000a4c:	4b0c      	ldr	r3, [pc, #48]	; (8000a80 <MX_USART2_UART_Init+0x4c>)
 8000a4e:	2200      	movs	r2, #0
 8000a50:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000a52:	4b0b      	ldr	r3, [pc, #44]	; (8000a80 <MX_USART2_UART_Init+0x4c>)
 8000a54:	2200      	movs	r2, #0
 8000a56:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8000a58:	4b09      	ldr	r3, [pc, #36]	; (8000a80 <MX_USART2_UART_Init+0x4c>)
 8000a5a:	220c      	movs	r2, #12
 8000a5c:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000a5e:	4b08      	ldr	r3, [pc, #32]	; (8000a80 <MX_USART2_UART_Init+0x4c>)
 8000a60:	2200      	movs	r2, #0
 8000a62:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000a64:	4b06      	ldr	r3, [pc, #24]	; (8000a80 <MX_USART2_UART_Init+0x4c>)
 8000a66:	2200      	movs	r2, #0
 8000a68:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8000a6a:	4805      	ldr	r0, [pc, #20]	; (8000a80 <MX_USART2_UART_Init+0x4c>)
 8000a6c:	f002 fb0a 	bl	8003084 <HAL_UART_Init>
 8000a70:	4603      	mov	r3, r0
 8000a72:	2b00      	cmp	r3, #0
 8000a74:	d001      	beq.n	8000a7a <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8000a76:	f000 f881 	bl	8000b7c <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8000a7a:	bf00      	nop
 8000a7c:	bd80      	pop	{r7, pc}
 8000a7e:	bf00      	nop
 8000a80:	200001c0 	.word	0x200001c0
 8000a84:	40004400 	.word	0x40004400

08000a88 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000a88:	b580      	push	{r7, lr}
 8000a8a:	b088      	sub	sp, #32
 8000a8c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000a8e:	f107 0310 	add.w	r3, r7, #16
 8000a92:	2200      	movs	r2, #0
 8000a94:	601a      	str	r2, [r3, #0]
 8000a96:	605a      	str	r2, [r3, #4]
 8000a98:	609a      	str	r2, [r3, #8]
 8000a9a:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000a9c:	4b34      	ldr	r3, [pc, #208]	; (8000b70 <MX_GPIO_Init+0xe8>)
 8000a9e:	699b      	ldr	r3, [r3, #24]
 8000aa0:	4a33      	ldr	r2, [pc, #204]	; (8000b70 <MX_GPIO_Init+0xe8>)
 8000aa2:	f043 0320 	orr.w	r3, r3, #32
 8000aa6:	6193      	str	r3, [r2, #24]
 8000aa8:	4b31      	ldr	r3, [pc, #196]	; (8000b70 <MX_GPIO_Init+0xe8>)
 8000aaa:	699b      	ldr	r3, [r3, #24]
 8000aac:	f003 0320 	and.w	r3, r3, #32
 8000ab0:	60fb      	str	r3, [r7, #12]
 8000ab2:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000ab4:	4b2e      	ldr	r3, [pc, #184]	; (8000b70 <MX_GPIO_Init+0xe8>)
 8000ab6:	699b      	ldr	r3, [r3, #24]
 8000ab8:	4a2d      	ldr	r2, [pc, #180]	; (8000b70 <MX_GPIO_Init+0xe8>)
 8000aba:	f043 0304 	orr.w	r3, r3, #4
 8000abe:	6193      	str	r3, [r2, #24]
 8000ac0:	4b2b      	ldr	r3, [pc, #172]	; (8000b70 <MX_GPIO_Init+0xe8>)
 8000ac2:	699b      	ldr	r3, [r3, #24]
 8000ac4:	f003 0304 	and.w	r3, r3, #4
 8000ac8:	60bb      	str	r3, [r7, #8]
 8000aca:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000acc:	4b28      	ldr	r3, [pc, #160]	; (8000b70 <MX_GPIO_Init+0xe8>)
 8000ace:	699b      	ldr	r3, [r3, #24]
 8000ad0:	4a27      	ldr	r2, [pc, #156]	; (8000b70 <MX_GPIO_Init+0xe8>)
 8000ad2:	f043 0308 	orr.w	r3, r3, #8
 8000ad6:	6193      	str	r3, [r2, #24]
 8000ad8:	4b25      	ldr	r3, [pc, #148]	; (8000b70 <MX_GPIO_Init+0xe8>)
 8000ada:	699b      	ldr	r3, [r3, #24]
 8000adc:	f003 0308 	and.w	r3, r3, #8
 8000ae0:	607b      	str	r3, [r7, #4]
 8000ae2:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, Pedes_light1_Pin|Light1_2_Pin|Light2_1_Pin|Light2_2_Pin, GPIO_PIN_RESET);
 8000ae4:	2200      	movs	r2, #0
 8000ae6:	f44f 6187 	mov.w	r1, #1080	; 0x438
 8000aea:	4822      	ldr	r0, [pc, #136]	; (8000b74 <MX_GPIO_Init+0xec>)
 8000aec:	f000 ff41 	bl	8001972 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, Pedes_light2_Pin|Light1_1_Pin, GPIO_PIN_RESET);
 8000af0:	2200      	movs	r2, #0
 8000af2:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8000af6:	4820      	ldr	r0, [pc, #128]	; (8000b78 <MX_GPIO_Init+0xf0>)
 8000af8:	f000 ff3b 	bl	8001972 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : Pedes_button_Pin Button1_Pin Button2_Pin */
  GPIO_InitStruct.Pin = Pedes_button_Pin|Button1_Pin|Button2_Pin;
 8000afc:	2313      	movs	r3, #19
 8000afe:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000b00:	2300      	movs	r3, #0
 8000b02:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000b04:	2301      	movs	r3, #1
 8000b06:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000b08:	f107 0310 	add.w	r3, r7, #16
 8000b0c:	4619      	mov	r1, r3
 8000b0e:	481a      	ldr	r0, [pc, #104]	; (8000b78 <MX_GPIO_Init+0xf0>)
 8000b10:	f000 fd94 	bl	800163c <HAL_GPIO_Init>

  /*Configure GPIO pin : Button3_Pin */
  GPIO_InitStruct.Pin = Button3_Pin;
 8000b14:	2301      	movs	r3, #1
 8000b16:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000b18:	2300      	movs	r3, #0
 8000b1a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000b1c:	2301      	movs	r3, #1
 8000b1e:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(Button3_GPIO_Port, &GPIO_InitStruct);
 8000b20:	f107 0310 	add.w	r3, r7, #16
 8000b24:	4619      	mov	r1, r3
 8000b26:	4813      	ldr	r0, [pc, #76]	; (8000b74 <MX_GPIO_Init+0xec>)
 8000b28:	f000 fd88 	bl	800163c <HAL_GPIO_Init>

  /*Configure GPIO pins : Pedes_light1_Pin Light1_2_Pin Light2_1_Pin Light2_2_Pin */
  GPIO_InitStruct.Pin = Pedes_light1_Pin|Light1_2_Pin|Light2_1_Pin|Light2_2_Pin;
 8000b2c:	f44f 6387 	mov.w	r3, #1080	; 0x438
 8000b30:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000b32:	2301      	movs	r3, #1
 8000b34:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b36:	2300      	movs	r3, #0
 8000b38:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000b3a:	2302      	movs	r3, #2
 8000b3c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000b3e:	f107 0310 	add.w	r3, r7, #16
 8000b42:	4619      	mov	r1, r3
 8000b44:	480b      	ldr	r0, [pc, #44]	; (8000b74 <MX_GPIO_Init+0xec>)
 8000b46:	f000 fd79 	bl	800163c <HAL_GPIO_Init>

  /*Configure GPIO pins : Pedes_light2_Pin Light1_1_Pin */
  GPIO_InitStruct.Pin = Pedes_light2_Pin|Light1_1_Pin;
 8000b4a:	f44f 63a0 	mov.w	r3, #1280	; 0x500
 8000b4e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000b50:	2301      	movs	r3, #1
 8000b52:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b54:	2300      	movs	r3, #0
 8000b56:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000b58:	2302      	movs	r3, #2
 8000b5a:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000b5c:	f107 0310 	add.w	r3, r7, #16
 8000b60:	4619      	mov	r1, r3
 8000b62:	4805      	ldr	r0, [pc, #20]	; (8000b78 <MX_GPIO_Init+0xf0>)
 8000b64:	f000 fd6a 	bl	800163c <HAL_GPIO_Init>

}
 8000b68:	bf00      	nop
 8000b6a:	3720      	adds	r7, #32
 8000b6c:	46bd      	mov	sp, r7
 8000b6e:	bd80      	pop	{r7, pc}
 8000b70:	40021000 	.word	0x40021000
 8000b74:	40010c00 	.word	0x40010c00
 8000b78:	40010800 	.word	0x40010800

08000b7c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000b7c:	b480      	push	{r7}
 8000b7e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000b80:	b672      	cpsid	i
}
 8000b82:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000b84:	e7fe      	b.n	8000b84 <Error_Handler+0x8>
	...

08000b88 <manual_fsm>:
#include "stdio.h"
#include "main.h"
#include "stdint.h"


void manual_fsm() {
 8000b88:	b580      	push	{r7, lr}
 8000b8a:	af00      	add	r7, sp, #0
	switch(state){
 8000b8c:	4b20      	ldr	r3, [pc, #128]	; (8000c10 <manual_fsm+0x88>)
 8000b8e:	681b      	ldr	r3, [r3, #0]
 8000b90:	2b07      	cmp	r3, #7
 8000b92:	d13a      	bne.n	8000c0a <manual_fsm+0x82>
	case MANUAL:
			//reset flag for setting reset button
			is_button_pressed(SETTING_IDX);
 8000b94:	2001      	movs	r0, #1
 8000b96:	f7ff fd33 	bl	8000600 <is_button_pressed>
			set_color_light1(manual_state);
 8000b9a:	4b1e      	ldr	r3, [pc, #120]	; (8000c14 <manual_fsm+0x8c>)
 8000b9c:	681b      	ldr	r3, [r3, #0]
 8000b9e:	4618      	mov	r0, r3
 8000ba0:	f7ff fc4c 	bl	800043c <set_color_light1>
			if (is_button_pressed(MANUAL_IDX)) manual_state++;
 8000ba4:	2002      	movs	r0, #2
 8000ba6:	f7ff fd2b 	bl	8000600 <is_button_pressed>
 8000baa:	4603      	mov	r3, r0
 8000bac:	2b00      	cmp	r3, #0
 8000bae:	d004      	beq.n	8000bba <manual_fsm+0x32>
 8000bb0:	4b18      	ldr	r3, [pc, #96]	; (8000c14 <manual_fsm+0x8c>)
 8000bb2:	681b      	ldr	r3, [r3, #0]
 8000bb4:	3301      	adds	r3, #1
 8000bb6:	4a17      	ldr	r2, [pc, #92]	; (8000c14 <manual_fsm+0x8c>)
 8000bb8:	6013      	str	r3, [r2, #0]
			if (manual_state>3) manual_state=1;
 8000bba:	4b16      	ldr	r3, [pc, #88]	; (8000c14 <manual_fsm+0x8c>)
 8000bbc:	681b      	ldr	r3, [r3, #0]
 8000bbe:	2b03      	cmp	r3, #3
 8000bc0:	dd03      	ble.n	8000bca <manual_fsm+0x42>
 8000bc2:	4b14      	ldr	r3, [pc, #80]	; (8000c14 <manual_fsm+0x8c>)
 8000bc4:	2201      	movs	r2, #1
 8000bc6:	601a      	str	r2, [r3, #0]
 8000bc8:	e01b      	b.n	8000c02 <manual_fsm+0x7a>
			else if (is_button_pressed(STATE_IDX)){
 8000bca:	2000      	movs	r0, #0
 8000bcc:	f7ff fd18 	bl	8000600 <is_button_pressed>
 8000bd0:	4603      	mov	r3, r0
 8000bd2:	2b00      	cmp	r3, #0
 8000bd4:	d015      	beq.n	8000c02 <manual_fsm+0x7a>
				HAL_UART_Transmit(&huart2 ,(void*)str,sprintf(str,"auto_red=%d\r\n",
 8000bd6:	4b10      	ldr	r3, [pc, #64]	; (8000c18 <manual_fsm+0x90>)
 8000bd8:	681b      	ldr	r3, [r3, #0]
 8000bda:	461a      	mov	r2, r3
 8000bdc:	490f      	ldr	r1, [pc, #60]	; (8000c1c <manual_fsm+0x94>)
 8000bde:	4810      	ldr	r0, [pc, #64]	; (8000c20 <manual_fsm+0x98>)
 8000be0:	f002 fc3a 	bl	8003458 <siprintf>
 8000be4:	4603      	mov	r3, r0
 8000be6:	b29a      	uxth	r2, r3
 8000be8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000bec:	490c      	ldr	r1, [pc, #48]	; (8000c20 <manual_fsm+0x98>)
 8000bee:	480d      	ldr	r0, [pc, #52]	; (8000c24 <manual_fsm+0x9c>)
 8000bf0:	f002 fa95 	bl	800311e <HAL_UART_Transmit>
											red_duration),1000) ;
				counter1=red_duration;
 8000bf4:	4b08      	ldr	r3, [pc, #32]	; (8000c18 <manual_fsm+0x90>)
 8000bf6:	681b      	ldr	r3, [r3, #0]
 8000bf8:	4a0b      	ldr	r2, [pc, #44]	; (8000c28 <manual_fsm+0xa0>)
 8000bfa:	6013      	str	r3, [r2, #0]
				state=AUTO_RED;
 8000bfc:	4b04      	ldr	r3, [pc, #16]	; (8000c10 <manual_fsm+0x88>)
 8000bfe:	2201      	movs	r2, #1
 8000c00:	601a      	str	r2, [r3, #0]
			}
			is_button_pressed(SETTING_IDX);
 8000c02:	2001      	movs	r0, #1
 8000c04:	f7ff fcfc 	bl	8000600 <is_button_pressed>

			break;
 8000c08:	e000      	b.n	8000c0c <manual_fsm+0x84>
		default:
			break;
 8000c0a:	bf00      	nop
	}
}
 8000c0c:	bf00      	nop
 8000c0e:	bd80      	pop	{r7, pc}
 8000c10:	2000011c 	.word	0x2000011c
 8000c14:	20000000 	.word	0x20000000
 8000c18:	20000110 	.word	0x20000110
 8000c1c:	08003d9c 	.word	0x08003d9c
 8000c20:	200000d8 	.word	0x200000d8
 8000c24:	200001c0 	.word	0x200001c0
 8000c28:	2000010c 	.word	0x2000010c

08000c2c <pedestrian_fsm>:
#include "main.h"
#include "stdint.h"

extern TIM_HandleTypeDef htim3;

void pedestrian_fsm(){
 8000c2c:	b580      	push	{r7, lr}
 8000c2e:	af00      	add	r7, sp, #0
	switch (pedes_state){
 8000c30:	4b44      	ldr	r3, [pc, #272]	; (8000d44 <pedestrian_fsm+0x118>)
 8000c32:	681b      	ldr	r3, [r3, #0]
 8000c34:	2b0c      	cmp	r3, #12
 8000c36:	d02f      	beq.n	8000c98 <pedestrian_fsm+0x6c>
 8000c38:	2b0c      	cmp	r3, #12
 8000c3a:	dc79      	bgt.n	8000d30 <pedestrian_fsm+0x104>
 8000c3c:	2b0a      	cmp	r3, #10
 8000c3e:	d002      	beq.n	8000c46 <pedestrian_fsm+0x1a>
 8000c40:	2b0b      	cmp	r3, #11
 8000c42:	d056      	beq.n	8000cf2 <pedestrian_fsm+0xc6>
			||((state==MANUAL)&&(manual_state==1||manual_state==3))
		) pedes_state = GREEN;

		break;
	default:
		break;
 8000c44:	e074      	b.n	8000d30 <pedestrian_fsm+0x104>
		set_color_pedestrian_light(0);
 8000c46:	2000      	movs	r0, #0
 8000c48:	f7ff fc8a 	bl	8000560 <set_color_pedestrian_light>
		if(is_button_pressed(PEDES_IDX)){
 8000c4c:	2003      	movs	r0, #3
 8000c4e:	f7ff fcd7 	bl	8000600 <is_button_pressed>
 8000c52:	4603      	mov	r3, r0
 8000c54:	2b00      	cmp	r3, #0
 8000c56:	d06d      	beq.n	8000d34 <pedestrian_fsm+0x108>
				(state==AUTO_RED&&counter1>=3)||
 8000c58:	4b3b      	ldr	r3, [pc, #236]	; (8000d48 <pedestrian_fsm+0x11c>)
 8000c5a:	681b      	ldr	r3, [r3, #0]
			if(
 8000c5c:	2b01      	cmp	r3, #1
 8000c5e:	d103      	bne.n	8000c68 <pedestrian_fsm+0x3c>
				(state==AUTO_RED&&counter1>=3)||
 8000c60:	4b3a      	ldr	r3, [pc, #232]	; (8000d4c <pedestrian_fsm+0x120>)
 8000c62:	681b      	ldr	r3, [r3, #0]
 8000c64:	2b02      	cmp	r3, #2
 8000c66:	dc0f      	bgt.n	8000c88 <pedestrian_fsm+0x5c>
			     state==SETTING_RED||
 8000c68:	4b37      	ldr	r3, [pc, #220]	; (8000d48 <pedestrian_fsm+0x11c>)
 8000c6a:	681b      	ldr	r3, [r3, #0]
				(state==AUTO_RED&&counter1>=3)||
 8000c6c:	2b04      	cmp	r3, #4
 8000c6e:	d00b      	beq.n	8000c88 <pedestrian_fsm+0x5c>
			   ((state==MANUAL)&&(manual_state==1||manual_state==3))
 8000c70:	4b35      	ldr	r3, [pc, #212]	; (8000d48 <pedestrian_fsm+0x11c>)
 8000c72:	681b      	ldr	r3, [r3, #0]
			     state==SETTING_RED||
 8000c74:	2b07      	cmp	r3, #7
 8000c76:	d10b      	bne.n	8000c90 <pedestrian_fsm+0x64>
			   ((state==MANUAL)&&(manual_state==1||manual_state==3))
 8000c78:	4b35      	ldr	r3, [pc, #212]	; (8000d50 <pedestrian_fsm+0x124>)
 8000c7a:	681b      	ldr	r3, [r3, #0]
 8000c7c:	2b01      	cmp	r3, #1
 8000c7e:	d003      	beq.n	8000c88 <pedestrian_fsm+0x5c>
 8000c80:	4b33      	ldr	r3, [pc, #204]	; (8000d50 <pedestrian_fsm+0x124>)
 8000c82:	681b      	ldr	r3, [r3, #0]
 8000c84:	2b03      	cmp	r3, #3
 8000c86:	d103      	bne.n	8000c90 <pedestrian_fsm+0x64>
			) pedes_state = GREEN;
 8000c88:	4b2e      	ldr	r3, [pc, #184]	; (8000d44 <pedestrian_fsm+0x118>)
 8000c8a:	220c      	movs	r2, #12
 8000c8c:	601a      	str	r2, [r3, #0]
		break;
 8000c8e:	e051      	b.n	8000d34 <pedestrian_fsm+0x108>
			else pedes_state=RED;
 8000c90:	4b2c      	ldr	r3, [pc, #176]	; (8000d44 <pedestrian_fsm+0x118>)
 8000c92:	220b      	movs	r2, #11
 8000c94:	601a      	str	r2, [r3, #0]
		break;
 8000c96:	e04d      	b.n	8000d34 <pedestrian_fsm+0x108>
		set_color_pedestrian_light(XANH);
 8000c98:	2003      	movs	r0, #3
 8000c9a:	f7ff fc61 	bl	8000560 <set_color_pedestrian_light>
			(state==AUTO_GREEN)||
 8000c9e:	4b2a      	ldr	r3, [pc, #168]	; (8000d48 <pedestrian_fsm+0x11c>)
 8000ca0:	681b      	ldr	r3, [r3, #0]
		if(
 8000ca2:	2b02      	cmp	r3, #2
 8000ca4:	d00b      	beq.n	8000cbe <pedestrian_fsm+0x92>
			(state==SETTING_GREEN)||
 8000ca6:	4b28      	ldr	r3, [pc, #160]	; (8000d48 <pedestrian_fsm+0x11c>)
 8000ca8:	681b      	ldr	r3, [r3, #0]
			(state==AUTO_GREEN)||
 8000caa:	2b05      	cmp	r3, #5
 8000cac:	d007      	beq.n	8000cbe <pedestrian_fsm+0x92>
			(state==MANUAL&&manual_state==2)
 8000cae:	4b26      	ldr	r3, [pc, #152]	; (8000d48 <pedestrian_fsm+0x11c>)
 8000cb0:	681b      	ldr	r3, [r3, #0]
			(state==SETTING_GREEN)||
 8000cb2:	2b07      	cmp	r3, #7
 8000cb4:	d10a      	bne.n	8000ccc <pedestrian_fsm+0xa0>
			(state==MANUAL&&manual_state==2)
 8000cb6:	4b26      	ldr	r3, [pc, #152]	; (8000d50 <pedestrian_fsm+0x124>)
 8000cb8:	681b      	ldr	r3, [r3, #0]
 8000cba:	2b02      	cmp	r3, #2
 8000cbc:	d106      	bne.n	8000ccc <pedestrian_fsm+0xa0>
			pedes_state=NONE;
 8000cbe:	4b21      	ldr	r3, [pc, #132]	; (8000d44 <pedestrian_fsm+0x118>)
 8000cc0:	220a      	movs	r2, #10
 8000cc2:	601a      	str	r2, [r3, #0]
			__HAL_TIM_SetCompare (&htim3,TIM_CHANNEL_1, 0);
 8000cc4:	4b23      	ldr	r3, [pc, #140]	; (8000d54 <pedestrian_fsm+0x128>)
 8000cc6:	681b      	ldr	r3, [r3, #0]
 8000cc8:	2200      	movs	r2, #0
 8000cca:	635a      	str	r2, [r3, #52]	; 0x34
			  if (pedes_state==GREEN) __HAL_TIM_SetCompare (&htim3,TIM_CHANNEL_1, 100-(counter1*100/red_duration));
 8000ccc:	4b1d      	ldr	r3, [pc, #116]	; (8000d44 <pedestrian_fsm+0x118>)
 8000cce:	681b      	ldr	r3, [r3, #0]
 8000cd0:	2b0c      	cmp	r3, #12
 8000cd2:	d131      	bne.n	8000d38 <pedestrian_fsm+0x10c>
 8000cd4:	4b1d      	ldr	r3, [pc, #116]	; (8000d4c <pedestrian_fsm+0x120>)
 8000cd6:	681b      	ldr	r3, [r3, #0]
 8000cd8:	2264      	movs	r2, #100	; 0x64
 8000cda:	fb03 f202 	mul.w	r2, r3, r2
 8000cde:	4b1e      	ldr	r3, [pc, #120]	; (8000d58 <pedestrian_fsm+0x12c>)
 8000ce0:	681b      	ldr	r3, [r3, #0]
 8000ce2:	fb92 f3f3 	sdiv	r3, r2, r3
 8000ce6:	f1c3 0264 	rsb	r2, r3, #100	; 0x64
 8000cea:	4b1a      	ldr	r3, [pc, #104]	; (8000d54 <pedestrian_fsm+0x128>)
 8000cec:	681b      	ldr	r3, [r3, #0]
 8000cee:	635a      	str	r2, [r3, #52]	; 0x34
		break;
 8000cf0:	e022      	b.n	8000d38 <pedestrian_fsm+0x10c>
		set_color_pedestrian_light(DO);
 8000cf2:	2001      	movs	r0, #1
 8000cf4:	f7ff fc34 	bl	8000560 <set_color_pedestrian_light>
			(state==AUTO_RED&&counter1>=3)
 8000cf8:	4b13      	ldr	r3, [pc, #76]	; (8000d48 <pedestrian_fsm+0x11c>)
 8000cfa:	681b      	ldr	r3, [r3, #0]
		if(
 8000cfc:	2b01      	cmp	r3, #1
 8000cfe:	d103      	bne.n	8000d08 <pedestrian_fsm+0xdc>
			(state==AUTO_RED&&counter1>=3)
 8000d00:	4b12      	ldr	r3, [pc, #72]	; (8000d4c <pedestrian_fsm+0x120>)
 8000d02:	681b      	ldr	r3, [r3, #0]
 8000d04:	2b02      	cmp	r3, #2
 8000d06:	dc0f      	bgt.n	8000d28 <pedestrian_fsm+0xfc>
			||state==SETTING_RED
 8000d08:	4b0f      	ldr	r3, [pc, #60]	; (8000d48 <pedestrian_fsm+0x11c>)
 8000d0a:	681b      	ldr	r3, [r3, #0]
 8000d0c:	2b04      	cmp	r3, #4
 8000d0e:	d00b      	beq.n	8000d28 <pedestrian_fsm+0xfc>
			||((state==MANUAL)&&(manual_state==1||manual_state==3))
 8000d10:	4b0d      	ldr	r3, [pc, #52]	; (8000d48 <pedestrian_fsm+0x11c>)
 8000d12:	681b      	ldr	r3, [r3, #0]
 8000d14:	2b07      	cmp	r3, #7
 8000d16:	d111      	bne.n	8000d3c <pedestrian_fsm+0x110>
 8000d18:	4b0d      	ldr	r3, [pc, #52]	; (8000d50 <pedestrian_fsm+0x124>)
 8000d1a:	681b      	ldr	r3, [r3, #0]
 8000d1c:	2b01      	cmp	r3, #1
 8000d1e:	d003      	beq.n	8000d28 <pedestrian_fsm+0xfc>
 8000d20:	4b0b      	ldr	r3, [pc, #44]	; (8000d50 <pedestrian_fsm+0x124>)
 8000d22:	681b      	ldr	r3, [r3, #0]
 8000d24:	2b03      	cmp	r3, #3
 8000d26:	d109      	bne.n	8000d3c <pedestrian_fsm+0x110>
		) pedes_state = GREEN;
 8000d28:	4b06      	ldr	r3, [pc, #24]	; (8000d44 <pedestrian_fsm+0x118>)
 8000d2a:	220c      	movs	r2, #12
 8000d2c:	601a      	str	r2, [r3, #0]
		break;
 8000d2e:	e005      	b.n	8000d3c <pedestrian_fsm+0x110>
		break;
 8000d30:	bf00      	nop
 8000d32:	e004      	b.n	8000d3e <pedestrian_fsm+0x112>
		break;
 8000d34:	bf00      	nop
 8000d36:	e002      	b.n	8000d3e <pedestrian_fsm+0x112>
		break;
 8000d38:	bf00      	nop
 8000d3a:	e000      	b.n	8000d3e <pedestrian_fsm+0x112>
		break;
 8000d3c:	bf00      	nop
	}
}
 8000d3e:	bf00      	nop
 8000d40:	bd80      	pop	{r7, pc}
 8000d42:	bf00      	nop
 8000d44:	20000004 	.word	0x20000004
 8000d48:	2000011c 	.word	0x2000011c
 8000d4c:	2000010c 	.word	0x2000010c
 8000d50:	20000000 	.word	0x20000000
 8000d54:	20000178 	.word	0x20000178
 8000d58:	20000110 	.word	0x20000110

08000d5c <setting_fsm>:
#include "stdio.h"
#include "main.h"
#include "stdint.h"


void setting_fsm() {
 8000d5c:	b580      	push	{r7, lr}
 8000d5e:	af00      	add	r7, sp, #0
	switch (state) {
 8000d60:	4b69      	ldr	r3, [pc, #420]	; (8000f08 <setting_fsm+0x1ac>)
 8000d62:	681b      	ldr	r3, [r3, #0]
 8000d64:	2b06      	cmp	r3, #6
 8000d66:	f000 8089 	beq.w	8000e7c <setting_fsm+0x120>
 8000d6a:	2b06      	cmp	r3, #6
 8000d6c:	f300 80c3 	bgt.w	8000ef6 <setting_fsm+0x19a>
 8000d70:	2b04      	cmp	r3, #4
 8000d72:	d002      	beq.n	8000d7a <setting_fsm+0x1e>
 8000d74:	2b05      	cmp	r3, #5
 8000d76:	d041      	beq.n	8000dfc <setting_fsm+0xa0>
										),1000) ;
			state=MANUAL;
			}
		break;
		default:
			break;
 8000d78:	e0bd      	b.n	8000ef6 <setting_fsm+0x19a>
		is_button_pressed(MANUAL_IDX);
 8000d7a:	2002      	movs	r0, #2
 8000d7c:	f7ff fc40 	bl	8000600 <is_button_pressed>
		set_color_light1(DO);
 8000d80:	2001      	movs	r0, #1
 8000d82:	f7ff fb5b 	bl	800043c <set_color_light1>
		if(is_button_pressed(SETTING_IDX)){
 8000d86:	2001      	movs	r0, #1
 8000d88:	f7ff fc3a 	bl	8000600 <is_button_pressed>
 8000d8c:	4603      	mov	r3, r0
 8000d8e:	2b00      	cmp	r3, #0
 8000d90:	d01a      	beq.n	8000dc8 <setting_fsm+0x6c>
			red_duration++;
 8000d92:	4b5e      	ldr	r3, [pc, #376]	; (8000f0c <setting_fsm+0x1b0>)
 8000d94:	681b      	ldr	r3, [r3, #0]
 8000d96:	3301      	adds	r3, #1
 8000d98:	4a5c      	ldr	r2, [pc, #368]	; (8000f0c <setting_fsm+0x1b0>)
 8000d9a:	6013      	str	r3, [r2, #0]
			if(red_duration>=10) red_duration=1;
 8000d9c:	4b5b      	ldr	r3, [pc, #364]	; (8000f0c <setting_fsm+0x1b0>)
 8000d9e:	681b      	ldr	r3, [r3, #0]
 8000da0:	2b09      	cmp	r3, #9
 8000da2:	dd02      	ble.n	8000daa <setting_fsm+0x4e>
 8000da4:	4b59      	ldr	r3, [pc, #356]	; (8000f0c <setting_fsm+0x1b0>)
 8000da6:	2201      	movs	r2, #1
 8000da8:	601a      	str	r2, [r3, #0]
			HAL_UART_Transmit(&huart2 ,(void*)str,sprintf(str,"setting_red=%d\r\n"
 8000daa:	4b58      	ldr	r3, [pc, #352]	; (8000f0c <setting_fsm+0x1b0>)
 8000dac:	681b      	ldr	r3, [r3, #0]
 8000dae:	461a      	mov	r2, r3
 8000db0:	4957      	ldr	r1, [pc, #348]	; (8000f10 <setting_fsm+0x1b4>)
 8000db2:	4858      	ldr	r0, [pc, #352]	; (8000f14 <setting_fsm+0x1b8>)
 8000db4:	f002 fb50 	bl	8003458 <siprintf>
 8000db8:	4603      	mov	r3, r0
 8000dba:	b29a      	uxth	r2, r3
 8000dbc:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000dc0:	4954      	ldr	r1, [pc, #336]	; (8000f14 <setting_fsm+0x1b8>)
 8000dc2:	4855      	ldr	r0, [pc, #340]	; (8000f18 <setting_fsm+0x1bc>)
 8000dc4:	f002 f9ab 	bl	800311e <HAL_UART_Transmit>
		if (is_button_pressed(STATE_IDX)){
 8000dc8:	2000      	movs	r0, #0
 8000dca:	f7ff fc19 	bl	8000600 <is_button_pressed>
 8000dce:	4603      	mov	r3, r0
 8000dd0:	2b00      	cmp	r3, #0
 8000dd2:	f000 8092 	beq.w	8000efa <setting_fsm+0x19e>
			state=SETTING_GREEN;
 8000dd6:	4b4c      	ldr	r3, [pc, #304]	; (8000f08 <setting_fsm+0x1ac>)
 8000dd8:	2205      	movs	r2, #5
 8000dda:	601a      	str	r2, [r3, #0]
			HAL_UART_Transmit(&huart2 ,(void*)str,sprintf(str,"setting_green=%d\r\n"
 8000ddc:	4b4f      	ldr	r3, [pc, #316]	; (8000f1c <setting_fsm+0x1c0>)
 8000dde:	681b      	ldr	r3, [r3, #0]
 8000de0:	461a      	mov	r2, r3
 8000de2:	494f      	ldr	r1, [pc, #316]	; (8000f20 <setting_fsm+0x1c4>)
 8000de4:	484b      	ldr	r0, [pc, #300]	; (8000f14 <setting_fsm+0x1b8>)
 8000de6:	f002 fb37 	bl	8003458 <siprintf>
 8000dea:	4603      	mov	r3, r0
 8000dec:	b29a      	uxth	r2, r3
 8000dee:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000df2:	4948      	ldr	r1, [pc, #288]	; (8000f14 <setting_fsm+0x1b8>)
 8000df4:	4848      	ldr	r0, [pc, #288]	; (8000f18 <setting_fsm+0x1bc>)
 8000df6:	f002 f992 	bl	800311e <HAL_UART_Transmit>
		break;
 8000dfa:	e07e      	b.n	8000efa <setting_fsm+0x19e>
		is_button_pressed(MANUAL_IDX);
 8000dfc:	2002      	movs	r0, #2
 8000dfe:	f7ff fbff 	bl	8000600 <is_button_pressed>
		set_color_light1(XANH);
 8000e02:	2003      	movs	r0, #3
 8000e04:	f7ff fb1a 	bl	800043c <set_color_light1>
		if(is_button_pressed(SETTING_IDX)){
 8000e08:	2001      	movs	r0, #1
 8000e0a:	f7ff fbf9 	bl	8000600 <is_button_pressed>
 8000e0e:	4603      	mov	r3, r0
 8000e10:	2b00      	cmp	r3, #0
 8000e12:	d01a      	beq.n	8000e4a <setting_fsm+0xee>
			green_duration++;
 8000e14:	4b41      	ldr	r3, [pc, #260]	; (8000f1c <setting_fsm+0x1c0>)
 8000e16:	681b      	ldr	r3, [r3, #0]
 8000e18:	3301      	adds	r3, #1
 8000e1a:	4a40      	ldr	r2, [pc, #256]	; (8000f1c <setting_fsm+0x1c0>)
 8000e1c:	6013      	str	r3, [r2, #0]
			if(green_duration>=10) green_duration=1;
 8000e1e:	4b3f      	ldr	r3, [pc, #252]	; (8000f1c <setting_fsm+0x1c0>)
 8000e20:	681b      	ldr	r3, [r3, #0]
 8000e22:	2b09      	cmp	r3, #9
 8000e24:	dd02      	ble.n	8000e2c <setting_fsm+0xd0>
 8000e26:	4b3d      	ldr	r3, [pc, #244]	; (8000f1c <setting_fsm+0x1c0>)
 8000e28:	2201      	movs	r2, #1
 8000e2a:	601a      	str	r2, [r3, #0]
			HAL_UART_Transmit(&huart2 ,(void*)str,sprintf(str,"setting_green=%d\r\n"
 8000e2c:	4b3b      	ldr	r3, [pc, #236]	; (8000f1c <setting_fsm+0x1c0>)
 8000e2e:	681b      	ldr	r3, [r3, #0]
 8000e30:	461a      	mov	r2, r3
 8000e32:	493b      	ldr	r1, [pc, #236]	; (8000f20 <setting_fsm+0x1c4>)
 8000e34:	4837      	ldr	r0, [pc, #220]	; (8000f14 <setting_fsm+0x1b8>)
 8000e36:	f002 fb0f 	bl	8003458 <siprintf>
 8000e3a:	4603      	mov	r3, r0
 8000e3c:	b29a      	uxth	r2, r3
 8000e3e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000e42:	4934      	ldr	r1, [pc, #208]	; (8000f14 <setting_fsm+0x1b8>)
 8000e44:	4834      	ldr	r0, [pc, #208]	; (8000f18 <setting_fsm+0x1bc>)
 8000e46:	f002 f96a 	bl	800311e <HAL_UART_Transmit>
		if (is_button_pressed(STATE_IDX)){
 8000e4a:	2000      	movs	r0, #0
 8000e4c:	f7ff fbd8 	bl	8000600 <is_button_pressed>
 8000e50:	4603      	mov	r3, r0
 8000e52:	2b00      	cmp	r3, #0
 8000e54:	d053      	beq.n	8000efe <setting_fsm+0x1a2>
			HAL_UART_Transmit(&huart2 ,(void*)str,sprintf(str,"setting_yellow=%d\r\n"
 8000e56:	4b33      	ldr	r3, [pc, #204]	; (8000f24 <setting_fsm+0x1c8>)
 8000e58:	681b      	ldr	r3, [r3, #0]
 8000e5a:	461a      	mov	r2, r3
 8000e5c:	4932      	ldr	r1, [pc, #200]	; (8000f28 <setting_fsm+0x1cc>)
 8000e5e:	482d      	ldr	r0, [pc, #180]	; (8000f14 <setting_fsm+0x1b8>)
 8000e60:	f002 fafa 	bl	8003458 <siprintf>
 8000e64:	4603      	mov	r3, r0
 8000e66:	b29a      	uxth	r2, r3
 8000e68:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000e6c:	4929      	ldr	r1, [pc, #164]	; (8000f14 <setting_fsm+0x1b8>)
 8000e6e:	482a      	ldr	r0, [pc, #168]	; (8000f18 <setting_fsm+0x1bc>)
 8000e70:	f002 f955 	bl	800311e <HAL_UART_Transmit>
			state=SETTING_YELLOW;
 8000e74:	4b24      	ldr	r3, [pc, #144]	; (8000f08 <setting_fsm+0x1ac>)
 8000e76:	2206      	movs	r2, #6
 8000e78:	601a      	str	r2, [r3, #0]
		break;
 8000e7a:	e040      	b.n	8000efe <setting_fsm+0x1a2>
		is_button_pressed(MANUAL_IDX);
 8000e7c:	2002      	movs	r0, #2
 8000e7e:	f7ff fbbf 	bl	8000600 <is_button_pressed>
		set_color_light1(VANG);
 8000e82:	2002      	movs	r0, #2
 8000e84:	f7ff fada 	bl	800043c <set_color_light1>
		if(is_button_pressed(SETTING_IDX)){
 8000e88:	2001      	movs	r0, #1
 8000e8a:	f7ff fbb9 	bl	8000600 <is_button_pressed>
 8000e8e:	4603      	mov	r3, r0
 8000e90:	2b00      	cmp	r3, #0
 8000e92:	d01a      	beq.n	8000eca <setting_fsm+0x16e>
			yellow_duration++;
 8000e94:	4b23      	ldr	r3, [pc, #140]	; (8000f24 <setting_fsm+0x1c8>)
 8000e96:	681b      	ldr	r3, [r3, #0]
 8000e98:	3301      	adds	r3, #1
 8000e9a:	4a22      	ldr	r2, [pc, #136]	; (8000f24 <setting_fsm+0x1c8>)
 8000e9c:	6013      	str	r3, [r2, #0]
			if(yellow_duration>=10) yellow_duration=1;
 8000e9e:	4b21      	ldr	r3, [pc, #132]	; (8000f24 <setting_fsm+0x1c8>)
 8000ea0:	681b      	ldr	r3, [r3, #0]
 8000ea2:	2b09      	cmp	r3, #9
 8000ea4:	dd02      	ble.n	8000eac <setting_fsm+0x150>
 8000ea6:	4b1f      	ldr	r3, [pc, #124]	; (8000f24 <setting_fsm+0x1c8>)
 8000ea8:	2201      	movs	r2, #1
 8000eaa:	601a      	str	r2, [r3, #0]
			HAL_UART_Transmit(&huart2 ,(void*)str,sprintf(str,"setting_yellow=%d\r\n"
 8000eac:	4b1d      	ldr	r3, [pc, #116]	; (8000f24 <setting_fsm+0x1c8>)
 8000eae:	681b      	ldr	r3, [r3, #0]
 8000eb0:	461a      	mov	r2, r3
 8000eb2:	491d      	ldr	r1, [pc, #116]	; (8000f28 <setting_fsm+0x1cc>)
 8000eb4:	4817      	ldr	r0, [pc, #92]	; (8000f14 <setting_fsm+0x1b8>)
 8000eb6:	f002 facf 	bl	8003458 <siprintf>
 8000eba:	4603      	mov	r3, r0
 8000ebc:	b29a      	uxth	r2, r3
 8000ebe:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000ec2:	4914      	ldr	r1, [pc, #80]	; (8000f14 <setting_fsm+0x1b8>)
 8000ec4:	4814      	ldr	r0, [pc, #80]	; (8000f18 <setting_fsm+0x1bc>)
 8000ec6:	f002 f92a 	bl	800311e <HAL_UART_Transmit>
		if (is_button_pressed(STATE_IDX)){
 8000eca:	2000      	movs	r0, #0
 8000ecc:	f7ff fb98 	bl	8000600 <is_button_pressed>
 8000ed0:	4603      	mov	r3, r0
 8000ed2:	2b00      	cmp	r3, #0
 8000ed4:	d015      	beq.n	8000f02 <setting_fsm+0x1a6>
			HAL_UART_Transmit(&huart2 ,(void*)str,sprintf(str,"manual\r\n"
 8000ed6:	4915      	ldr	r1, [pc, #84]	; (8000f2c <setting_fsm+0x1d0>)
 8000ed8:	480e      	ldr	r0, [pc, #56]	; (8000f14 <setting_fsm+0x1b8>)
 8000eda:	f002 fabd 	bl	8003458 <siprintf>
 8000ede:	4603      	mov	r3, r0
 8000ee0:	b29a      	uxth	r2, r3
 8000ee2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000ee6:	490b      	ldr	r1, [pc, #44]	; (8000f14 <setting_fsm+0x1b8>)
 8000ee8:	480b      	ldr	r0, [pc, #44]	; (8000f18 <setting_fsm+0x1bc>)
 8000eea:	f002 f918 	bl	800311e <HAL_UART_Transmit>
			state=MANUAL;
 8000eee:	4b06      	ldr	r3, [pc, #24]	; (8000f08 <setting_fsm+0x1ac>)
 8000ef0:	2207      	movs	r2, #7
 8000ef2:	601a      	str	r2, [r3, #0]
		break;
 8000ef4:	e005      	b.n	8000f02 <setting_fsm+0x1a6>
			break;
 8000ef6:	bf00      	nop
 8000ef8:	e004      	b.n	8000f04 <setting_fsm+0x1a8>
		break;
 8000efa:	bf00      	nop
 8000efc:	e002      	b.n	8000f04 <setting_fsm+0x1a8>
		break;
 8000efe:	bf00      	nop
 8000f00:	e000      	b.n	8000f04 <setting_fsm+0x1a8>
		break;
 8000f02:	bf00      	nop
	}
}
 8000f04:	bf00      	nop
 8000f06:	bd80      	pop	{r7, pc}
 8000f08:	2000011c 	.word	0x2000011c
 8000f0c:	20000110 	.word	0x20000110
 8000f10:	08003dac 	.word	0x08003dac
 8000f14:	200000d8 	.word	0x200000d8
 8000f18:	200001c0 	.word	0x200001c0
 8000f1c:	20000114 	.word	0x20000114
 8000f20:	08003dc0 	.word	0x08003dc0
 8000f24:	20000118 	.word	0x20000118
 8000f28:	08003dd4 	.word	0x08003dd4
 8000f2c:	08003de8 	.word	0x08003de8

08000f30 <setTimer1>:
int timer2_counter=0;

int timer3_flag=0;
int timer3_counter=0;

void setTimer1( int duration){
 8000f30:	b480      	push	{r7}
 8000f32:	b083      	sub	sp, #12
 8000f34:	af00      	add	r7, sp, #0
 8000f36:	6078      	str	r0, [r7, #4]
	timer1_counter=duration/TICK;
 8000f38:	687b      	ldr	r3, [r7, #4]
 8000f3a:	4a08      	ldr	r2, [pc, #32]	; (8000f5c <setTimer1+0x2c>)
 8000f3c:	fb82 1203 	smull	r1, r2, r2, r3
 8000f40:	1092      	asrs	r2, r2, #2
 8000f42:	17db      	asrs	r3, r3, #31
 8000f44:	1ad3      	subs	r3, r2, r3
 8000f46:	4a06      	ldr	r2, [pc, #24]	; (8000f60 <setTimer1+0x30>)
 8000f48:	6013      	str	r3, [r2, #0]
	timer1_flag=0;
 8000f4a:	4b06      	ldr	r3, [pc, #24]	; (8000f64 <setTimer1+0x34>)
 8000f4c:	2200      	movs	r2, #0
 8000f4e:	601a      	str	r2, [r3, #0]
}
 8000f50:	bf00      	nop
 8000f52:	370c      	adds	r7, #12
 8000f54:	46bd      	mov	sp, r7
 8000f56:	bc80      	pop	{r7}
 8000f58:	4770      	bx	lr
 8000f5a:	bf00      	nop
 8000f5c:	66666667 	.word	0x66666667
 8000f60:	20000208 	.word	0x20000208
 8000f64:	20000204 	.word	0x20000204

08000f68 <timer1_run>:

void timer1_run(int index){
 8000f68:	b480      	push	{r7}
 8000f6a:	b083      	sub	sp, #12
 8000f6c:	af00      	add	r7, sp, #0
 8000f6e:	6078      	str	r0, [r7, #4]
	if(timer1_counter>0){
 8000f70:	4b0a      	ldr	r3, [pc, #40]	; (8000f9c <timer1_run+0x34>)
 8000f72:	681b      	ldr	r3, [r3, #0]
 8000f74:	2b00      	cmp	r3, #0
 8000f76:	dd0b      	ble.n	8000f90 <timer1_run+0x28>
		timer1_counter--;
 8000f78:	4b08      	ldr	r3, [pc, #32]	; (8000f9c <timer1_run+0x34>)
 8000f7a:	681b      	ldr	r3, [r3, #0]
 8000f7c:	3b01      	subs	r3, #1
 8000f7e:	4a07      	ldr	r2, [pc, #28]	; (8000f9c <timer1_run+0x34>)
 8000f80:	6013      	str	r3, [r2, #0]
		if(timer1_counter<=0) timer1_flag=1;
 8000f82:	4b06      	ldr	r3, [pc, #24]	; (8000f9c <timer1_run+0x34>)
 8000f84:	681b      	ldr	r3, [r3, #0]
 8000f86:	2b00      	cmp	r3, #0
 8000f88:	dc02      	bgt.n	8000f90 <timer1_run+0x28>
 8000f8a:	4b05      	ldr	r3, [pc, #20]	; (8000fa0 <timer1_run+0x38>)
 8000f8c:	2201      	movs	r2, #1
 8000f8e:	601a      	str	r2, [r3, #0]
	}
}
 8000f90:	bf00      	nop
 8000f92:	370c      	adds	r7, #12
 8000f94:	46bd      	mov	sp, r7
 8000f96:	bc80      	pop	{r7}
 8000f98:	4770      	bx	lr
 8000f9a:	bf00      	nop
 8000f9c:	20000208 	.word	0x20000208
 8000fa0:	20000204 	.word	0x20000204

08000fa4 <timer2_run>:
void setTimer2( int duration){
	timer2_counter=duration/TICK;
	timer2_flag=0;
}

void timer2_run(int index){
 8000fa4:	b480      	push	{r7}
 8000fa6:	b083      	sub	sp, #12
 8000fa8:	af00      	add	r7, sp, #0
 8000faa:	6078      	str	r0, [r7, #4]
	if(timer2_counter>0){
 8000fac:	4b0a      	ldr	r3, [pc, #40]	; (8000fd8 <timer2_run+0x34>)
 8000fae:	681b      	ldr	r3, [r3, #0]
 8000fb0:	2b00      	cmp	r3, #0
 8000fb2:	dd0b      	ble.n	8000fcc <timer2_run+0x28>
		timer2_counter--;
 8000fb4:	4b08      	ldr	r3, [pc, #32]	; (8000fd8 <timer2_run+0x34>)
 8000fb6:	681b      	ldr	r3, [r3, #0]
 8000fb8:	3b01      	subs	r3, #1
 8000fba:	4a07      	ldr	r2, [pc, #28]	; (8000fd8 <timer2_run+0x34>)
 8000fbc:	6013      	str	r3, [r2, #0]
		if(timer2_counter<=0) timer2_flag=1;
 8000fbe:	4b06      	ldr	r3, [pc, #24]	; (8000fd8 <timer2_run+0x34>)
 8000fc0:	681b      	ldr	r3, [r3, #0]
 8000fc2:	2b00      	cmp	r3, #0
 8000fc4:	dc02      	bgt.n	8000fcc <timer2_run+0x28>
 8000fc6:	4b05      	ldr	r3, [pc, #20]	; (8000fdc <timer2_run+0x38>)
 8000fc8:	2201      	movs	r2, #1
 8000fca:	601a      	str	r2, [r3, #0]
	}
}
 8000fcc:	bf00      	nop
 8000fce:	370c      	adds	r7, #12
 8000fd0:	46bd      	mov	sp, r7
 8000fd2:	bc80      	pop	{r7}
 8000fd4:	4770      	bx	lr
 8000fd6:	bf00      	nop
 8000fd8:	20000210 	.word	0x20000210
 8000fdc:	2000020c 	.word	0x2000020c

08000fe0 <setTimer3>:

void setTimer3( int duration){
 8000fe0:	b480      	push	{r7}
 8000fe2:	b083      	sub	sp, #12
 8000fe4:	af00      	add	r7, sp, #0
 8000fe6:	6078      	str	r0, [r7, #4]
	timer3_counter=duration/TICK;
 8000fe8:	687b      	ldr	r3, [r7, #4]
 8000fea:	4a08      	ldr	r2, [pc, #32]	; (800100c <setTimer3+0x2c>)
 8000fec:	fb82 1203 	smull	r1, r2, r2, r3
 8000ff0:	1092      	asrs	r2, r2, #2
 8000ff2:	17db      	asrs	r3, r3, #31
 8000ff4:	1ad3      	subs	r3, r2, r3
 8000ff6:	4a06      	ldr	r2, [pc, #24]	; (8001010 <setTimer3+0x30>)
 8000ff8:	6013      	str	r3, [r2, #0]
	timer3_flag=0;
 8000ffa:	4b06      	ldr	r3, [pc, #24]	; (8001014 <setTimer3+0x34>)
 8000ffc:	2200      	movs	r2, #0
 8000ffe:	601a      	str	r2, [r3, #0]
}
 8001000:	bf00      	nop
 8001002:	370c      	adds	r7, #12
 8001004:	46bd      	mov	sp, r7
 8001006:	bc80      	pop	{r7}
 8001008:	4770      	bx	lr
 800100a:	bf00      	nop
 800100c:	66666667 	.word	0x66666667
 8001010:	20000218 	.word	0x20000218
 8001014:	20000214 	.word	0x20000214

08001018 <timer3_run>:

void timer3_run(int index){
 8001018:	b480      	push	{r7}
 800101a:	b083      	sub	sp, #12
 800101c:	af00      	add	r7, sp, #0
 800101e:	6078      	str	r0, [r7, #4]
	if(timer3_counter>0){
 8001020:	4b0a      	ldr	r3, [pc, #40]	; (800104c <timer3_run+0x34>)
 8001022:	681b      	ldr	r3, [r3, #0]
 8001024:	2b00      	cmp	r3, #0
 8001026:	dd0b      	ble.n	8001040 <timer3_run+0x28>
		timer3_counter--;
 8001028:	4b08      	ldr	r3, [pc, #32]	; (800104c <timer3_run+0x34>)
 800102a:	681b      	ldr	r3, [r3, #0]
 800102c:	3b01      	subs	r3, #1
 800102e:	4a07      	ldr	r2, [pc, #28]	; (800104c <timer3_run+0x34>)
 8001030:	6013      	str	r3, [r2, #0]
		if(timer3_counter<=0) timer3_flag=1;
 8001032:	4b06      	ldr	r3, [pc, #24]	; (800104c <timer3_run+0x34>)
 8001034:	681b      	ldr	r3, [r3, #0]
 8001036:	2b00      	cmp	r3, #0
 8001038:	dc02      	bgt.n	8001040 <timer3_run+0x28>
 800103a:	4b05      	ldr	r3, [pc, #20]	; (8001050 <timer3_run+0x38>)
 800103c:	2201      	movs	r2, #1
 800103e:	601a      	str	r2, [r3, #0]
	}
}
 8001040:	bf00      	nop
 8001042:	370c      	adds	r7, #12
 8001044:	46bd      	mov	sp, r7
 8001046:	bc80      	pop	{r7}
 8001048:	4770      	bx	lr
 800104a:	bf00      	nop
 800104c:	20000218 	.word	0x20000218
 8001050:	20000214 	.word	0x20000214

08001054 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001054:	b480      	push	{r7}
 8001056:	b085      	sub	sp, #20
 8001058:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 800105a:	4b15      	ldr	r3, [pc, #84]	; (80010b0 <HAL_MspInit+0x5c>)
 800105c:	699b      	ldr	r3, [r3, #24]
 800105e:	4a14      	ldr	r2, [pc, #80]	; (80010b0 <HAL_MspInit+0x5c>)
 8001060:	f043 0301 	orr.w	r3, r3, #1
 8001064:	6193      	str	r3, [r2, #24]
 8001066:	4b12      	ldr	r3, [pc, #72]	; (80010b0 <HAL_MspInit+0x5c>)
 8001068:	699b      	ldr	r3, [r3, #24]
 800106a:	f003 0301 	and.w	r3, r3, #1
 800106e:	60bb      	str	r3, [r7, #8]
 8001070:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001072:	4b0f      	ldr	r3, [pc, #60]	; (80010b0 <HAL_MspInit+0x5c>)
 8001074:	69db      	ldr	r3, [r3, #28]
 8001076:	4a0e      	ldr	r2, [pc, #56]	; (80010b0 <HAL_MspInit+0x5c>)
 8001078:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800107c:	61d3      	str	r3, [r2, #28]
 800107e:	4b0c      	ldr	r3, [pc, #48]	; (80010b0 <HAL_MspInit+0x5c>)
 8001080:	69db      	ldr	r3, [r3, #28]
 8001082:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001086:	607b      	str	r3, [r7, #4]
 8001088:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 800108a:	4b0a      	ldr	r3, [pc, #40]	; (80010b4 <HAL_MspInit+0x60>)
 800108c:	685b      	ldr	r3, [r3, #4]
 800108e:	60fb      	str	r3, [r7, #12]
 8001090:	68fb      	ldr	r3, [r7, #12]
 8001092:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8001096:	60fb      	str	r3, [r7, #12]
 8001098:	68fb      	ldr	r3, [r7, #12]
 800109a:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800109e:	60fb      	str	r3, [r7, #12]
 80010a0:	4a04      	ldr	r2, [pc, #16]	; (80010b4 <HAL_MspInit+0x60>)
 80010a2:	68fb      	ldr	r3, [r7, #12]
 80010a4:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80010a6:	bf00      	nop
 80010a8:	3714      	adds	r7, #20
 80010aa:	46bd      	mov	sp, r7
 80010ac:	bc80      	pop	{r7}
 80010ae:	4770      	bx	lr
 80010b0:	40021000 	.word	0x40021000
 80010b4:	40010000 	.word	0x40010000

080010b8 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 80010b8:	b580      	push	{r7, lr}
 80010ba:	b084      	sub	sp, #16
 80010bc:	af00      	add	r7, sp, #0
 80010be:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 80010c0:	687b      	ldr	r3, [r7, #4]
 80010c2:	681b      	ldr	r3, [r3, #0]
 80010c4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80010c8:	d113      	bne.n	80010f2 <HAL_TIM_Base_MspInit+0x3a>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 80010ca:	4b0c      	ldr	r3, [pc, #48]	; (80010fc <HAL_TIM_Base_MspInit+0x44>)
 80010cc:	69db      	ldr	r3, [r3, #28]
 80010ce:	4a0b      	ldr	r2, [pc, #44]	; (80010fc <HAL_TIM_Base_MspInit+0x44>)
 80010d0:	f043 0301 	orr.w	r3, r3, #1
 80010d4:	61d3      	str	r3, [r2, #28]
 80010d6:	4b09      	ldr	r3, [pc, #36]	; (80010fc <HAL_TIM_Base_MspInit+0x44>)
 80010d8:	69db      	ldr	r3, [r3, #28]
 80010da:	f003 0301 	and.w	r3, r3, #1
 80010de:	60fb      	str	r3, [r7, #12]
 80010e0:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 80010e2:	2200      	movs	r2, #0
 80010e4:	2100      	movs	r1, #0
 80010e6:	201c      	movs	r0, #28
 80010e8:	f000 fa71 	bl	80015ce <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 80010ec:	201c      	movs	r0, #28
 80010ee:	f000 fa8a 	bl	8001606 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 80010f2:	bf00      	nop
 80010f4:	3710      	adds	r7, #16
 80010f6:	46bd      	mov	sp, r7
 80010f8:	bd80      	pop	{r7, pc}
 80010fa:	bf00      	nop
 80010fc:	40021000 	.word	0x40021000

08001100 <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 8001100:	b480      	push	{r7}
 8001102:	b085      	sub	sp, #20
 8001104:	af00      	add	r7, sp, #0
 8001106:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM3)
 8001108:	687b      	ldr	r3, [r7, #4]
 800110a:	681b      	ldr	r3, [r3, #0]
 800110c:	4a09      	ldr	r2, [pc, #36]	; (8001134 <HAL_TIM_PWM_MspInit+0x34>)
 800110e:	4293      	cmp	r3, r2
 8001110:	d10b      	bne.n	800112a <HAL_TIM_PWM_MspInit+0x2a>
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001112:	4b09      	ldr	r3, [pc, #36]	; (8001138 <HAL_TIM_PWM_MspInit+0x38>)
 8001114:	69db      	ldr	r3, [r3, #28]
 8001116:	4a08      	ldr	r2, [pc, #32]	; (8001138 <HAL_TIM_PWM_MspInit+0x38>)
 8001118:	f043 0302 	orr.w	r3, r3, #2
 800111c:	61d3      	str	r3, [r2, #28]
 800111e:	4b06      	ldr	r3, [pc, #24]	; (8001138 <HAL_TIM_PWM_MspInit+0x38>)
 8001120:	69db      	ldr	r3, [r3, #28]
 8001122:	f003 0302 	and.w	r3, r3, #2
 8001126:	60fb      	str	r3, [r7, #12]
 8001128:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 800112a:	bf00      	nop
 800112c:	3714      	adds	r7, #20
 800112e:	46bd      	mov	sp, r7
 8001130:	bc80      	pop	{r7}
 8001132:	4770      	bx	lr
 8001134:	40000400 	.word	0x40000400
 8001138:	40021000 	.word	0x40021000

0800113c <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 800113c:	b580      	push	{r7, lr}
 800113e:	b088      	sub	sp, #32
 8001140:	af00      	add	r7, sp, #0
 8001142:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001144:	f107 0310 	add.w	r3, r7, #16
 8001148:	2200      	movs	r2, #0
 800114a:	601a      	str	r2, [r3, #0]
 800114c:	605a      	str	r2, [r3, #4]
 800114e:	609a      	str	r2, [r3, #8]
 8001150:	60da      	str	r2, [r3, #12]
  if(htim->Instance==TIM3)
 8001152:	687b      	ldr	r3, [r7, #4]
 8001154:	681b      	ldr	r3, [r3, #0]
 8001156:	4a0f      	ldr	r2, [pc, #60]	; (8001194 <HAL_TIM_MspPostInit+0x58>)
 8001158:	4293      	cmp	r3, r2
 800115a:	d117      	bne.n	800118c <HAL_TIM_MspPostInit+0x50>
  {
  /* USER CODE BEGIN TIM3_MspPostInit 0 */

  /* USER CODE END TIM3_MspPostInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800115c:	4b0e      	ldr	r3, [pc, #56]	; (8001198 <HAL_TIM_MspPostInit+0x5c>)
 800115e:	699b      	ldr	r3, [r3, #24]
 8001160:	4a0d      	ldr	r2, [pc, #52]	; (8001198 <HAL_TIM_MspPostInit+0x5c>)
 8001162:	f043 0304 	orr.w	r3, r3, #4
 8001166:	6193      	str	r3, [r2, #24]
 8001168:	4b0b      	ldr	r3, [pc, #44]	; (8001198 <HAL_TIM_MspPostInit+0x5c>)
 800116a:	699b      	ldr	r3, [r3, #24]
 800116c:	f003 0304 	and.w	r3, r3, #4
 8001170:	60fb      	str	r3, [r7, #12]
 8001172:	68fb      	ldr	r3, [r7, #12]
    /**TIM3 GPIO Configuration
    PA6     ------> TIM3_CH1
    */
    GPIO_InitStruct.Pin = BUZZER_Pin;
 8001174:	2340      	movs	r3, #64	; 0x40
 8001176:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001178:	2302      	movs	r3, #2
 800117a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800117c:	2302      	movs	r3, #2
 800117e:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(BUZZER_GPIO_Port, &GPIO_InitStruct);
 8001180:	f107 0310 	add.w	r3, r7, #16
 8001184:	4619      	mov	r1, r3
 8001186:	4805      	ldr	r0, [pc, #20]	; (800119c <HAL_TIM_MspPostInit+0x60>)
 8001188:	f000 fa58 	bl	800163c <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM3_MspPostInit 1 */

  /* USER CODE END TIM3_MspPostInit 1 */
  }

}
 800118c:	bf00      	nop
 800118e:	3720      	adds	r7, #32
 8001190:	46bd      	mov	sp, r7
 8001192:	bd80      	pop	{r7, pc}
 8001194:	40000400 	.word	0x40000400
 8001198:	40021000 	.word	0x40021000
 800119c:	40010800 	.word	0x40010800

080011a0 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80011a0:	b580      	push	{r7, lr}
 80011a2:	b088      	sub	sp, #32
 80011a4:	af00      	add	r7, sp, #0
 80011a6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80011a8:	f107 0310 	add.w	r3, r7, #16
 80011ac:	2200      	movs	r2, #0
 80011ae:	601a      	str	r2, [r3, #0]
 80011b0:	605a      	str	r2, [r3, #4]
 80011b2:	609a      	str	r2, [r3, #8]
 80011b4:	60da      	str	r2, [r3, #12]
  if(huart->Instance==USART2)
 80011b6:	687b      	ldr	r3, [r7, #4]
 80011b8:	681b      	ldr	r3, [r3, #0]
 80011ba:	4a1b      	ldr	r2, [pc, #108]	; (8001228 <HAL_UART_MspInit+0x88>)
 80011bc:	4293      	cmp	r3, r2
 80011be:	d12f      	bne.n	8001220 <HAL_UART_MspInit+0x80>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 80011c0:	4b1a      	ldr	r3, [pc, #104]	; (800122c <HAL_UART_MspInit+0x8c>)
 80011c2:	69db      	ldr	r3, [r3, #28]
 80011c4:	4a19      	ldr	r2, [pc, #100]	; (800122c <HAL_UART_MspInit+0x8c>)
 80011c6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80011ca:	61d3      	str	r3, [r2, #28]
 80011cc:	4b17      	ldr	r3, [pc, #92]	; (800122c <HAL_UART_MspInit+0x8c>)
 80011ce:	69db      	ldr	r3, [r3, #28]
 80011d0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80011d4:	60fb      	str	r3, [r7, #12]
 80011d6:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80011d8:	4b14      	ldr	r3, [pc, #80]	; (800122c <HAL_UART_MspInit+0x8c>)
 80011da:	699b      	ldr	r3, [r3, #24]
 80011dc:	4a13      	ldr	r2, [pc, #76]	; (800122c <HAL_UART_MspInit+0x8c>)
 80011de:	f043 0304 	orr.w	r3, r3, #4
 80011e2:	6193      	str	r3, [r2, #24]
 80011e4:	4b11      	ldr	r3, [pc, #68]	; (800122c <HAL_UART_MspInit+0x8c>)
 80011e6:	699b      	ldr	r3, [r3, #24]
 80011e8:	f003 0304 	and.w	r3, r3, #4
 80011ec:	60bb      	str	r3, [r7, #8]
 80011ee:	68bb      	ldr	r3, [r7, #8]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 80011f0:	2304      	movs	r3, #4
 80011f2:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011f4:	2302      	movs	r3, #2
 80011f6:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80011f8:	2303      	movs	r3, #3
 80011fa:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80011fc:	f107 0310 	add.w	r3, r7, #16
 8001200:	4619      	mov	r1, r3
 8001202:	480b      	ldr	r0, [pc, #44]	; (8001230 <HAL_UART_MspInit+0x90>)
 8001204:	f000 fa1a 	bl	800163c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001208:	2308      	movs	r3, #8
 800120a:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800120c:	2300      	movs	r3, #0
 800120e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001210:	2300      	movs	r3, #0
 8001212:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001214:	f107 0310 	add.w	r3, r7, #16
 8001218:	4619      	mov	r1, r3
 800121a:	4805      	ldr	r0, [pc, #20]	; (8001230 <HAL_UART_MspInit+0x90>)
 800121c:	f000 fa0e 	bl	800163c <HAL_GPIO_Init>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8001220:	bf00      	nop
 8001222:	3720      	adds	r7, #32
 8001224:	46bd      	mov	sp, r7
 8001226:	bd80      	pop	{r7, pc}
 8001228:	40004400 	.word	0x40004400
 800122c:	40021000 	.word	0x40021000
 8001230:	40010800 	.word	0x40010800

08001234 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001234:	b480      	push	{r7}
 8001236:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001238:	e7fe      	b.n	8001238 <NMI_Handler+0x4>

0800123a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800123a:	b480      	push	{r7}
 800123c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800123e:	e7fe      	b.n	800123e <HardFault_Handler+0x4>

08001240 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001240:	b480      	push	{r7}
 8001242:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001244:	e7fe      	b.n	8001244 <MemManage_Handler+0x4>

08001246 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001246:	b480      	push	{r7}
 8001248:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800124a:	e7fe      	b.n	800124a <BusFault_Handler+0x4>

0800124c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 800124c:	b480      	push	{r7}
 800124e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001250:	e7fe      	b.n	8001250 <UsageFault_Handler+0x4>

08001252 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001252:	b480      	push	{r7}
 8001254:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001256:	bf00      	nop
 8001258:	46bd      	mov	sp, r7
 800125a:	bc80      	pop	{r7}
 800125c:	4770      	bx	lr

0800125e <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800125e:	b480      	push	{r7}
 8001260:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001262:	bf00      	nop
 8001264:	46bd      	mov	sp, r7
 8001266:	bc80      	pop	{r7}
 8001268:	4770      	bx	lr

0800126a <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800126a:	b480      	push	{r7}
 800126c:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800126e:	bf00      	nop
 8001270:	46bd      	mov	sp, r7
 8001272:	bc80      	pop	{r7}
 8001274:	4770      	bx	lr

08001276 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001276:	b580      	push	{r7, lr}
 8001278:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800127a:	f000 f8b5 	bl	80013e8 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800127e:	bf00      	nop
 8001280:	bd80      	pop	{r7, pc}
	...

08001284 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8001284:	b580      	push	{r7, lr}
 8001286:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8001288:	4802      	ldr	r0, [pc, #8]	; (8001294 <TIM2_IRQHandler+0x10>)
 800128a:	f001 f939 	bl	8002500 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 800128e:	bf00      	nop
 8001290:	bd80      	pop	{r7, pc}
 8001292:	bf00      	nop
 8001294:	20000130 	.word	0x20000130

08001298 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001298:	b580      	push	{r7, lr}
 800129a:	b086      	sub	sp, #24
 800129c:	af00      	add	r7, sp, #0
 800129e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80012a0:	4a14      	ldr	r2, [pc, #80]	; (80012f4 <_sbrk+0x5c>)
 80012a2:	4b15      	ldr	r3, [pc, #84]	; (80012f8 <_sbrk+0x60>)
 80012a4:	1ad3      	subs	r3, r2, r3
 80012a6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80012a8:	697b      	ldr	r3, [r7, #20]
 80012aa:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80012ac:	4b13      	ldr	r3, [pc, #76]	; (80012fc <_sbrk+0x64>)
 80012ae:	681b      	ldr	r3, [r3, #0]
 80012b0:	2b00      	cmp	r3, #0
 80012b2:	d102      	bne.n	80012ba <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80012b4:	4b11      	ldr	r3, [pc, #68]	; (80012fc <_sbrk+0x64>)
 80012b6:	4a12      	ldr	r2, [pc, #72]	; (8001300 <_sbrk+0x68>)
 80012b8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80012ba:	4b10      	ldr	r3, [pc, #64]	; (80012fc <_sbrk+0x64>)
 80012bc:	681a      	ldr	r2, [r3, #0]
 80012be:	687b      	ldr	r3, [r7, #4]
 80012c0:	4413      	add	r3, r2
 80012c2:	693a      	ldr	r2, [r7, #16]
 80012c4:	429a      	cmp	r2, r3
 80012c6:	d207      	bcs.n	80012d8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80012c8:	f002 f894 	bl	80033f4 <__errno>
 80012cc:	4603      	mov	r3, r0
 80012ce:	220c      	movs	r2, #12
 80012d0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80012d2:	f04f 33ff 	mov.w	r3, #4294967295
 80012d6:	e009      	b.n	80012ec <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80012d8:	4b08      	ldr	r3, [pc, #32]	; (80012fc <_sbrk+0x64>)
 80012da:	681b      	ldr	r3, [r3, #0]
 80012dc:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80012de:	4b07      	ldr	r3, [pc, #28]	; (80012fc <_sbrk+0x64>)
 80012e0:	681a      	ldr	r2, [r3, #0]
 80012e2:	687b      	ldr	r3, [r7, #4]
 80012e4:	4413      	add	r3, r2
 80012e6:	4a05      	ldr	r2, [pc, #20]	; (80012fc <_sbrk+0x64>)
 80012e8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80012ea:	68fb      	ldr	r3, [r7, #12]
}
 80012ec:	4618      	mov	r0, r3
 80012ee:	3718      	adds	r7, #24
 80012f0:	46bd      	mov	sp, r7
 80012f2:	bd80      	pop	{r7, pc}
 80012f4:	20005000 	.word	0x20005000
 80012f8:	00000400 	.word	0x00000400
 80012fc:	2000021c 	.word	0x2000021c
 8001300:	20000238 	.word	0x20000238

08001304 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8001304:	b480      	push	{r7}
 8001306:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001308:	bf00      	nop
 800130a:	46bd      	mov	sp, r7
 800130c:	bc80      	pop	{r7}
 800130e:	4770      	bx	lr

08001310 <Reset_Handler>:
 8001310:	480c      	ldr	r0, [pc, #48]	; (8001344 <LoopFillZerobss+0x12>)
 8001312:	490d      	ldr	r1, [pc, #52]	; (8001348 <LoopFillZerobss+0x16>)
 8001314:	4a0d      	ldr	r2, [pc, #52]	; (800134c <LoopFillZerobss+0x1a>)
 8001316:	2300      	movs	r3, #0
 8001318:	e002      	b.n	8001320 <LoopCopyDataInit>

0800131a <CopyDataInit>:
 800131a:	58d4      	ldr	r4, [r2, r3]
 800131c:	50c4      	str	r4, [r0, r3]
 800131e:	3304      	adds	r3, #4

08001320 <LoopCopyDataInit>:
 8001320:	18c4      	adds	r4, r0, r3
 8001322:	428c      	cmp	r4, r1
 8001324:	d3f9      	bcc.n	800131a <CopyDataInit>
 8001326:	4a0a      	ldr	r2, [pc, #40]	; (8001350 <LoopFillZerobss+0x1e>)
 8001328:	4c0a      	ldr	r4, [pc, #40]	; (8001354 <LoopFillZerobss+0x22>)
 800132a:	2300      	movs	r3, #0
 800132c:	e001      	b.n	8001332 <LoopFillZerobss>

0800132e <FillZerobss>:
 800132e:	6013      	str	r3, [r2, #0]
 8001330:	3204      	adds	r2, #4

08001332 <LoopFillZerobss>:
 8001332:	42a2      	cmp	r2, r4
 8001334:	d3fb      	bcc.n	800132e <FillZerobss>
 8001336:	f7ff ffe5 	bl	8001304 <SystemInit>
 800133a:	f002 f861 	bl	8003400 <__libc_init_array>
 800133e:	f7ff fa43 	bl	80007c8 <main>
 8001342:	4770      	bx	lr
 8001344:	20000000 	.word	0x20000000
 8001348:	200000bc 	.word	0x200000bc
 800134c:	08003e58 	.word	0x08003e58
 8001350:	200000bc 	.word	0x200000bc
 8001354:	20000234 	.word	0x20000234

08001358 <ADC1_2_IRQHandler>:
 8001358:	e7fe      	b.n	8001358 <ADC1_2_IRQHandler>
	...

0800135c <HAL_Init>:
 800135c:	b580      	push	{r7, lr}
 800135e:	af00      	add	r7, sp, #0
 8001360:	4b08      	ldr	r3, [pc, #32]	; (8001384 <HAL_Init+0x28>)
 8001362:	681b      	ldr	r3, [r3, #0]
 8001364:	4a07      	ldr	r2, [pc, #28]	; (8001384 <HAL_Init+0x28>)
 8001366:	f043 0310 	orr.w	r3, r3, #16
 800136a:	6013      	str	r3, [r2, #0]
 800136c:	2003      	movs	r0, #3
 800136e:	f000 f923 	bl	80015b8 <HAL_NVIC_SetPriorityGrouping>
 8001372:	200f      	movs	r0, #15
 8001374:	f000 f808 	bl	8001388 <HAL_InitTick>
 8001378:	f7ff fe6c 	bl	8001054 <HAL_MspInit>
 800137c:	2300      	movs	r3, #0
 800137e:	4618      	mov	r0, r3
 8001380:	bd80      	pop	{r7, pc}
 8001382:	bf00      	nop
 8001384:	40022000 	.word	0x40022000

08001388 <HAL_InitTick>:
 8001388:	b580      	push	{r7, lr}
 800138a:	b082      	sub	sp, #8
 800138c:	af00      	add	r7, sp, #0
 800138e:	6078      	str	r0, [r7, #4]
 8001390:	4b12      	ldr	r3, [pc, #72]	; (80013dc <HAL_InitTick+0x54>)
 8001392:	681a      	ldr	r2, [r3, #0]
 8001394:	4b12      	ldr	r3, [pc, #72]	; (80013e0 <HAL_InitTick+0x58>)
 8001396:	781b      	ldrb	r3, [r3, #0]
 8001398:	4619      	mov	r1, r3
 800139a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800139e:	fbb3 f3f1 	udiv	r3, r3, r1
 80013a2:	fbb2 f3f3 	udiv	r3, r2, r3
 80013a6:	4618      	mov	r0, r3
 80013a8:	f000 f93b 	bl	8001622 <HAL_SYSTICK_Config>
 80013ac:	4603      	mov	r3, r0
 80013ae:	2b00      	cmp	r3, #0
 80013b0:	d001      	beq.n	80013b6 <HAL_InitTick+0x2e>
 80013b2:	2301      	movs	r3, #1
 80013b4:	e00e      	b.n	80013d4 <HAL_InitTick+0x4c>
 80013b6:	687b      	ldr	r3, [r7, #4]
 80013b8:	2b0f      	cmp	r3, #15
 80013ba:	d80a      	bhi.n	80013d2 <HAL_InitTick+0x4a>
 80013bc:	2200      	movs	r2, #0
 80013be:	6879      	ldr	r1, [r7, #4]
 80013c0:	f04f 30ff 	mov.w	r0, #4294967295
 80013c4:	f000 f903 	bl	80015ce <HAL_NVIC_SetPriority>
 80013c8:	4a06      	ldr	r2, [pc, #24]	; (80013e4 <HAL_InitTick+0x5c>)
 80013ca:	687b      	ldr	r3, [r7, #4]
 80013cc:	6013      	str	r3, [r2, #0]
 80013ce:	2300      	movs	r3, #0
 80013d0:	e000      	b.n	80013d4 <HAL_InitTick+0x4c>
 80013d2:	2301      	movs	r3, #1
 80013d4:	4618      	mov	r0, r3
 80013d6:	3708      	adds	r7, #8
 80013d8:	46bd      	mov	sp, r7
 80013da:	bd80      	pop	{r7, pc}
 80013dc:	2000004c 	.word	0x2000004c
 80013e0:	20000054 	.word	0x20000054
 80013e4:	20000050 	.word	0x20000050

080013e8 <HAL_IncTick>:
 80013e8:	b480      	push	{r7}
 80013ea:	af00      	add	r7, sp, #0
 80013ec:	4b05      	ldr	r3, [pc, #20]	; (8001404 <HAL_IncTick+0x1c>)
 80013ee:	781b      	ldrb	r3, [r3, #0]
 80013f0:	461a      	mov	r2, r3
 80013f2:	4b05      	ldr	r3, [pc, #20]	; (8001408 <HAL_IncTick+0x20>)
 80013f4:	681b      	ldr	r3, [r3, #0]
 80013f6:	4413      	add	r3, r2
 80013f8:	4a03      	ldr	r2, [pc, #12]	; (8001408 <HAL_IncTick+0x20>)
 80013fa:	6013      	str	r3, [r2, #0]
 80013fc:	bf00      	nop
 80013fe:	46bd      	mov	sp, r7
 8001400:	bc80      	pop	{r7}
 8001402:	4770      	bx	lr
 8001404:	20000054 	.word	0x20000054
 8001408:	20000220 	.word	0x20000220

0800140c <HAL_GetTick>:
 800140c:	b480      	push	{r7}
 800140e:	af00      	add	r7, sp, #0
 8001410:	4b02      	ldr	r3, [pc, #8]	; (800141c <HAL_GetTick+0x10>)
 8001412:	681b      	ldr	r3, [r3, #0]
 8001414:	4618      	mov	r0, r3
 8001416:	46bd      	mov	sp, r7
 8001418:	bc80      	pop	{r7}
 800141a:	4770      	bx	lr
 800141c:	20000220 	.word	0x20000220

08001420 <__NVIC_SetPriorityGrouping>:
 8001420:	b480      	push	{r7}
 8001422:	b085      	sub	sp, #20
 8001424:	af00      	add	r7, sp, #0
 8001426:	6078      	str	r0, [r7, #4]
 8001428:	687b      	ldr	r3, [r7, #4]
 800142a:	f003 0307 	and.w	r3, r3, #7
 800142e:	60fb      	str	r3, [r7, #12]
 8001430:	4b0c      	ldr	r3, [pc, #48]	; (8001464 <__NVIC_SetPriorityGrouping+0x44>)
 8001432:	68db      	ldr	r3, [r3, #12]
 8001434:	60bb      	str	r3, [r7, #8]
 8001436:	68ba      	ldr	r2, [r7, #8]
 8001438:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 800143c:	4013      	ands	r3, r2
 800143e:	60bb      	str	r3, [r7, #8]
 8001440:	68fb      	ldr	r3, [r7, #12]
 8001442:	021a      	lsls	r2, r3, #8
 8001444:	68bb      	ldr	r3, [r7, #8]
 8001446:	4313      	orrs	r3, r2
 8001448:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800144c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001450:	60bb      	str	r3, [r7, #8]
 8001452:	4a04      	ldr	r2, [pc, #16]	; (8001464 <__NVIC_SetPriorityGrouping+0x44>)
 8001454:	68bb      	ldr	r3, [r7, #8]
 8001456:	60d3      	str	r3, [r2, #12]
 8001458:	bf00      	nop
 800145a:	3714      	adds	r7, #20
 800145c:	46bd      	mov	sp, r7
 800145e:	bc80      	pop	{r7}
 8001460:	4770      	bx	lr
 8001462:	bf00      	nop
 8001464:	e000ed00 	.word	0xe000ed00

08001468 <__NVIC_GetPriorityGrouping>:
 8001468:	b480      	push	{r7}
 800146a:	af00      	add	r7, sp, #0
 800146c:	4b04      	ldr	r3, [pc, #16]	; (8001480 <__NVIC_GetPriorityGrouping+0x18>)
 800146e:	68db      	ldr	r3, [r3, #12]
 8001470:	0a1b      	lsrs	r3, r3, #8
 8001472:	f003 0307 	and.w	r3, r3, #7
 8001476:	4618      	mov	r0, r3
 8001478:	46bd      	mov	sp, r7
 800147a:	bc80      	pop	{r7}
 800147c:	4770      	bx	lr
 800147e:	bf00      	nop
 8001480:	e000ed00 	.word	0xe000ed00

08001484 <__NVIC_EnableIRQ>:
 8001484:	b480      	push	{r7}
 8001486:	b083      	sub	sp, #12
 8001488:	af00      	add	r7, sp, #0
 800148a:	4603      	mov	r3, r0
 800148c:	71fb      	strb	r3, [r7, #7]
 800148e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001492:	2b00      	cmp	r3, #0
 8001494:	db0b      	blt.n	80014ae <__NVIC_EnableIRQ+0x2a>
 8001496:	79fb      	ldrb	r3, [r7, #7]
 8001498:	f003 021f 	and.w	r2, r3, #31
 800149c:	4906      	ldr	r1, [pc, #24]	; (80014b8 <__NVIC_EnableIRQ+0x34>)
 800149e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80014a2:	095b      	lsrs	r3, r3, #5
 80014a4:	2001      	movs	r0, #1
 80014a6:	fa00 f202 	lsl.w	r2, r0, r2
 80014aa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80014ae:	bf00      	nop
 80014b0:	370c      	adds	r7, #12
 80014b2:	46bd      	mov	sp, r7
 80014b4:	bc80      	pop	{r7}
 80014b6:	4770      	bx	lr
 80014b8:	e000e100 	.word	0xe000e100

080014bc <__NVIC_SetPriority>:
 80014bc:	b480      	push	{r7}
 80014be:	b083      	sub	sp, #12
 80014c0:	af00      	add	r7, sp, #0
 80014c2:	4603      	mov	r3, r0
 80014c4:	6039      	str	r1, [r7, #0]
 80014c6:	71fb      	strb	r3, [r7, #7]
 80014c8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80014cc:	2b00      	cmp	r3, #0
 80014ce:	db0a      	blt.n	80014e6 <__NVIC_SetPriority+0x2a>
 80014d0:	683b      	ldr	r3, [r7, #0]
 80014d2:	b2da      	uxtb	r2, r3
 80014d4:	490c      	ldr	r1, [pc, #48]	; (8001508 <__NVIC_SetPriority+0x4c>)
 80014d6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80014da:	0112      	lsls	r2, r2, #4
 80014dc:	b2d2      	uxtb	r2, r2
 80014de:	440b      	add	r3, r1
 80014e0:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80014e4:	e00a      	b.n	80014fc <__NVIC_SetPriority+0x40>
 80014e6:	683b      	ldr	r3, [r7, #0]
 80014e8:	b2da      	uxtb	r2, r3
 80014ea:	4908      	ldr	r1, [pc, #32]	; (800150c <__NVIC_SetPriority+0x50>)
 80014ec:	79fb      	ldrb	r3, [r7, #7]
 80014ee:	f003 030f 	and.w	r3, r3, #15
 80014f2:	3b04      	subs	r3, #4
 80014f4:	0112      	lsls	r2, r2, #4
 80014f6:	b2d2      	uxtb	r2, r2
 80014f8:	440b      	add	r3, r1
 80014fa:	761a      	strb	r2, [r3, #24]
 80014fc:	bf00      	nop
 80014fe:	370c      	adds	r7, #12
 8001500:	46bd      	mov	sp, r7
 8001502:	bc80      	pop	{r7}
 8001504:	4770      	bx	lr
 8001506:	bf00      	nop
 8001508:	e000e100 	.word	0xe000e100
 800150c:	e000ed00 	.word	0xe000ed00

08001510 <NVIC_EncodePriority>:
 8001510:	b480      	push	{r7}
 8001512:	b089      	sub	sp, #36	; 0x24
 8001514:	af00      	add	r7, sp, #0
 8001516:	60f8      	str	r0, [r7, #12]
 8001518:	60b9      	str	r1, [r7, #8]
 800151a:	607a      	str	r2, [r7, #4]
 800151c:	68fb      	ldr	r3, [r7, #12]
 800151e:	f003 0307 	and.w	r3, r3, #7
 8001522:	61fb      	str	r3, [r7, #28]
 8001524:	69fb      	ldr	r3, [r7, #28]
 8001526:	f1c3 0307 	rsb	r3, r3, #7
 800152a:	2b04      	cmp	r3, #4
 800152c:	bf28      	it	cs
 800152e:	2304      	movcs	r3, #4
 8001530:	61bb      	str	r3, [r7, #24]
 8001532:	69fb      	ldr	r3, [r7, #28]
 8001534:	3304      	adds	r3, #4
 8001536:	2b06      	cmp	r3, #6
 8001538:	d902      	bls.n	8001540 <NVIC_EncodePriority+0x30>
 800153a:	69fb      	ldr	r3, [r7, #28]
 800153c:	3b03      	subs	r3, #3
 800153e:	e000      	b.n	8001542 <NVIC_EncodePriority+0x32>
 8001540:	2300      	movs	r3, #0
 8001542:	617b      	str	r3, [r7, #20]
 8001544:	f04f 32ff 	mov.w	r2, #4294967295
 8001548:	69bb      	ldr	r3, [r7, #24]
 800154a:	fa02 f303 	lsl.w	r3, r2, r3
 800154e:	43da      	mvns	r2, r3
 8001550:	68bb      	ldr	r3, [r7, #8]
 8001552:	401a      	ands	r2, r3
 8001554:	697b      	ldr	r3, [r7, #20]
 8001556:	409a      	lsls	r2, r3
 8001558:	f04f 31ff 	mov.w	r1, #4294967295
 800155c:	697b      	ldr	r3, [r7, #20]
 800155e:	fa01 f303 	lsl.w	r3, r1, r3
 8001562:	43d9      	mvns	r1, r3
 8001564:	687b      	ldr	r3, [r7, #4]
 8001566:	400b      	ands	r3, r1
 8001568:	4313      	orrs	r3, r2
 800156a:	4618      	mov	r0, r3
 800156c:	3724      	adds	r7, #36	; 0x24
 800156e:	46bd      	mov	sp, r7
 8001570:	bc80      	pop	{r7}
 8001572:	4770      	bx	lr

08001574 <SysTick_Config>:
 8001574:	b580      	push	{r7, lr}
 8001576:	b082      	sub	sp, #8
 8001578:	af00      	add	r7, sp, #0
 800157a:	6078      	str	r0, [r7, #4]
 800157c:	687b      	ldr	r3, [r7, #4]
 800157e:	3b01      	subs	r3, #1
 8001580:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001584:	d301      	bcc.n	800158a <SysTick_Config+0x16>
 8001586:	2301      	movs	r3, #1
 8001588:	e00f      	b.n	80015aa <SysTick_Config+0x36>
 800158a:	4a0a      	ldr	r2, [pc, #40]	; (80015b4 <SysTick_Config+0x40>)
 800158c:	687b      	ldr	r3, [r7, #4]
 800158e:	3b01      	subs	r3, #1
 8001590:	6053      	str	r3, [r2, #4]
 8001592:	210f      	movs	r1, #15
 8001594:	f04f 30ff 	mov.w	r0, #4294967295
 8001598:	f7ff ff90 	bl	80014bc <__NVIC_SetPriority>
 800159c:	4b05      	ldr	r3, [pc, #20]	; (80015b4 <SysTick_Config+0x40>)
 800159e:	2200      	movs	r2, #0
 80015a0:	609a      	str	r2, [r3, #8]
 80015a2:	4b04      	ldr	r3, [pc, #16]	; (80015b4 <SysTick_Config+0x40>)
 80015a4:	2207      	movs	r2, #7
 80015a6:	601a      	str	r2, [r3, #0]
 80015a8:	2300      	movs	r3, #0
 80015aa:	4618      	mov	r0, r3
 80015ac:	3708      	adds	r7, #8
 80015ae:	46bd      	mov	sp, r7
 80015b0:	bd80      	pop	{r7, pc}
 80015b2:	bf00      	nop
 80015b4:	e000e010 	.word	0xe000e010

080015b8 <HAL_NVIC_SetPriorityGrouping>:
 80015b8:	b580      	push	{r7, lr}
 80015ba:	b082      	sub	sp, #8
 80015bc:	af00      	add	r7, sp, #0
 80015be:	6078      	str	r0, [r7, #4]
 80015c0:	6878      	ldr	r0, [r7, #4]
 80015c2:	f7ff ff2d 	bl	8001420 <__NVIC_SetPriorityGrouping>
 80015c6:	bf00      	nop
 80015c8:	3708      	adds	r7, #8
 80015ca:	46bd      	mov	sp, r7
 80015cc:	bd80      	pop	{r7, pc}

080015ce <HAL_NVIC_SetPriority>:
 80015ce:	b580      	push	{r7, lr}
 80015d0:	b086      	sub	sp, #24
 80015d2:	af00      	add	r7, sp, #0
 80015d4:	4603      	mov	r3, r0
 80015d6:	60b9      	str	r1, [r7, #8]
 80015d8:	607a      	str	r2, [r7, #4]
 80015da:	73fb      	strb	r3, [r7, #15]
 80015dc:	2300      	movs	r3, #0
 80015de:	617b      	str	r3, [r7, #20]
 80015e0:	f7ff ff42 	bl	8001468 <__NVIC_GetPriorityGrouping>
 80015e4:	6178      	str	r0, [r7, #20]
 80015e6:	687a      	ldr	r2, [r7, #4]
 80015e8:	68b9      	ldr	r1, [r7, #8]
 80015ea:	6978      	ldr	r0, [r7, #20]
 80015ec:	f7ff ff90 	bl	8001510 <NVIC_EncodePriority>
 80015f0:	4602      	mov	r2, r0
 80015f2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80015f6:	4611      	mov	r1, r2
 80015f8:	4618      	mov	r0, r3
 80015fa:	f7ff ff5f 	bl	80014bc <__NVIC_SetPriority>
 80015fe:	bf00      	nop
 8001600:	3718      	adds	r7, #24
 8001602:	46bd      	mov	sp, r7
 8001604:	bd80      	pop	{r7, pc}

08001606 <HAL_NVIC_EnableIRQ>:
 8001606:	b580      	push	{r7, lr}
 8001608:	b082      	sub	sp, #8
 800160a:	af00      	add	r7, sp, #0
 800160c:	4603      	mov	r3, r0
 800160e:	71fb      	strb	r3, [r7, #7]
 8001610:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001614:	4618      	mov	r0, r3
 8001616:	f7ff ff35 	bl	8001484 <__NVIC_EnableIRQ>
 800161a:	bf00      	nop
 800161c:	3708      	adds	r7, #8
 800161e:	46bd      	mov	sp, r7
 8001620:	bd80      	pop	{r7, pc}

08001622 <HAL_SYSTICK_Config>:
 8001622:	b580      	push	{r7, lr}
 8001624:	b082      	sub	sp, #8
 8001626:	af00      	add	r7, sp, #0
 8001628:	6078      	str	r0, [r7, #4]
 800162a:	6878      	ldr	r0, [r7, #4]
 800162c:	f7ff ffa2 	bl	8001574 <SysTick_Config>
 8001630:	4603      	mov	r3, r0
 8001632:	4618      	mov	r0, r3
 8001634:	3708      	adds	r7, #8
 8001636:	46bd      	mov	sp, r7
 8001638:	bd80      	pop	{r7, pc}
	...

0800163c <HAL_GPIO_Init>:
 800163c:	b480      	push	{r7}
 800163e:	b08b      	sub	sp, #44	; 0x2c
 8001640:	af00      	add	r7, sp, #0
 8001642:	6078      	str	r0, [r7, #4]
 8001644:	6039      	str	r1, [r7, #0]
 8001646:	2300      	movs	r3, #0
 8001648:	627b      	str	r3, [r7, #36]	; 0x24
 800164a:	2300      	movs	r3, #0
 800164c:	623b      	str	r3, [r7, #32]
 800164e:	e169      	b.n	8001924 <HAL_GPIO_Init+0x2e8>
 8001650:	2201      	movs	r2, #1
 8001652:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001654:	fa02 f303 	lsl.w	r3, r2, r3
 8001658:	61fb      	str	r3, [r7, #28]
 800165a:	683b      	ldr	r3, [r7, #0]
 800165c:	681b      	ldr	r3, [r3, #0]
 800165e:	69fa      	ldr	r2, [r7, #28]
 8001660:	4013      	ands	r3, r2
 8001662:	61bb      	str	r3, [r7, #24]
 8001664:	69ba      	ldr	r2, [r7, #24]
 8001666:	69fb      	ldr	r3, [r7, #28]
 8001668:	429a      	cmp	r2, r3
 800166a:	f040 8158 	bne.w	800191e <HAL_GPIO_Init+0x2e2>
 800166e:	683b      	ldr	r3, [r7, #0]
 8001670:	685b      	ldr	r3, [r3, #4]
 8001672:	4a9a      	ldr	r2, [pc, #616]	; (80018dc <HAL_GPIO_Init+0x2a0>)
 8001674:	4293      	cmp	r3, r2
 8001676:	d05e      	beq.n	8001736 <HAL_GPIO_Init+0xfa>
 8001678:	4a98      	ldr	r2, [pc, #608]	; (80018dc <HAL_GPIO_Init+0x2a0>)
 800167a:	4293      	cmp	r3, r2
 800167c:	d875      	bhi.n	800176a <HAL_GPIO_Init+0x12e>
 800167e:	4a98      	ldr	r2, [pc, #608]	; (80018e0 <HAL_GPIO_Init+0x2a4>)
 8001680:	4293      	cmp	r3, r2
 8001682:	d058      	beq.n	8001736 <HAL_GPIO_Init+0xfa>
 8001684:	4a96      	ldr	r2, [pc, #600]	; (80018e0 <HAL_GPIO_Init+0x2a4>)
 8001686:	4293      	cmp	r3, r2
 8001688:	d86f      	bhi.n	800176a <HAL_GPIO_Init+0x12e>
 800168a:	4a96      	ldr	r2, [pc, #600]	; (80018e4 <HAL_GPIO_Init+0x2a8>)
 800168c:	4293      	cmp	r3, r2
 800168e:	d052      	beq.n	8001736 <HAL_GPIO_Init+0xfa>
 8001690:	4a94      	ldr	r2, [pc, #592]	; (80018e4 <HAL_GPIO_Init+0x2a8>)
 8001692:	4293      	cmp	r3, r2
 8001694:	d869      	bhi.n	800176a <HAL_GPIO_Init+0x12e>
 8001696:	4a94      	ldr	r2, [pc, #592]	; (80018e8 <HAL_GPIO_Init+0x2ac>)
 8001698:	4293      	cmp	r3, r2
 800169a:	d04c      	beq.n	8001736 <HAL_GPIO_Init+0xfa>
 800169c:	4a92      	ldr	r2, [pc, #584]	; (80018e8 <HAL_GPIO_Init+0x2ac>)
 800169e:	4293      	cmp	r3, r2
 80016a0:	d863      	bhi.n	800176a <HAL_GPIO_Init+0x12e>
 80016a2:	4a92      	ldr	r2, [pc, #584]	; (80018ec <HAL_GPIO_Init+0x2b0>)
 80016a4:	4293      	cmp	r3, r2
 80016a6:	d046      	beq.n	8001736 <HAL_GPIO_Init+0xfa>
 80016a8:	4a90      	ldr	r2, [pc, #576]	; (80018ec <HAL_GPIO_Init+0x2b0>)
 80016aa:	4293      	cmp	r3, r2
 80016ac:	d85d      	bhi.n	800176a <HAL_GPIO_Init+0x12e>
 80016ae:	2b12      	cmp	r3, #18
 80016b0:	d82a      	bhi.n	8001708 <HAL_GPIO_Init+0xcc>
 80016b2:	2b12      	cmp	r3, #18
 80016b4:	d859      	bhi.n	800176a <HAL_GPIO_Init+0x12e>
 80016b6:	a201      	add	r2, pc, #4	; (adr r2, 80016bc <HAL_GPIO_Init+0x80>)
 80016b8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80016bc:	08001737 	.word	0x08001737
 80016c0:	08001711 	.word	0x08001711
 80016c4:	08001723 	.word	0x08001723
 80016c8:	08001765 	.word	0x08001765
 80016cc:	0800176b 	.word	0x0800176b
 80016d0:	0800176b 	.word	0x0800176b
 80016d4:	0800176b 	.word	0x0800176b
 80016d8:	0800176b 	.word	0x0800176b
 80016dc:	0800176b 	.word	0x0800176b
 80016e0:	0800176b 	.word	0x0800176b
 80016e4:	0800176b 	.word	0x0800176b
 80016e8:	0800176b 	.word	0x0800176b
 80016ec:	0800176b 	.word	0x0800176b
 80016f0:	0800176b 	.word	0x0800176b
 80016f4:	0800176b 	.word	0x0800176b
 80016f8:	0800176b 	.word	0x0800176b
 80016fc:	0800176b 	.word	0x0800176b
 8001700:	08001719 	.word	0x08001719
 8001704:	0800172d 	.word	0x0800172d
 8001708:	4a79      	ldr	r2, [pc, #484]	; (80018f0 <HAL_GPIO_Init+0x2b4>)
 800170a:	4293      	cmp	r3, r2
 800170c:	d013      	beq.n	8001736 <HAL_GPIO_Init+0xfa>
 800170e:	e02c      	b.n	800176a <HAL_GPIO_Init+0x12e>
 8001710:	683b      	ldr	r3, [r7, #0]
 8001712:	68db      	ldr	r3, [r3, #12]
 8001714:	623b      	str	r3, [r7, #32]
 8001716:	e029      	b.n	800176c <HAL_GPIO_Init+0x130>
 8001718:	683b      	ldr	r3, [r7, #0]
 800171a:	68db      	ldr	r3, [r3, #12]
 800171c:	3304      	adds	r3, #4
 800171e:	623b      	str	r3, [r7, #32]
 8001720:	e024      	b.n	800176c <HAL_GPIO_Init+0x130>
 8001722:	683b      	ldr	r3, [r7, #0]
 8001724:	68db      	ldr	r3, [r3, #12]
 8001726:	3308      	adds	r3, #8
 8001728:	623b      	str	r3, [r7, #32]
 800172a:	e01f      	b.n	800176c <HAL_GPIO_Init+0x130>
 800172c:	683b      	ldr	r3, [r7, #0]
 800172e:	68db      	ldr	r3, [r3, #12]
 8001730:	330c      	adds	r3, #12
 8001732:	623b      	str	r3, [r7, #32]
 8001734:	e01a      	b.n	800176c <HAL_GPIO_Init+0x130>
 8001736:	683b      	ldr	r3, [r7, #0]
 8001738:	689b      	ldr	r3, [r3, #8]
 800173a:	2b00      	cmp	r3, #0
 800173c:	d102      	bne.n	8001744 <HAL_GPIO_Init+0x108>
 800173e:	2304      	movs	r3, #4
 8001740:	623b      	str	r3, [r7, #32]
 8001742:	e013      	b.n	800176c <HAL_GPIO_Init+0x130>
 8001744:	683b      	ldr	r3, [r7, #0]
 8001746:	689b      	ldr	r3, [r3, #8]
 8001748:	2b01      	cmp	r3, #1
 800174a:	d105      	bne.n	8001758 <HAL_GPIO_Init+0x11c>
 800174c:	2308      	movs	r3, #8
 800174e:	623b      	str	r3, [r7, #32]
 8001750:	687b      	ldr	r3, [r7, #4]
 8001752:	69fa      	ldr	r2, [r7, #28]
 8001754:	611a      	str	r2, [r3, #16]
 8001756:	e009      	b.n	800176c <HAL_GPIO_Init+0x130>
 8001758:	2308      	movs	r3, #8
 800175a:	623b      	str	r3, [r7, #32]
 800175c:	687b      	ldr	r3, [r7, #4]
 800175e:	69fa      	ldr	r2, [r7, #28]
 8001760:	615a      	str	r2, [r3, #20]
 8001762:	e003      	b.n	800176c <HAL_GPIO_Init+0x130>
 8001764:	2300      	movs	r3, #0
 8001766:	623b      	str	r3, [r7, #32]
 8001768:	e000      	b.n	800176c <HAL_GPIO_Init+0x130>
 800176a:	bf00      	nop
 800176c:	69bb      	ldr	r3, [r7, #24]
 800176e:	2bff      	cmp	r3, #255	; 0xff
 8001770:	d801      	bhi.n	8001776 <HAL_GPIO_Init+0x13a>
 8001772:	687b      	ldr	r3, [r7, #4]
 8001774:	e001      	b.n	800177a <HAL_GPIO_Init+0x13e>
 8001776:	687b      	ldr	r3, [r7, #4]
 8001778:	3304      	adds	r3, #4
 800177a:	617b      	str	r3, [r7, #20]
 800177c:	69bb      	ldr	r3, [r7, #24]
 800177e:	2bff      	cmp	r3, #255	; 0xff
 8001780:	d802      	bhi.n	8001788 <HAL_GPIO_Init+0x14c>
 8001782:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001784:	009b      	lsls	r3, r3, #2
 8001786:	e002      	b.n	800178e <HAL_GPIO_Init+0x152>
 8001788:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800178a:	3b08      	subs	r3, #8
 800178c:	009b      	lsls	r3, r3, #2
 800178e:	613b      	str	r3, [r7, #16]
 8001790:	697b      	ldr	r3, [r7, #20]
 8001792:	681a      	ldr	r2, [r3, #0]
 8001794:	210f      	movs	r1, #15
 8001796:	693b      	ldr	r3, [r7, #16]
 8001798:	fa01 f303 	lsl.w	r3, r1, r3
 800179c:	43db      	mvns	r3, r3
 800179e:	401a      	ands	r2, r3
 80017a0:	6a39      	ldr	r1, [r7, #32]
 80017a2:	693b      	ldr	r3, [r7, #16]
 80017a4:	fa01 f303 	lsl.w	r3, r1, r3
 80017a8:	431a      	orrs	r2, r3
 80017aa:	697b      	ldr	r3, [r7, #20]
 80017ac:	601a      	str	r2, [r3, #0]
 80017ae:	683b      	ldr	r3, [r7, #0]
 80017b0:	685b      	ldr	r3, [r3, #4]
 80017b2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80017b6:	2b00      	cmp	r3, #0
 80017b8:	f000 80b1 	beq.w	800191e <HAL_GPIO_Init+0x2e2>
 80017bc:	4b4d      	ldr	r3, [pc, #308]	; (80018f4 <HAL_GPIO_Init+0x2b8>)
 80017be:	699b      	ldr	r3, [r3, #24]
 80017c0:	4a4c      	ldr	r2, [pc, #304]	; (80018f4 <HAL_GPIO_Init+0x2b8>)
 80017c2:	f043 0301 	orr.w	r3, r3, #1
 80017c6:	6193      	str	r3, [r2, #24]
 80017c8:	4b4a      	ldr	r3, [pc, #296]	; (80018f4 <HAL_GPIO_Init+0x2b8>)
 80017ca:	699b      	ldr	r3, [r3, #24]
 80017cc:	f003 0301 	and.w	r3, r3, #1
 80017d0:	60bb      	str	r3, [r7, #8]
 80017d2:	68bb      	ldr	r3, [r7, #8]
 80017d4:	4a48      	ldr	r2, [pc, #288]	; (80018f8 <HAL_GPIO_Init+0x2bc>)
 80017d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80017d8:	089b      	lsrs	r3, r3, #2
 80017da:	3302      	adds	r3, #2
 80017dc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80017e0:	60fb      	str	r3, [r7, #12]
 80017e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80017e4:	f003 0303 	and.w	r3, r3, #3
 80017e8:	009b      	lsls	r3, r3, #2
 80017ea:	220f      	movs	r2, #15
 80017ec:	fa02 f303 	lsl.w	r3, r2, r3
 80017f0:	43db      	mvns	r3, r3
 80017f2:	68fa      	ldr	r2, [r7, #12]
 80017f4:	4013      	ands	r3, r2
 80017f6:	60fb      	str	r3, [r7, #12]
 80017f8:	687b      	ldr	r3, [r7, #4]
 80017fa:	4a40      	ldr	r2, [pc, #256]	; (80018fc <HAL_GPIO_Init+0x2c0>)
 80017fc:	4293      	cmp	r3, r2
 80017fe:	d013      	beq.n	8001828 <HAL_GPIO_Init+0x1ec>
 8001800:	687b      	ldr	r3, [r7, #4]
 8001802:	4a3f      	ldr	r2, [pc, #252]	; (8001900 <HAL_GPIO_Init+0x2c4>)
 8001804:	4293      	cmp	r3, r2
 8001806:	d00d      	beq.n	8001824 <HAL_GPIO_Init+0x1e8>
 8001808:	687b      	ldr	r3, [r7, #4]
 800180a:	4a3e      	ldr	r2, [pc, #248]	; (8001904 <HAL_GPIO_Init+0x2c8>)
 800180c:	4293      	cmp	r3, r2
 800180e:	d007      	beq.n	8001820 <HAL_GPIO_Init+0x1e4>
 8001810:	687b      	ldr	r3, [r7, #4]
 8001812:	4a3d      	ldr	r2, [pc, #244]	; (8001908 <HAL_GPIO_Init+0x2cc>)
 8001814:	4293      	cmp	r3, r2
 8001816:	d101      	bne.n	800181c <HAL_GPIO_Init+0x1e0>
 8001818:	2303      	movs	r3, #3
 800181a:	e006      	b.n	800182a <HAL_GPIO_Init+0x1ee>
 800181c:	2304      	movs	r3, #4
 800181e:	e004      	b.n	800182a <HAL_GPIO_Init+0x1ee>
 8001820:	2302      	movs	r3, #2
 8001822:	e002      	b.n	800182a <HAL_GPIO_Init+0x1ee>
 8001824:	2301      	movs	r3, #1
 8001826:	e000      	b.n	800182a <HAL_GPIO_Init+0x1ee>
 8001828:	2300      	movs	r3, #0
 800182a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800182c:	f002 0203 	and.w	r2, r2, #3
 8001830:	0092      	lsls	r2, r2, #2
 8001832:	4093      	lsls	r3, r2
 8001834:	68fa      	ldr	r2, [r7, #12]
 8001836:	4313      	orrs	r3, r2
 8001838:	60fb      	str	r3, [r7, #12]
 800183a:	492f      	ldr	r1, [pc, #188]	; (80018f8 <HAL_GPIO_Init+0x2bc>)
 800183c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800183e:	089b      	lsrs	r3, r3, #2
 8001840:	3302      	adds	r3, #2
 8001842:	68fa      	ldr	r2, [r7, #12]
 8001844:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001848:	683b      	ldr	r3, [r7, #0]
 800184a:	685b      	ldr	r3, [r3, #4]
 800184c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001850:	2b00      	cmp	r3, #0
 8001852:	d006      	beq.n	8001862 <HAL_GPIO_Init+0x226>
 8001854:	4b2d      	ldr	r3, [pc, #180]	; (800190c <HAL_GPIO_Init+0x2d0>)
 8001856:	681a      	ldr	r2, [r3, #0]
 8001858:	492c      	ldr	r1, [pc, #176]	; (800190c <HAL_GPIO_Init+0x2d0>)
 800185a:	69bb      	ldr	r3, [r7, #24]
 800185c:	4313      	orrs	r3, r2
 800185e:	600b      	str	r3, [r1, #0]
 8001860:	e006      	b.n	8001870 <HAL_GPIO_Init+0x234>
 8001862:	4b2a      	ldr	r3, [pc, #168]	; (800190c <HAL_GPIO_Init+0x2d0>)
 8001864:	681a      	ldr	r2, [r3, #0]
 8001866:	69bb      	ldr	r3, [r7, #24]
 8001868:	43db      	mvns	r3, r3
 800186a:	4928      	ldr	r1, [pc, #160]	; (800190c <HAL_GPIO_Init+0x2d0>)
 800186c:	4013      	ands	r3, r2
 800186e:	600b      	str	r3, [r1, #0]
 8001870:	683b      	ldr	r3, [r7, #0]
 8001872:	685b      	ldr	r3, [r3, #4]
 8001874:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001878:	2b00      	cmp	r3, #0
 800187a:	d006      	beq.n	800188a <HAL_GPIO_Init+0x24e>
 800187c:	4b23      	ldr	r3, [pc, #140]	; (800190c <HAL_GPIO_Init+0x2d0>)
 800187e:	685a      	ldr	r2, [r3, #4]
 8001880:	4922      	ldr	r1, [pc, #136]	; (800190c <HAL_GPIO_Init+0x2d0>)
 8001882:	69bb      	ldr	r3, [r7, #24]
 8001884:	4313      	orrs	r3, r2
 8001886:	604b      	str	r3, [r1, #4]
 8001888:	e006      	b.n	8001898 <HAL_GPIO_Init+0x25c>
 800188a:	4b20      	ldr	r3, [pc, #128]	; (800190c <HAL_GPIO_Init+0x2d0>)
 800188c:	685a      	ldr	r2, [r3, #4]
 800188e:	69bb      	ldr	r3, [r7, #24]
 8001890:	43db      	mvns	r3, r3
 8001892:	491e      	ldr	r1, [pc, #120]	; (800190c <HAL_GPIO_Init+0x2d0>)
 8001894:	4013      	ands	r3, r2
 8001896:	604b      	str	r3, [r1, #4]
 8001898:	683b      	ldr	r3, [r7, #0]
 800189a:	685b      	ldr	r3, [r3, #4]
 800189c:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80018a0:	2b00      	cmp	r3, #0
 80018a2:	d006      	beq.n	80018b2 <HAL_GPIO_Init+0x276>
 80018a4:	4b19      	ldr	r3, [pc, #100]	; (800190c <HAL_GPIO_Init+0x2d0>)
 80018a6:	689a      	ldr	r2, [r3, #8]
 80018a8:	4918      	ldr	r1, [pc, #96]	; (800190c <HAL_GPIO_Init+0x2d0>)
 80018aa:	69bb      	ldr	r3, [r7, #24]
 80018ac:	4313      	orrs	r3, r2
 80018ae:	608b      	str	r3, [r1, #8]
 80018b0:	e006      	b.n	80018c0 <HAL_GPIO_Init+0x284>
 80018b2:	4b16      	ldr	r3, [pc, #88]	; (800190c <HAL_GPIO_Init+0x2d0>)
 80018b4:	689a      	ldr	r2, [r3, #8]
 80018b6:	69bb      	ldr	r3, [r7, #24]
 80018b8:	43db      	mvns	r3, r3
 80018ba:	4914      	ldr	r1, [pc, #80]	; (800190c <HAL_GPIO_Init+0x2d0>)
 80018bc:	4013      	ands	r3, r2
 80018be:	608b      	str	r3, [r1, #8]
 80018c0:	683b      	ldr	r3, [r7, #0]
 80018c2:	685b      	ldr	r3, [r3, #4]
 80018c4:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80018c8:	2b00      	cmp	r3, #0
 80018ca:	d021      	beq.n	8001910 <HAL_GPIO_Init+0x2d4>
 80018cc:	4b0f      	ldr	r3, [pc, #60]	; (800190c <HAL_GPIO_Init+0x2d0>)
 80018ce:	68da      	ldr	r2, [r3, #12]
 80018d0:	490e      	ldr	r1, [pc, #56]	; (800190c <HAL_GPIO_Init+0x2d0>)
 80018d2:	69bb      	ldr	r3, [r7, #24]
 80018d4:	4313      	orrs	r3, r2
 80018d6:	60cb      	str	r3, [r1, #12]
 80018d8:	e021      	b.n	800191e <HAL_GPIO_Init+0x2e2>
 80018da:	bf00      	nop
 80018dc:	10320000 	.word	0x10320000
 80018e0:	10310000 	.word	0x10310000
 80018e4:	10220000 	.word	0x10220000
 80018e8:	10210000 	.word	0x10210000
 80018ec:	10120000 	.word	0x10120000
 80018f0:	10110000 	.word	0x10110000
 80018f4:	40021000 	.word	0x40021000
 80018f8:	40010000 	.word	0x40010000
 80018fc:	40010800 	.word	0x40010800
 8001900:	40010c00 	.word	0x40010c00
 8001904:	40011000 	.word	0x40011000
 8001908:	40011400 	.word	0x40011400
 800190c:	40010400 	.word	0x40010400
 8001910:	4b0b      	ldr	r3, [pc, #44]	; (8001940 <HAL_GPIO_Init+0x304>)
 8001912:	68da      	ldr	r2, [r3, #12]
 8001914:	69bb      	ldr	r3, [r7, #24]
 8001916:	43db      	mvns	r3, r3
 8001918:	4909      	ldr	r1, [pc, #36]	; (8001940 <HAL_GPIO_Init+0x304>)
 800191a:	4013      	ands	r3, r2
 800191c:	60cb      	str	r3, [r1, #12]
 800191e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001920:	3301      	adds	r3, #1
 8001922:	627b      	str	r3, [r7, #36]	; 0x24
 8001924:	683b      	ldr	r3, [r7, #0]
 8001926:	681a      	ldr	r2, [r3, #0]
 8001928:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800192a:	fa22 f303 	lsr.w	r3, r2, r3
 800192e:	2b00      	cmp	r3, #0
 8001930:	f47f ae8e 	bne.w	8001650 <HAL_GPIO_Init+0x14>
 8001934:	bf00      	nop
 8001936:	bf00      	nop
 8001938:	372c      	adds	r7, #44	; 0x2c
 800193a:	46bd      	mov	sp, r7
 800193c:	bc80      	pop	{r7}
 800193e:	4770      	bx	lr
 8001940:	40010400 	.word	0x40010400

08001944 <HAL_GPIO_ReadPin>:
 8001944:	b480      	push	{r7}
 8001946:	b085      	sub	sp, #20
 8001948:	af00      	add	r7, sp, #0
 800194a:	6078      	str	r0, [r7, #4]
 800194c:	460b      	mov	r3, r1
 800194e:	807b      	strh	r3, [r7, #2]
 8001950:	687b      	ldr	r3, [r7, #4]
 8001952:	689a      	ldr	r2, [r3, #8]
 8001954:	887b      	ldrh	r3, [r7, #2]
 8001956:	4013      	ands	r3, r2
 8001958:	2b00      	cmp	r3, #0
 800195a:	d002      	beq.n	8001962 <HAL_GPIO_ReadPin+0x1e>
 800195c:	2301      	movs	r3, #1
 800195e:	73fb      	strb	r3, [r7, #15]
 8001960:	e001      	b.n	8001966 <HAL_GPIO_ReadPin+0x22>
 8001962:	2300      	movs	r3, #0
 8001964:	73fb      	strb	r3, [r7, #15]
 8001966:	7bfb      	ldrb	r3, [r7, #15]
 8001968:	4618      	mov	r0, r3
 800196a:	3714      	adds	r7, #20
 800196c:	46bd      	mov	sp, r7
 800196e:	bc80      	pop	{r7}
 8001970:	4770      	bx	lr

08001972 <HAL_GPIO_WritePin>:
 8001972:	b480      	push	{r7}
 8001974:	b083      	sub	sp, #12
 8001976:	af00      	add	r7, sp, #0
 8001978:	6078      	str	r0, [r7, #4]
 800197a:	460b      	mov	r3, r1
 800197c:	807b      	strh	r3, [r7, #2]
 800197e:	4613      	mov	r3, r2
 8001980:	707b      	strb	r3, [r7, #1]
 8001982:	787b      	ldrb	r3, [r7, #1]
 8001984:	2b00      	cmp	r3, #0
 8001986:	d003      	beq.n	8001990 <HAL_GPIO_WritePin+0x1e>
 8001988:	887a      	ldrh	r2, [r7, #2]
 800198a:	687b      	ldr	r3, [r7, #4]
 800198c:	611a      	str	r2, [r3, #16]
 800198e:	e003      	b.n	8001998 <HAL_GPIO_WritePin+0x26>
 8001990:	887b      	ldrh	r3, [r7, #2]
 8001992:	041a      	lsls	r2, r3, #16
 8001994:	687b      	ldr	r3, [r7, #4]
 8001996:	611a      	str	r2, [r3, #16]
 8001998:	bf00      	nop
 800199a:	370c      	adds	r7, #12
 800199c:	46bd      	mov	sp, r7
 800199e:	bc80      	pop	{r7}
 80019a0:	4770      	bx	lr
	...

080019a4 <HAL_RCC_OscConfig>:
 80019a4:	b580      	push	{r7, lr}
 80019a6:	b086      	sub	sp, #24
 80019a8:	af00      	add	r7, sp, #0
 80019aa:	6078      	str	r0, [r7, #4]
 80019ac:	687b      	ldr	r3, [r7, #4]
 80019ae:	2b00      	cmp	r3, #0
 80019b0:	d101      	bne.n	80019b6 <HAL_RCC_OscConfig+0x12>
 80019b2:	2301      	movs	r3, #1
 80019b4:	e272      	b.n	8001e9c <HAL_RCC_OscConfig+0x4f8>
 80019b6:	687b      	ldr	r3, [r7, #4]
 80019b8:	681b      	ldr	r3, [r3, #0]
 80019ba:	f003 0301 	and.w	r3, r3, #1
 80019be:	2b00      	cmp	r3, #0
 80019c0:	f000 8087 	beq.w	8001ad2 <HAL_RCC_OscConfig+0x12e>
 80019c4:	4b92      	ldr	r3, [pc, #584]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 80019c6:	685b      	ldr	r3, [r3, #4]
 80019c8:	f003 030c 	and.w	r3, r3, #12
 80019cc:	2b04      	cmp	r3, #4
 80019ce:	d00c      	beq.n	80019ea <HAL_RCC_OscConfig+0x46>
 80019d0:	4b8f      	ldr	r3, [pc, #572]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 80019d2:	685b      	ldr	r3, [r3, #4]
 80019d4:	f003 030c 	and.w	r3, r3, #12
 80019d8:	2b08      	cmp	r3, #8
 80019da:	d112      	bne.n	8001a02 <HAL_RCC_OscConfig+0x5e>
 80019dc:	4b8c      	ldr	r3, [pc, #560]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 80019de:	685b      	ldr	r3, [r3, #4]
 80019e0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80019e4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80019e8:	d10b      	bne.n	8001a02 <HAL_RCC_OscConfig+0x5e>
 80019ea:	4b89      	ldr	r3, [pc, #548]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 80019ec:	681b      	ldr	r3, [r3, #0]
 80019ee:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80019f2:	2b00      	cmp	r3, #0
 80019f4:	d06c      	beq.n	8001ad0 <HAL_RCC_OscConfig+0x12c>
 80019f6:	687b      	ldr	r3, [r7, #4]
 80019f8:	685b      	ldr	r3, [r3, #4]
 80019fa:	2b00      	cmp	r3, #0
 80019fc:	d168      	bne.n	8001ad0 <HAL_RCC_OscConfig+0x12c>
 80019fe:	2301      	movs	r3, #1
 8001a00:	e24c      	b.n	8001e9c <HAL_RCC_OscConfig+0x4f8>
 8001a02:	687b      	ldr	r3, [r7, #4]
 8001a04:	685b      	ldr	r3, [r3, #4]
 8001a06:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001a0a:	d106      	bne.n	8001a1a <HAL_RCC_OscConfig+0x76>
 8001a0c:	4b80      	ldr	r3, [pc, #512]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001a0e:	681b      	ldr	r3, [r3, #0]
 8001a10:	4a7f      	ldr	r2, [pc, #508]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001a12:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001a16:	6013      	str	r3, [r2, #0]
 8001a18:	e02e      	b.n	8001a78 <HAL_RCC_OscConfig+0xd4>
 8001a1a:	687b      	ldr	r3, [r7, #4]
 8001a1c:	685b      	ldr	r3, [r3, #4]
 8001a1e:	2b00      	cmp	r3, #0
 8001a20:	d10c      	bne.n	8001a3c <HAL_RCC_OscConfig+0x98>
 8001a22:	4b7b      	ldr	r3, [pc, #492]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001a24:	681b      	ldr	r3, [r3, #0]
 8001a26:	4a7a      	ldr	r2, [pc, #488]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001a28:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001a2c:	6013      	str	r3, [r2, #0]
 8001a2e:	4b78      	ldr	r3, [pc, #480]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001a30:	681b      	ldr	r3, [r3, #0]
 8001a32:	4a77      	ldr	r2, [pc, #476]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001a34:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001a38:	6013      	str	r3, [r2, #0]
 8001a3a:	e01d      	b.n	8001a78 <HAL_RCC_OscConfig+0xd4>
 8001a3c:	687b      	ldr	r3, [r7, #4]
 8001a3e:	685b      	ldr	r3, [r3, #4]
 8001a40:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001a44:	d10c      	bne.n	8001a60 <HAL_RCC_OscConfig+0xbc>
 8001a46:	4b72      	ldr	r3, [pc, #456]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001a48:	681b      	ldr	r3, [r3, #0]
 8001a4a:	4a71      	ldr	r2, [pc, #452]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001a4c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001a50:	6013      	str	r3, [r2, #0]
 8001a52:	4b6f      	ldr	r3, [pc, #444]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001a54:	681b      	ldr	r3, [r3, #0]
 8001a56:	4a6e      	ldr	r2, [pc, #440]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001a58:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001a5c:	6013      	str	r3, [r2, #0]
 8001a5e:	e00b      	b.n	8001a78 <HAL_RCC_OscConfig+0xd4>
 8001a60:	4b6b      	ldr	r3, [pc, #428]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001a62:	681b      	ldr	r3, [r3, #0]
 8001a64:	4a6a      	ldr	r2, [pc, #424]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001a66:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001a6a:	6013      	str	r3, [r2, #0]
 8001a6c:	4b68      	ldr	r3, [pc, #416]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001a6e:	681b      	ldr	r3, [r3, #0]
 8001a70:	4a67      	ldr	r2, [pc, #412]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001a72:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001a76:	6013      	str	r3, [r2, #0]
 8001a78:	687b      	ldr	r3, [r7, #4]
 8001a7a:	685b      	ldr	r3, [r3, #4]
 8001a7c:	2b00      	cmp	r3, #0
 8001a7e:	d013      	beq.n	8001aa8 <HAL_RCC_OscConfig+0x104>
 8001a80:	f7ff fcc4 	bl	800140c <HAL_GetTick>
 8001a84:	6138      	str	r0, [r7, #16]
 8001a86:	e008      	b.n	8001a9a <HAL_RCC_OscConfig+0xf6>
 8001a88:	f7ff fcc0 	bl	800140c <HAL_GetTick>
 8001a8c:	4602      	mov	r2, r0
 8001a8e:	693b      	ldr	r3, [r7, #16]
 8001a90:	1ad3      	subs	r3, r2, r3
 8001a92:	2b64      	cmp	r3, #100	; 0x64
 8001a94:	d901      	bls.n	8001a9a <HAL_RCC_OscConfig+0xf6>
 8001a96:	2303      	movs	r3, #3
 8001a98:	e200      	b.n	8001e9c <HAL_RCC_OscConfig+0x4f8>
 8001a9a:	4b5d      	ldr	r3, [pc, #372]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001a9c:	681b      	ldr	r3, [r3, #0]
 8001a9e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001aa2:	2b00      	cmp	r3, #0
 8001aa4:	d0f0      	beq.n	8001a88 <HAL_RCC_OscConfig+0xe4>
 8001aa6:	e014      	b.n	8001ad2 <HAL_RCC_OscConfig+0x12e>
 8001aa8:	f7ff fcb0 	bl	800140c <HAL_GetTick>
 8001aac:	6138      	str	r0, [r7, #16]
 8001aae:	e008      	b.n	8001ac2 <HAL_RCC_OscConfig+0x11e>
 8001ab0:	f7ff fcac 	bl	800140c <HAL_GetTick>
 8001ab4:	4602      	mov	r2, r0
 8001ab6:	693b      	ldr	r3, [r7, #16]
 8001ab8:	1ad3      	subs	r3, r2, r3
 8001aba:	2b64      	cmp	r3, #100	; 0x64
 8001abc:	d901      	bls.n	8001ac2 <HAL_RCC_OscConfig+0x11e>
 8001abe:	2303      	movs	r3, #3
 8001ac0:	e1ec      	b.n	8001e9c <HAL_RCC_OscConfig+0x4f8>
 8001ac2:	4b53      	ldr	r3, [pc, #332]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001ac4:	681b      	ldr	r3, [r3, #0]
 8001ac6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001aca:	2b00      	cmp	r3, #0
 8001acc:	d1f0      	bne.n	8001ab0 <HAL_RCC_OscConfig+0x10c>
 8001ace:	e000      	b.n	8001ad2 <HAL_RCC_OscConfig+0x12e>
 8001ad0:	bf00      	nop
 8001ad2:	687b      	ldr	r3, [r7, #4]
 8001ad4:	681b      	ldr	r3, [r3, #0]
 8001ad6:	f003 0302 	and.w	r3, r3, #2
 8001ada:	2b00      	cmp	r3, #0
 8001adc:	d063      	beq.n	8001ba6 <HAL_RCC_OscConfig+0x202>
 8001ade:	4b4c      	ldr	r3, [pc, #304]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001ae0:	685b      	ldr	r3, [r3, #4]
 8001ae2:	f003 030c 	and.w	r3, r3, #12
 8001ae6:	2b00      	cmp	r3, #0
 8001ae8:	d00b      	beq.n	8001b02 <HAL_RCC_OscConfig+0x15e>
 8001aea:	4b49      	ldr	r3, [pc, #292]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001aec:	685b      	ldr	r3, [r3, #4]
 8001aee:	f003 030c 	and.w	r3, r3, #12
 8001af2:	2b08      	cmp	r3, #8
 8001af4:	d11c      	bne.n	8001b30 <HAL_RCC_OscConfig+0x18c>
 8001af6:	4b46      	ldr	r3, [pc, #280]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001af8:	685b      	ldr	r3, [r3, #4]
 8001afa:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001afe:	2b00      	cmp	r3, #0
 8001b00:	d116      	bne.n	8001b30 <HAL_RCC_OscConfig+0x18c>
 8001b02:	4b43      	ldr	r3, [pc, #268]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001b04:	681b      	ldr	r3, [r3, #0]
 8001b06:	f003 0302 	and.w	r3, r3, #2
 8001b0a:	2b00      	cmp	r3, #0
 8001b0c:	d005      	beq.n	8001b1a <HAL_RCC_OscConfig+0x176>
 8001b0e:	687b      	ldr	r3, [r7, #4]
 8001b10:	691b      	ldr	r3, [r3, #16]
 8001b12:	2b01      	cmp	r3, #1
 8001b14:	d001      	beq.n	8001b1a <HAL_RCC_OscConfig+0x176>
 8001b16:	2301      	movs	r3, #1
 8001b18:	e1c0      	b.n	8001e9c <HAL_RCC_OscConfig+0x4f8>
 8001b1a:	4b3d      	ldr	r3, [pc, #244]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001b1c:	681b      	ldr	r3, [r3, #0]
 8001b1e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001b22:	687b      	ldr	r3, [r7, #4]
 8001b24:	695b      	ldr	r3, [r3, #20]
 8001b26:	00db      	lsls	r3, r3, #3
 8001b28:	4939      	ldr	r1, [pc, #228]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001b2a:	4313      	orrs	r3, r2
 8001b2c:	600b      	str	r3, [r1, #0]
 8001b2e:	e03a      	b.n	8001ba6 <HAL_RCC_OscConfig+0x202>
 8001b30:	687b      	ldr	r3, [r7, #4]
 8001b32:	691b      	ldr	r3, [r3, #16]
 8001b34:	2b00      	cmp	r3, #0
 8001b36:	d020      	beq.n	8001b7a <HAL_RCC_OscConfig+0x1d6>
 8001b38:	4b36      	ldr	r3, [pc, #216]	; (8001c14 <HAL_RCC_OscConfig+0x270>)
 8001b3a:	2201      	movs	r2, #1
 8001b3c:	601a      	str	r2, [r3, #0]
 8001b3e:	f7ff fc65 	bl	800140c <HAL_GetTick>
 8001b42:	6138      	str	r0, [r7, #16]
 8001b44:	e008      	b.n	8001b58 <HAL_RCC_OscConfig+0x1b4>
 8001b46:	f7ff fc61 	bl	800140c <HAL_GetTick>
 8001b4a:	4602      	mov	r2, r0
 8001b4c:	693b      	ldr	r3, [r7, #16]
 8001b4e:	1ad3      	subs	r3, r2, r3
 8001b50:	2b02      	cmp	r3, #2
 8001b52:	d901      	bls.n	8001b58 <HAL_RCC_OscConfig+0x1b4>
 8001b54:	2303      	movs	r3, #3
 8001b56:	e1a1      	b.n	8001e9c <HAL_RCC_OscConfig+0x4f8>
 8001b58:	4b2d      	ldr	r3, [pc, #180]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001b5a:	681b      	ldr	r3, [r3, #0]
 8001b5c:	f003 0302 	and.w	r3, r3, #2
 8001b60:	2b00      	cmp	r3, #0
 8001b62:	d0f0      	beq.n	8001b46 <HAL_RCC_OscConfig+0x1a2>
 8001b64:	4b2a      	ldr	r3, [pc, #168]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001b66:	681b      	ldr	r3, [r3, #0]
 8001b68:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001b6c:	687b      	ldr	r3, [r7, #4]
 8001b6e:	695b      	ldr	r3, [r3, #20]
 8001b70:	00db      	lsls	r3, r3, #3
 8001b72:	4927      	ldr	r1, [pc, #156]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001b74:	4313      	orrs	r3, r2
 8001b76:	600b      	str	r3, [r1, #0]
 8001b78:	e015      	b.n	8001ba6 <HAL_RCC_OscConfig+0x202>
 8001b7a:	4b26      	ldr	r3, [pc, #152]	; (8001c14 <HAL_RCC_OscConfig+0x270>)
 8001b7c:	2200      	movs	r2, #0
 8001b7e:	601a      	str	r2, [r3, #0]
 8001b80:	f7ff fc44 	bl	800140c <HAL_GetTick>
 8001b84:	6138      	str	r0, [r7, #16]
 8001b86:	e008      	b.n	8001b9a <HAL_RCC_OscConfig+0x1f6>
 8001b88:	f7ff fc40 	bl	800140c <HAL_GetTick>
 8001b8c:	4602      	mov	r2, r0
 8001b8e:	693b      	ldr	r3, [r7, #16]
 8001b90:	1ad3      	subs	r3, r2, r3
 8001b92:	2b02      	cmp	r3, #2
 8001b94:	d901      	bls.n	8001b9a <HAL_RCC_OscConfig+0x1f6>
 8001b96:	2303      	movs	r3, #3
 8001b98:	e180      	b.n	8001e9c <HAL_RCC_OscConfig+0x4f8>
 8001b9a:	4b1d      	ldr	r3, [pc, #116]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001b9c:	681b      	ldr	r3, [r3, #0]
 8001b9e:	f003 0302 	and.w	r3, r3, #2
 8001ba2:	2b00      	cmp	r3, #0
 8001ba4:	d1f0      	bne.n	8001b88 <HAL_RCC_OscConfig+0x1e4>
 8001ba6:	687b      	ldr	r3, [r7, #4]
 8001ba8:	681b      	ldr	r3, [r3, #0]
 8001baa:	f003 0308 	and.w	r3, r3, #8
 8001bae:	2b00      	cmp	r3, #0
 8001bb0:	d03a      	beq.n	8001c28 <HAL_RCC_OscConfig+0x284>
 8001bb2:	687b      	ldr	r3, [r7, #4]
 8001bb4:	699b      	ldr	r3, [r3, #24]
 8001bb6:	2b00      	cmp	r3, #0
 8001bb8:	d019      	beq.n	8001bee <HAL_RCC_OscConfig+0x24a>
 8001bba:	4b17      	ldr	r3, [pc, #92]	; (8001c18 <HAL_RCC_OscConfig+0x274>)
 8001bbc:	2201      	movs	r2, #1
 8001bbe:	601a      	str	r2, [r3, #0]
 8001bc0:	f7ff fc24 	bl	800140c <HAL_GetTick>
 8001bc4:	6138      	str	r0, [r7, #16]
 8001bc6:	e008      	b.n	8001bda <HAL_RCC_OscConfig+0x236>
 8001bc8:	f7ff fc20 	bl	800140c <HAL_GetTick>
 8001bcc:	4602      	mov	r2, r0
 8001bce:	693b      	ldr	r3, [r7, #16]
 8001bd0:	1ad3      	subs	r3, r2, r3
 8001bd2:	2b02      	cmp	r3, #2
 8001bd4:	d901      	bls.n	8001bda <HAL_RCC_OscConfig+0x236>
 8001bd6:	2303      	movs	r3, #3
 8001bd8:	e160      	b.n	8001e9c <HAL_RCC_OscConfig+0x4f8>
 8001bda:	4b0d      	ldr	r3, [pc, #52]	; (8001c10 <HAL_RCC_OscConfig+0x26c>)
 8001bdc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001bde:	f003 0302 	and.w	r3, r3, #2
 8001be2:	2b00      	cmp	r3, #0
 8001be4:	d0f0      	beq.n	8001bc8 <HAL_RCC_OscConfig+0x224>
 8001be6:	2001      	movs	r0, #1
 8001be8:	f000 fad8 	bl	800219c <RCC_Delay>
 8001bec:	e01c      	b.n	8001c28 <HAL_RCC_OscConfig+0x284>
 8001bee:	4b0a      	ldr	r3, [pc, #40]	; (8001c18 <HAL_RCC_OscConfig+0x274>)
 8001bf0:	2200      	movs	r2, #0
 8001bf2:	601a      	str	r2, [r3, #0]
 8001bf4:	f7ff fc0a 	bl	800140c <HAL_GetTick>
 8001bf8:	6138      	str	r0, [r7, #16]
 8001bfa:	e00f      	b.n	8001c1c <HAL_RCC_OscConfig+0x278>
 8001bfc:	f7ff fc06 	bl	800140c <HAL_GetTick>
 8001c00:	4602      	mov	r2, r0
 8001c02:	693b      	ldr	r3, [r7, #16]
 8001c04:	1ad3      	subs	r3, r2, r3
 8001c06:	2b02      	cmp	r3, #2
 8001c08:	d908      	bls.n	8001c1c <HAL_RCC_OscConfig+0x278>
 8001c0a:	2303      	movs	r3, #3
 8001c0c:	e146      	b.n	8001e9c <HAL_RCC_OscConfig+0x4f8>
 8001c0e:	bf00      	nop
 8001c10:	40021000 	.word	0x40021000
 8001c14:	42420000 	.word	0x42420000
 8001c18:	42420480 	.word	0x42420480
 8001c1c:	4b92      	ldr	r3, [pc, #584]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001c1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001c20:	f003 0302 	and.w	r3, r3, #2
 8001c24:	2b00      	cmp	r3, #0
 8001c26:	d1e9      	bne.n	8001bfc <HAL_RCC_OscConfig+0x258>
 8001c28:	687b      	ldr	r3, [r7, #4]
 8001c2a:	681b      	ldr	r3, [r3, #0]
 8001c2c:	f003 0304 	and.w	r3, r3, #4
 8001c30:	2b00      	cmp	r3, #0
 8001c32:	f000 80a6 	beq.w	8001d82 <HAL_RCC_OscConfig+0x3de>
 8001c36:	2300      	movs	r3, #0
 8001c38:	75fb      	strb	r3, [r7, #23]
 8001c3a:	4b8b      	ldr	r3, [pc, #556]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001c3c:	69db      	ldr	r3, [r3, #28]
 8001c3e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001c42:	2b00      	cmp	r3, #0
 8001c44:	d10d      	bne.n	8001c62 <HAL_RCC_OscConfig+0x2be>
 8001c46:	4b88      	ldr	r3, [pc, #544]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001c48:	69db      	ldr	r3, [r3, #28]
 8001c4a:	4a87      	ldr	r2, [pc, #540]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001c4c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001c50:	61d3      	str	r3, [r2, #28]
 8001c52:	4b85      	ldr	r3, [pc, #532]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001c54:	69db      	ldr	r3, [r3, #28]
 8001c56:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001c5a:	60bb      	str	r3, [r7, #8]
 8001c5c:	68bb      	ldr	r3, [r7, #8]
 8001c5e:	2301      	movs	r3, #1
 8001c60:	75fb      	strb	r3, [r7, #23]
 8001c62:	4b82      	ldr	r3, [pc, #520]	; (8001e6c <HAL_RCC_OscConfig+0x4c8>)
 8001c64:	681b      	ldr	r3, [r3, #0]
 8001c66:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001c6a:	2b00      	cmp	r3, #0
 8001c6c:	d118      	bne.n	8001ca0 <HAL_RCC_OscConfig+0x2fc>
 8001c6e:	4b7f      	ldr	r3, [pc, #508]	; (8001e6c <HAL_RCC_OscConfig+0x4c8>)
 8001c70:	681b      	ldr	r3, [r3, #0]
 8001c72:	4a7e      	ldr	r2, [pc, #504]	; (8001e6c <HAL_RCC_OscConfig+0x4c8>)
 8001c74:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001c78:	6013      	str	r3, [r2, #0]
 8001c7a:	f7ff fbc7 	bl	800140c <HAL_GetTick>
 8001c7e:	6138      	str	r0, [r7, #16]
 8001c80:	e008      	b.n	8001c94 <HAL_RCC_OscConfig+0x2f0>
 8001c82:	f7ff fbc3 	bl	800140c <HAL_GetTick>
 8001c86:	4602      	mov	r2, r0
 8001c88:	693b      	ldr	r3, [r7, #16]
 8001c8a:	1ad3      	subs	r3, r2, r3
 8001c8c:	2b64      	cmp	r3, #100	; 0x64
 8001c8e:	d901      	bls.n	8001c94 <HAL_RCC_OscConfig+0x2f0>
 8001c90:	2303      	movs	r3, #3
 8001c92:	e103      	b.n	8001e9c <HAL_RCC_OscConfig+0x4f8>
 8001c94:	4b75      	ldr	r3, [pc, #468]	; (8001e6c <HAL_RCC_OscConfig+0x4c8>)
 8001c96:	681b      	ldr	r3, [r3, #0]
 8001c98:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001c9c:	2b00      	cmp	r3, #0
 8001c9e:	d0f0      	beq.n	8001c82 <HAL_RCC_OscConfig+0x2de>
 8001ca0:	687b      	ldr	r3, [r7, #4]
 8001ca2:	68db      	ldr	r3, [r3, #12]
 8001ca4:	2b01      	cmp	r3, #1
 8001ca6:	d106      	bne.n	8001cb6 <HAL_RCC_OscConfig+0x312>
 8001ca8:	4b6f      	ldr	r3, [pc, #444]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001caa:	6a1b      	ldr	r3, [r3, #32]
 8001cac:	4a6e      	ldr	r2, [pc, #440]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001cae:	f043 0301 	orr.w	r3, r3, #1
 8001cb2:	6213      	str	r3, [r2, #32]
 8001cb4:	e02d      	b.n	8001d12 <HAL_RCC_OscConfig+0x36e>
 8001cb6:	687b      	ldr	r3, [r7, #4]
 8001cb8:	68db      	ldr	r3, [r3, #12]
 8001cba:	2b00      	cmp	r3, #0
 8001cbc:	d10c      	bne.n	8001cd8 <HAL_RCC_OscConfig+0x334>
 8001cbe:	4b6a      	ldr	r3, [pc, #424]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001cc0:	6a1b      	ldr	r3, [r3, #32]
 8001cc2:	4a69      	ldr	r2, [pc, #420]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001cc4:	f023 0301 	bic.w	r3, r3, #1
 8001cc8:	6213      	str	r3, [r2, #32]
 8001cca:	4b67      	ldr	r3, [pc, #412]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001ccc:	6a1b      	ldr	r3, [r3, #32]
 8001cce:	4a66      	ldr	r2, [pc, #408]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001cd0:	f023 0304 	bic.w	r3, r3, #4
 8001cd4:	6213      	str	r3, [r2, #32]
 8001cd6:	e01c      	b.n	8001d12 <HAL_RCC_OscConfig+0x36e>
 8001cd8:	687b      	ldr	r3, [r7, #4]
 8001cda:	68db      	ldr	r3, [r3, #12]
 8001cdc:	2b05      	cmp	r3, #5
 8001cde:	d10c      	bne.n	8001cfa <HAL_RCC_OscConfig+0x356>
 8001ce0:	4b61      	ldr	r3, [pc, #388]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001ce2:	6a1b      	ldr	r3, [r3, #32]
 8001ce4:	4a60      	ldr	r2, [pc, #384]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001ce6:	f043 0304 	orr.w	r3, r3, #4
 8001cea:	6213      	str	r3, [r2, #32]
 8001cec:	4b5e      	ldr	r3, [pc, #376]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001cee:	6a1b      	ldr	r3, [r3, #32]
 8001cf0:	4a5d      	ldr	r2, [pc, #372]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001cf2:	f043 0301 	orr.w	r3, r3, #1
 8001cf6:	6213      	str	r3, [r2, #32]
 8001cf8:	e00b      	b.n	8001d12 <HAL_RCC_OscConfig+0x36e>
 8001cfa:	4b5b      	ldr	r3, [pc, #364]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001cfc:	6a1b      	ldr	r3, [r3, #32]
 8001cfe:	4a5a      	ldr	r2, [pc, #360]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001d00:	f023 0301 	bic.w	r3, r3, #1
 8001d04:	6213      	str	r3, [r2, #32]
 8001d06:	4b58      	ldr	r3, [pc, #352]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001d08:	6a1b      	ldr	r3, [r3, #32]
 8001d0a:	4a57      	ldr	r2, [pc, #348]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001d0c:	f023 0304 	bic.w	r3, r3, #4
 8001d10:	6213      	str	r3, [r2, #32]
 8001d12:	687b      	ldr	r3, [r7, #4]
 8001d14:	68db      	ldr	r3, [r3, #12]
 8001d16:	2b00      	cmp	r3, #0
 8001d18:	d015      	beq.n	8001d46 <HAL_RCC_OscConfig+0x3a2>
 8001d1a:	f7ff fb77 	bl	800140c <HAL_GetTick>
 8001d1e:	6138      	str	r0, [r7, #16]
 8001d20:	e00a      	b.n	8001d38 <HAL_RCC_OscConfig+0x394>
 8001d22:	f7ff fb73 	bl	800140c <HAL_GetTick>
 8001d26:	4602      	mov	r2, r0
 8001d28:	693b      	ldr	r3, [r7, #16]
 8001d2a:	1ad3      	subs	r3, r2, r3
 8001d2c:	f241 3288 	movw	r2, #5000	; 0x1388
 8001d30:	4293      	cmp	r3, r2
 8001d32:	d901      	bls.n	8001d38 <HAL_RCC_OscConfig+0x394>
 8001d34:	2303      	movs	r3, #3
 8001d36:	e0b1      	b.n	8001e9c <HAL_RCC_OscConfig+0x4f8>
 8001d38:	4b4b      	ldr	r3, [pc, #300]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001d3a:	6a1b      	ldr	r3, [r3, #32]
 8001d3c:	f003 0302 	and.w	r3, r3, #2
 8001d40:	2b00      	cmp	r3, #0
 8001d42:	d0ee      	beq.n	8001d22 <HAL_RCC_OscConfig+0x37e>
 8001d44:	e014      	b.n	8001d70 <HAL_RCC_OscConfig+0x3cc>
 8001d46:	f7ff fb61 	bl	800140c <HAL_GetTick>
 8001d4a:	6138      	str	r0, [r7, #16]
 8001d4c:	e00a      	b.n	8001d64 <HAL_RCC_OscConfig+0x3c0>
 8001d4e:	f7ff fb5d 	bl	800140c <HAL_GetTick>
 8001d52:	4602      	mov	r2, r0
 8001d54:	693b      	ldr	r3, [r7, #16]
 8001d56:	1ad3      	subs	r3, r2, r3
 8001d58:	f241 3288 	movw	r2, #5000	; 0x1388
 8001d5c:	4293      	cmp	r3, r2
 8001d5e:	d901      	bls.n	8001d64 <HAL_RCC_OscConfig+0x3c0>
 8001d60:	2303      	movs	r3, #3
 8001d62:	e09b      	b.n	8001e9c <HAL_RCC_OscConfig+0x4f8>
 8001d64:	4b40      	ldr	r3, [pc, #256]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001d66:	6a1b      	ldr	r3, [r3, #32]
 8001d68:	f003 0302 	and.w	r3, r3, #2
 8001d6c:	2b00      	cmp	r3, #0
 8001d6e:	d1ee      	bne.n	8001d4e <HAL_RCC_OscConfig+0x3aa>
 8001d70:	7dfb      	ldrb	r3, [r7, #23]
 8001d72:	2b01      	cmp	r3, #1
 8001d74:	d105      	bne.n	8001d82 <HAL_RCC_OscConfig+0x3de>
 8001d76:	4b3c      	ldr	r3, [pc, #240]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001d78:	69db      	ldr	r3, [r3, #28]
 8001d7a:	4a3b      	ldr	r2, [pc, #236]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001d7c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001d80:	61d3      	str	r3, [r2, #28]
 8001d82:	687b      	ldr	r3, [r7, #4]
 8001d84:	69db      	ldr	r3, [r3, #28]
 8001d86:	2b00      	cmp	r3, #0
 8001d88:	f000 8087 	beq.w	8001e9a <HAL_RCC_OscConfig+0x4f6>
 8001d8c:	4b36      	ldr	r3, [pc, #216]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001d8e:	685b      	ldr	r3, [r3, #4]
 8001d90:	f003 030c 	and.w	r3, r3, #12
 8001d94:	2b08      	cmp	r3, #8
 8001d96:	d061      	beq.n	8001e5c <HAL_RCC_OscConfig+0x4b8>
 8001d98:	687b      	ldr	r3, [r7, #4]
 8001d9a:	69db      	ldr	r3, [r3, #28]
 8001d9c:	2b02      	cmp	r3, #2
 8001d9e:	d146      	bne.n	8001e2e <HAL_RCC_OscConfig+0x48a>
 8001da0:	4b33      	ldr	r3, [pc, #204]	; (8001e70 <HAL_RCC_OscConfig+0x4cc>)
 8001da2:	2200      	movs	r2, #0
 8001da4:	601a      	str	r2, [r3, #0]
 8001da6:	f7ff fb31 	bl	800140c <HAL_GetTick>
 8001daa:	6138      	str	r0, [r7, #16]
 8001dac:	e008      	b.n	8001dc0 <HAL_RCC_OscConfig+0x41c>
 8001dae:	f7ff fb2d 	bl	800140c <HAL_GetTick>
 8001db2:	4602      	mov	r2, r0
 8001db4:	693b      	ldr	r3, [r7, #16]
 8001db6:	1ad3      	subs	r3, r2, r3
 8001db8:	2b02      	cmp	r3, #2
 8001dba:	d901      	bls.n	8001dc0 <HAL_RCC_OscConfig+0x41c>
 8001dbc:	2303      	movs	r3, #3
 8001dbe:	e06d      	b.n	8001e9c <HAL_RCC_OscConfig+0x4f8>
 8001dc0:	4b29      	ldr	r3, [pc, #164]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001dc2:	681b      	ldr	r3, [r3, #0]
 8001dc4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001dc8:	2b00      	cmp	r3, #0
 8001dca:	d1f0      	bne.n	8001dae <HAL_RCC_OscConfig+0x40a>
 8001dcc:	687b      	ldr	r3, [r7, #4]
 8001dce:	6a1b      	ldr	r3, [r3, #32]
 8001dd0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001dd4:	d108      	bne.n	8001de8 <HAL_RCC_OscConfig+0x444>
 8001dd6:	4b24      	ldr	r3, [pc, #144]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001dd8:	685b      	ldr	r3, [r3, #4]
 8001dda:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8001dde:	687b      	ldr	r3, [r7, #4]
 8001de0:	689b      	ldr	r3, [r3, #8]
 8001de2:	4921      	ldr	r1, [pc, #132]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001de4:	4313      	orrs	r3, r2
 8001de6:	604b      	str	r3, [r1, #4]
 8001de8:	4b1f      	ldr	r3, [pc, #124]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001dea:	685b      	ldr	r3, [r3, #4]
 8001dec:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8001df0:	687b      	ldr	r3, [r7, #4]
 8001df2:	6a19      	ldr	r1, [r3, #32]
 8001df4:	687b      	ldr	r3, [r7, #4]
 8001df6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001df8:	430b      	orrs	r3, r1
 8001dfa:	491b      	ldr	r1, [pc, #108]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001dfc:	4313      	orrs	r3, r2
 8001dfe:	604b      	str	r3, [r1, #4]
 8001e00:	4b1b      	ldr	r3, [pc, #108]	; (8001e70 <HAL_RCC_OscConfig+0x4cc>)
 8001e02:	2201      	movs	r2, #1
 8001e04:	601a      	str	r2, [r3, #0]
 8001e06:	f7ff fb01 	bl	800140c <HAL_GetTick>
 8001e0a:	6138      	str	r0, [r7, #16]
 8001e0c:	e008      	b.n	8001e20 <HAL_RCC_OscConfig+0x47c>
 8001e0e:	f7ff fafd 	bl	800140c <HAL_GetTick>
 8001e12:	4602      	mov	r2, r0
 8001e14:	693b      	ldr	r3, [r7, #16]
 8001e16:	1ad3      	subs	r3, r2, r3
 8001e18:	2b02      	cmp	r3, #2
 8001e1a:	d901      	bls.n	8001e20 <HAL_RCC_OscConfig+0x47c>
 8001e1c:	2303      	movs	r3, #3
 8001e1e:	e03d      	b.n	8001e9c <HAL_RCC_OscConfig+0x4f8>
 8001e20:	4b11      	ldr	r3, [pc, #68]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001e22:	681b      	ldr	r3, [r3, #0]
 8001e24:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001e28:	2b00      	cmp	r3, #0
 8001e2a:	d0f0      	beq.n	8001e0e <HAL_RCC_OscConfig+0x46a>
 8001e2c:	e035      	b.n	8001e9a <HAL_RCC_OscConfig+0x4f6>
 8001e2e:	4b10      	ldr	r3, [pc, #64]	; (8001e70 <HAL_RCC_OscConfig+0x4cc>)
 8001e30:	2200      	movs	r2, #0
 8001e32:	601a      	str	r2, [r3, #0]
 8001e34:	f7ff faea 	bl	800140c <HAL_GetTick>
 8001e38:	6138      	str	r0, [r7, #16]
 8001e3a:	e008      	b.n	8001e4e <HAL_RCC_OscConfig+0x4aa>
 8001e3c:	f7ff fae6 	bl	800140c <HAL_GetTick>
 8001e40:	4602      	mov	r2, r0
 8001e42:	693b      	ldr	r3, [r7, #16]
 8001e44:	1ad3      	subs	r3, r2, r3
 8001e46:	2b02      	cmp	r3, #2
 8001e48:	d901      	bls.n	8001e4e <HAL_RCC_OscConfig+0x4aa>
 8001e4a:	2303      	movs	r3, #3
 8001e4c:	e026      	b.n	8001e9c <HAL_RCC_OscConfig+0x4f8>
 8001e4e:	4b06      	ldr	r3, [pc, #24]	; (8001e68 <HAL_RCC_OscConfig+0x4c4>)
 8001e50:	681b      	ldr	r3, [r3, #0]
 8001e52:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001e56:	2b00      	cmp	r3, #0
 8001e58:	d1f0      	bne.n	8001e3c <HAL_RCC_OscConfig+0x498>
 8001e5a:	e01e      	b.n	8001e9a <HAL_RCC_OscConfig+0x4f6>
 8001e5c:	687b      	ldr	r3, [r7, #4]
 8001e5e:	69db      	ldr	r3, [r3, #28]
 8001e60:	2b01      	cmp	r3, #1
 8001e62:	d107      	bne.n	8001e74 <HAL_RCC_OscConfig+0x4d0>
 8001e64:	2301      	movs	r3, #1
 8001e66:	e019      	b.n	8001e9c <HAL_RCC_OscConfig+0x4f8>
 8001e68:	40021000 	.word	0x40021000
 8001e6c:	40007000 	.word	0x40007000
 8001e70:	42420060 	.word	0x42420060
 8001e74:	4b0b      	ldr	r3, [pc, #44]	; (8001ea4 <HAL_RCC_OscConfig+0x500>)
 8001e76:	685b      	ldr	r3, [r3, #4]
 8001e78:	60fb      	str	r3, [r7, #12]
 8001e7a:	68fb      	ldr	r3, [r7, #12]
 8001e7c:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8001e80:	687b      	ldr	r3, [r7, #4]
 8001e82:	6a1b      	ldr	r3, [r3, #32]
 8001e84:	429a      	cmp	r2, r3
 8001e86:	d106      	bne.n	8001e96 <HAL_RCC_OscConfig+0x4f2>
 8001e88:	68fb      	ldr	r3, [r7, #12]
 8001e8a:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8001e8e:	687b      	ldr	r3, [r7, #4]
 8001e90:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001e92:	429a      	cmp	r2, r3
 8001e94:	d001      	beq.n	8001e9a <HAL_RCC_OscConfig+0x4f6>
 8001e96:	2301      	movs	r3, #1
 8001e98:	e000      	b.n	8001e9c <HAL_RCC_OscConfig+0x4f8>
 8001e9a:	2300      	movs	r3, #0
 8001e9c:	4618      	mov	r0, r3
 8001e9e:	3718      	adds	r7, #24
 8001ea0:	46bd      	mov	sp, r7
 8001ea2:	bd80      	pop	{r7, pc}
 8001ea4:	40021000 	.word	0x40021000

08001ea8 <HAL_RCC_ClockConfig>:
 8001ea8:	b580      	push	{r7, lr}
 8001eaa:	b084      	sub	sp, #16
 8001eac:	af00      	add	r7, sp, #0
 8001eae:	6078      	str	r0, [r7, #4]
 8001eb0:	6039      	str	r1, [r7, #0]
 8001eb2:	687b      	ldr	r3, [r7, #4]
 8001eb4:	2b00      	cmp	r3, #0
 8001eb6:	d101      	bne.n	8001ebc <HAL_RCC_ClockConfig+0x14>
 8001eb8:	2301      	movs	r3, #1
 8001eba:	e0d0      	b.n	800205e <HAL_RCC_ClockConfig+0x1b6>
 8001ebc:	4b6a      	ldr	r3, [pc, #424]	; (8002068 <HAL_RCC_ClockConfig+0x1c0>)
 8001ebe:	681b      	ldr	r3, [r3, #0]
 8001ec0:	f003 0307 	and.w	r3, r3, #7
 8001ec4:	683a      	ldr	r2, [r7, #0]
 8001ec6:	429a      	cmp	r2, r3
 8001ec8:	d910      	bls.n	8001eec <HAL_RCC_ClockConfig+0x44>
 8001eca:	4b67      	ldr	r3, [pc, #412]	; (8002068 <HAL_RCC_ClockConfig+0x1c0>)
 8001ecc:	681b      	ldr	r3, [r3, #0]
 8001ece:	f023 0207 	bic.w	r2, r3, #7
 8001ed2:	4965      	ldr	r1, [pc, #404]	; (8002068 <HAL_RCC_ClockConfig+0x1c0>)
 8001ed4:	683b      	ldr	r3, [r7, #0]
 8001ed6:	4313      	orrs	r3, r2
 8001ed8:	600b      	str	r3, [r1, #0]
 8001eda:	4b63      	ldr	r3, [pc, #396]	; (8002068 <HAL_RCC_ClockConfig+0x1c0>)
 8001edc:	681b      	ldr	r3, [r3, #0]
 8001ede:	f003 0307 	and.w	r3, r3, #7
 8001ee2:	683a      	ldr	r2, [r7, #0]
 8001ee4:	429a      	cmp	r2, r3
 8001ee6:	d001      	beq.n	8001eec <HAL_RCC_ClockConfig+0x44>
 8001ee8:	2301      	movs	r3, #1
 8001eea:	e0b8      	b.n	800205e <HAL_RCC_ClockConfig+0x1b6>
 8001eec:	687b      	ldr	r3, [r7, #4]
 8001eee:	681b      	ldr	r3, [r3, #0]
 8001ef0:	f003 0302 	and.w	r3, r3, #2
 8001ef4:	2b00      	cmp	r3, #0
 8001ef6:	d020      	beq.n	8001f3a <HAL_RCC_ClockConfig+0x92>
 8001ef8:	687b      	ldr	r3, [r7, #4]
 8001efa:	681b      	ldr	r3, [r3, #0]
 8001efc:	f003 0304 	and.w	r3, r3, #4
 8001f00:	2b00      	cmp	r3, #0
 8001f02:	d005      	beq.n	8001f10 <HAL_RCC_ClockConfig+0x68>
 8001f04:	4b59      	ldr	r3, [pc, #356]	; (800206c <HAL_RCC_ClockConfig+0x1c4>)
 8001f06:	685b      	ldr	r3, [r3, #4]
 8001f08:	4a58      	ldr	r2, [pc, #352]	; (800206c <HAL_RCC_ClockConfig+0x1c4>)
 8001f0a:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8001f0e:	6053      	str	r3, [r2, #4]
 8001f10:	687b      	ldr	r3, [r7, #4]
 8001f12:	681b      	ldr	r3, [r3, #0]
 8001f14:	f003 0308 	and.w	r3, r3, #8
 8001f18:	2b00      	cmp	r3, #0
 8001f1a:	d005      	beq.n	8001f28 <HAL_RCC_ClockConfig+0x80>
 8001f1c:	4b53      	ldr	r3, [pc, #332]	; (800206c <HAL_RCC_ClockConfig+0x1c4>)
 8001f1e:	685b      	ldr	r3, [r3, #4]
 8001f20:	4a52      	ldr	r2, [pc, #328]	; (800206c <HAL_RCC_ClockConfig+0x1c4>)
 8001f22:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8001f26:	6053      	str	r3, [r2, #4]
 8001f28:	4b50      	ldr	r3, [pc, #320]	; (800206c <HAL_RCC_ClockConfig+0x1c4>)
 8001f2a:	685b      	ldr	r3, [r3, #4]
 8001f2c:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001f30:	687b      	ldr	r3, [r7, #4]
 8001f32:	689b      	ldr	r3, [r3, #8]
 8001f34:	494d      	ldr	r1, [pc, #308]	; (800206c <HAL_RCC_ClockConfig+0x1c4>)
 8001f36:	4313      	orrs	r3, r2
 8001f38:	604b      	str	r3, [r1, #4]
 8001f3a:	687b      	ldr	r3, [r7, #4]
 8001f3c:	681b      	ldr	r3, [r3, #0]
 8001f3e:	f003 0301 	and.w	r3, r3, #1
 8001f42:	2b00      	cmp	r3, #0
 8001f44:	d040      	beq.n	8001fc8 <HAL_RCC_ClockConfig+0x120>
 8001f46:	687b      	ldr	r3, [r7, #4]
 8001f48:	685b      	ldr	r3, [r3, #4]
 8001f4a:	2b01      	cmp	r3, #1
 8001f4c:	d107      	bne.n	8001f5e <HAL_RCC_ClockConfig+0xb6>
 8001f4e:	4b47      	ldr	r3, [pc, #284]	; (800206c <HAL_RCC_ClockConfig+0x1c4>)
 8001f50:	681b      	ldr	r3, [r3, #0]
 8001f52:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001f56:	2b00      	cmp	r3, #0
 8001f58:	d115      	bne.n	8001f86 <HAL_RCC_ClockConfig+0xde>
 8001f5a:	2301      	movs	r3, #1
 8001f5c:	e07f      	b.n	800205e <HAL_RCC_ClockConfig+0x1b6>
 8001f5e:	687b      	ldr	r3, [r7, #4]
 8001f60:	685b      	ldr	r3, [r3, #4]
 8001f62:	2b02      	cmp	r3, #2
 8001f64:	d107      	bne.n	8001f76 <HAL_RCC_ClockConfig+0xce>
 8001f66:	4b41      	ldr	r3, [pc, #260]	; (800206c <HAL_RCC_ClockConfig+0x1c4>)
 8001f68:	681b      	ldr	r3, [r3, #0]
 8001f6a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001f6e:	2b00      	cmp	r3, #0
 8001f70:	d109      	bne.n	8001f86 <HAL_RCC_ClockConfig+0xde>
 8001f72:	2301      	movs	r3, #1
 8001f74:	e073      	b.n	800205e <HAL_RCC_ClockConfig+0x1b6>
 8001f76:	4b3d      	ldr	r3, [pc, #244]	; (800206c <HAL_RCC_ClockConfig+0x1c4>)
 8001f78:	681b      	ldr	r3, [r3, #0]
 8001f7a:	f003 0302 	and.w	r3, r3, #2
 8001f7e:	2b00      	cmp	r3, #0
 8001f80:	d101      	bne.n	8001f86 <HAL_RCC_ClockConfig+0xde>
 8001f82:	2301      	movs	r3, #1
 8001f84:	e06b      	b.n	800205e <HAL_RCC_ClockConfig+0x1b6>
 8001f86:	4b39      	ldr	r3, [pc, #228]	; (800206c <HAL_RCC_ClockConfig+0x1c4>)
 8001f88:	685b      	ldr	r3, [r3, #4]
 8001f8a:	f023 0203 	bic.w	r2, r3, #3
 8001f8e:	687b      	ldr	r3, [r7, #4]
 8001f90:	685b      	ldr	r3, [r3, #4]
 8001f92:	4936      	ldr	r1, [pc, #216]	; (800206c <HAL_RCC_ClockConfig+0x1c4>)
 8001f94:	4313      	orrs	r3, r2
 8001f96:	604b      	str	r3, [r1, #4]
 8001f98:	f7ff fa38 	bl	800140c <HAL_GetTick>
 8001f9c:	60f8      	str	r0, [r7, #12]
 8001f9e:	e00a      	b.n	8001fb6 <HAL_RCC_ClockConfig+0x10e>
 8001fa0:	f7ff fa34 	bl	800140c <HAL_GetTick>
 8001fa4:	4602      	mov	r2, r0
 8001fa6:	68fb      	ldr	r3, [r7, #12]
 8001fa8:	1ad3      	subs	r3, r2, r3
 8001faa:	f241 3288 	movw	r2, #5000	; 0x1388
 8001fae:	4293      	cmp	r3, r2
 8001fb0:	d901      	bls.n	8001fb6 <HAL_RCC_ClockConfig+0x10e>
 8001fb2:	2303      	movs	r3, #3
 8001fb4:	e053      	b.n	800205e <HAL_RCC_ClockConfig+0x1b6>
 8001fb6:	4b2d      	ldr	r3, [pc, #180]	; (800206c <HAL_RCC_ClockConfig+0x1c4>)
 8001fb8:	685b      	ldr	r3, [r3, #4]
 8001fba:	f003 020c 	and.w	r2, r3, #12
 8001fbe:	687b      	ldr	r3, [r7, #4]
 8001fc0:	685b      	ldr	r3, [r3, #4]
 8001fc2:	009b      	lsls	r3, r3, #2
 8001fc4:	429a      	cmp	r2, r3
 8001fc6:	d1eb      	bne.n	8001fa0 <HAL_RCC_ClockConfig+0xf8>
 8001fc8:	4b27      	ldr	r3, [pc, #156]	; (8002068 <HAL_RCC_ClockConfig+0x1c0>)
 8001fca:	681b      	ldr	r3, [r3, #0]
 8001fcc:	f003 0307 	and.w	r3, r3, #7
 8001fd0:	683a      	ldr	r2, [r7, #0]
 8001fd2:	429a      	cmp	r2, r3
 8001fd4:	d210      	bcs.n	8001ff8 <HAL_RCC_ClockConfig+0x150>
 8001fd6:	4b24      	ldr	r3, [pc, #144]	; (8002068 <HAL_RCC_ClockConfig+0x1c0>)
 8001fd8:	681b      	ldr	r3, [r3, #0]
 8001fda:	f023 0207 	bic.w	r2, r3, #7
 8001fde:	4922      	ldr	r1, [pc, #136]	; (8002068 <HAL_RCC_ClockConfig+0x1c0>)
 8001fe0:	683b      	ldr	r3, [r7, #0]
 8001fe2:	4313      	orrs	r3, r2
 8001fe4:	600b      	str	r3, [r1, #0]
 8001fe6:	4b20      	ldr	r3, [pc, #128]	; (8002068 <HAL_RCC_ClockConfig+0x1c0>)
 8001fe8:	681b      	ldr	r3, [r3, #0]
 8001fea:	f003 0307 	and.w	r3, r3, #7
 8001fee:	683a      	ldr	r2, [r7, #0]
 8001ff0:	429a      	cmp	r2, r3
 8001ff2:	d001      	beq.n	8001ff8 <HAL_RCC_ClockConfig+0x150>
 8001ff4:	2301      	movs	r3, #1
 8001ff6:	e032      	b.n	800205e <HAL_RCC_ClockConfig+0x1b6>
 8001ff8:	687b      	ldr	r3, [r7, #4]
 8001ffa:	681b      	ldr	r3, [r3, #0]
 8001ffc:	f003 0304 	and.w	r3, r3, #4
 8002000:	2b00      	cmp	r3, #0
 8002002:	d008      	beq.n	8002016 <HAL_RCC_ClockConfig+0x16e>
 8002004:	4b19      	ldr	r3, [pc, #100]	; (800206c <HAL_RCC_ClockConfig+0x1c4>)
 8002006:	685b      	ldr	r3, [r3, #4]
 8002008:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 800200c:	687b      	ldr	r3, [r7, #4]
 800200e:	68db      	ldr	r3, [r3, #12]
 8002010:	4916      	ldr	r1, [pc, #88]	; (800206c <HAL_RCC_ClockConfig+0x1c4>)
 8002012:	4313      	orrs	r3, r2
 8002014:	604b      	str	r3, [r1, #4]
 8002016:	687b      	ldr	r3, [r7, #4]
 8002018:	681b      	ldr	r3, [r3, #0]
 800201a:	f003 0308 	and.w	r3, r3, #8
 800201e:	2b00      	cmp	r3, #0
 8002020:	d009      	beq.n	8002036 <HAL_RCC_ClockConfig+0x18e>
 8002022:	4b12      	ldr	r3, [pc, #72]	; (800206c <HAL_RCC_ClockConfig+0x1c4>)
 8002024:	685b      	ldr	r3, [r3, #4]
 8002026:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 800202a:	687b      	ldr	r3, [r7, #4]
 800202c:	691b      	ldr	r3, [r3, #16]
 800202e:	00db      	lsls	r3, r3, #3
 8002030:	490e      	ldr	r1, [pc, #56]	; (800206c <HAL_RCC_ClockConfig+0x1c4>)
 8002032:	4313      	orrs	r3, r2
 8002034:	604b      	str	r3, [r1, #4]
 8002036:	f000 f821 	bl	800207c <HAL_RCC_GetSysClockFreq>
 800203a:	4602      	mov	r2, r0
 800203c:	4b0b      	ldr	r3, [pc, #44]	; (800206c <HAL_RCC_ClockConfig+0x1c4>)
 800203e:	685b      	ldr	r3, [r3, #4]
 8002040:	091b      	lsrs	r3, r3, #4
 8002042:	f003 030f 	and.w	r3, r3, #15
 8002046:	490a      	ldr	r1, [pc, #40]	; (8002070 <HAL_RCC_ClockConfig+0x1c8>)
 8002048:	5ccb      	ldrb	r3, [r1, r3]
 800204a:	fa22 f303 	lsr.w	r3, r2, r3
 800204e:	4a09      	ldr	r2, [pc, #36]	; (8002074 <HAL_RCC_ClockConfig+0x1cc>)
 8002050:	6013      	str	r3, [r2, #0]
 8002052:	4b09      	ldr	r3, [pc, #36]	; (8002078 <HAL_RCC_ClockConfig+0x1d0>)
 8002054:	681b      	ldr	r3, [r3, #0]
 8002056:	4618      	mov	r0, r3
 8002058:	f7ff f996 	bl	8001388 <HAL_InitTick>
 800205c:	2300      	movs	r3, #0
 800205e:	4618      	mov	r0, r3
 8002060:	3710      	adds	r7, #16
 8002062:	46bd      	mov	sp, r7
 8002064:	bd80      	pop	{r7, pc}
 8002066:	bf00      	nop
 8002068:	40022000 	.word	0x40022000
 800206c:	40021000 	.word	0x40021000
 8002070:	08003e04 	.word	0x08003e04
 8002074:	2000004c 	.word	0x2000004c
 8002078:	20000050 	.word	0x20000050

0800207c <HAL_RCC_GetSysClockFreq>:
 800207c:	b490      	push	{r4, r7}
 800207e:	b08a      	sub	sp, #40	; 0x28
 8002080:	af00      	add	r7, sp, #0
 8002082:	4b29      	ldr	r3, [pc, #164]	; (8002128 <HAL_RCC_GetSysClockFreq+0xac>)
 8002084:	1d3c      	adds	r4, r7, #4
 8002086:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002088:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800208c:	f240 2301 	movw	r3, #513	; 0x201
 8002090:	803b      	strh	r3, [r7, #0]
 8002092:	2300      	movs	r3, #0
 8002094:	61fb      	str	r3, [r7, #28]
 8002096:	2300      	movs	r3, #0
 8002098:	61bb      	str	r3, [r7, #24]
 800209a:	2300      	movs	r3, #0
 800209c:	627b      	str	r3, [r7, #36]	; 0x24
 800209e:	2300      	movs	r3, #0
 80020a0:	617b      	str	r3, [r7, #20]
 80020a2:	2300      	movs	r3, #0
 80020a4:	623b      	str	r3, [r7, #32]
 80020a6:	4b21      	ldr	r3, [pc, #132]	; (800212c <HAL_RCC_GetSysClockFreq+0xb0>)
 80020a8:	685b      	ldr	r3, [r3, #4]
 80020aa:	61fb      	str	r3, [r7, #28]
 80020ac:	69fb      	ldr	r3, [r7, #28]
 80020ae:	f003 030c 	and.w	r3, r3, #12
 80020b2:	2b04      	cmp	r3, #4
 80020b4:	d002      	beq.n	80020bc <HAL_RCC_GetSysClockFreq+0x40>
 80020b6:	2b08      	cmp	r3, #8
 80020b8:	d003      	beq.n	80020c2 <HAL_RCC_GetSysClockFreq+0x46>
 80020ba:	e02b      	b.n	8002114 <HAL_RCC_GetSysClockFreq+0x98>
 80020bc:	4b1c      	ldr	r3, [pc, #112]	; (8002130 <HAL_RCC_GetSysClockFreq+0xb4>)
 80020be:	623b      	str	r3, [r7, #32]
 80020c0:	e02b      	b.n	800211a <HAL_RCC_GetSysClockFreq+0x9e>
 80020c2:	69fb      	ldr	r3, [r7, #28]
 80020c4:	0c9b      	lsrs	r3, r3, #18
 80020c6:	f003 030f 	and.w	r3, r3, #15
 80020ca:	3328      	adds	r3, #40	; 0x28
 80020cc:	443b      	add	r3, r7
 80020ce:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 80020d2:	617b      	str	r3, [r7, #20]
 80020d4:	69fb      	ldr	r3, [r7, #28]
 80020d6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80020da:	2b00      	cmp	r3, #0
 80020dc:	d012      	beq.n	8002104 <HAL_RCC_GetSysClockFreq+0x88>
 80020de:	4b13      	ldr	r3, [pc, #76]	; (800212c <HAL_RCC_GetSysClockFreq+0xb0>)
 80020e0:	685b      	ldr	r3, [r3, #4]
 80020e2:	0c5b      	lsrs	r3, r3, #17
 80020e4:	f003 0301 	and.w	r3, r3, #1
 80020e8:	3328      	adds	r3, #40	; 0x28
 80020ea:	443b      	add	r3, r7
 80020ec:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 80020f0:	61bb      	str	r3, [r7, #24]
 80020f2:	697b      	ldr	r3, [r7, #20]
 80020f4:	4a0e      	ldr	r2, [pc, #56]	; (8002130 <HAL_RCC_GetSysClockFreq+0xb4>)
 80020f6:	fb03 f202 	mul.w	r2, r3, r2
 80020fa:	69bb      	ldr	r3, [r7, #24]
 80020fc:	fbb2 f3f3 	udiv	r3, r2, r3
 8002100:	627b      	str	r3, [r7, #36]	; 0x24
 8002102:	e004      	b.n	800210e <HAL_RCC_GetSysClockFreq+0x92>
 8002104:	697b      	ldr	r3, [r7, #20]
 8002106:	4a0b      	ldr	r2, [pc, #44]	; (8002134 <HAL_RCC_GetSysClockFreq+0xb8>)
 8002108:	fb02 f303 	mul.w	r3, r2, r3
 800210c:	627b      	str	r3, [r7, #36]	; 0x24
 800210e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002110:	623b      	str	r3, [r7, #32]
 8002112:	e002      	b.n	800211a <HAL_RCC_GetSysClockFreq+0x9e>
 8002114:	4b06      	ldr	r3, [pc, #24]	; (8002130 <HAL_RCC_GetSysClockFreq+0xb4>)
 8002116:	623b      	str	r3, [r7, #32]
 8002118:	bf00      	nop
 800211a:	6a3b      	ldr	r3, [r7, #32]
 800211c:	4618      	mov	r0, r3
 800211e:	3728      	adds	r7, #40	; 0x28
 8002120:	46bd      	mov	sp, r7
 8002122:	bc90      	pop	{r4, r7}
 8002124:	4770      	bx	lr
 8002126:	bf00      	nop
 8002128:	08003df4 	.word	0x08003df4
 800212c:	40021000 	.word	0x40021000
 8002130:	007a1200 	.word	0x007a1200
 8002134:	003d0900 	.word	0x003d0900

08002138 <HAL_RCC_GetHCLKFreq>:
 8002138:	b480      	push	{r7}
 800213a:	af00      	add	r7, sp, #0
 800213c:	4b02      	ldr	r3, [pc, #8]	; (8002148 <HAL_RCC_GetHCLKFreq+0x10>)
 800213e:	681b      	ldr	r3, [r3, #0]
 8002140:	4618      	mov	r0, r3
 8002142:	46bd      	mov	sp, r7
 8002144:	bc80      	pop	{r7}
 8002146:	4770      	bx	lr
 8002148:	2000004c 	.word	0x2000004c

0800214c <HAL_RCC_GetPCLK1Freq>:
 800214c:	b580      	push	{r7, lr}
 800214e:	af00      	add	r7, sp, #0
 8002150:	f7ff fff2 	bl	8002138 <HAL_RCC_GetHCLKFreq>
 8002154:	4602      	mov	r2, r0
 8002156:	4b05      	ldr	r3, [pc, #20]	; (800216c <HAL_RCC_GetPCLK1Freq+0x20>)
 8002158:	685b      	ldr	r3, [r3, #4]
 800215a:	0a1b      	lsrs	r3, r3, #8
 800215c:	f003 0307 	and.w	r3, r3, #7
 8002160:	4903      	ldr	r1, [pc, #12]	; (8002170 <HAL_RCC_GetPCLK1Freq+0x24>)
 8002162:	5ccb      	ldrb	r3, [r1, r3]
 8002164:	fa22 f303 	lsr.w	r3, r2, r3
 8002168:	4618      	mov	r0, r3
 800216a:	bd80      	pop	{r7, pc}
 800216c:	40021000 	.word	0x40021000
 8002170:	08003e14 	.word	0x08003e14

08002174 <HAL_RCC_GetPCLK2Freq>:
 8002174:	b580      	push	{r7, lr}
 8002176:	af00      	add	r7, sp, #0
 8002178:	f7ff ffde 	bl	8002138 <HAL_RCC_GetHCLKFreq>
 800217c:	4602      	mov	r2, r0
 800217e:	4b05      	ldr	r3, [pc, #20]	; (8002194 <HAL_RCC_GetPCLK2Freq+0x20>)
 8002180:	685b      	ldr	r3, [r3, #4]
 8002182:	0adb      	lsrs	r3, r3, #11
 8002184:	f003 0307 	and.w	r3, r3, #7
 8002188:	4903      	ldr	r1, [pc, #12]	; (8002198 <HAL_RCC_GetPCLK2Freq+0x24>)
 800218a:	5ccb      	ldrb	r3, [r1, r3]
 800218c:	fa22 f303 	lsr.w	r3, r2, r3
 8002190:	4618      	mov	r0, r3
 8002192:	bd80      	pop	{r7, pc}
 8002194:	40021000 	.word	0x40021000
 8002198:	08003e14 	.word	0x08003e14

0800219c <RCC_Delay>:
 800219c:	b480      	push	{r7}
 800219e:	b085      	sub	sp, #20
 80021a0:	af00      	add	r7, sp, #0
 80021a2:	6078      	str	r0, [r7, #4]
 80021a4:	4b0a      	ldr	r3, [pc, #40]	; (80021d0 <RCC_Delay+0x34>)
 80021a6:	681b      	ldr	r3, [r3, #0]
 80021a8:	4a0a      	ldr	r2, [pc, #40]	; (80021d4 <RCC_Delay+0x38>)
 80021aa:	fba2 2303 	umull	r2, r3, r2, r3
 80021ae:	0a5b      	lsrs	r3, r3, #9
 80021b0:	687a      	ldr	r2, [r7, #4]
 80021b2:	fb02 f303 	mul.w	r3, r2, r3
 80021b6:	60fb      	str	r3, [r7, #12]
 80021b8:	bf00      	nop
 80021ba:	68fb      	ldr	r3, [r7, #12]
 80021bc:	1e5a      	subs	r2, r3, #1
 80021be:	60fa      	str	r2, [r7, #12]
 80021c0:	2b00      	cmp	r3, #0
 80021c2:	d1f9      	bne.n	80021b8 <RCC_Delay+0x1c>
 80021c4:	bf00      	nop
 80021c6:	bf00      	nop
 80021c8:	3714      	adds	r7, #20
 80021ca:	46bd      	mov	sp, r7
 80021cc:	bc80      	pop	{r7}
 80021ce:	4770      	bx	lr
 80021d0:	2000004c 	.word	0x2000004c
 80021d4:	10624dd3 	.word	0x10624dd3

080021d8 <HAL_TIM_Base_Init>:
 80021d8:	b580      	push	{r7, lr}
 80021da:	b082      	sub	sp, #8
 80021dc:	af00      	add	r7, sp, #0
 80021de:	6078      	str	r0, [r7, #4]
 80021e0:	687b      	ldr	r3, [r7, #4]
 80021e2:	2b00      	cmp	r3, #0
 80021e4:	d101      	bne.n	80021ea <HAL_TIM_Base_Init+0x12>
 80021e6:	2301      	movs	r3, #1
 80021e8:	e041      	b.n	800226e <HAL_TIM_Base_Init+0x96>
 80021ea:	687b      	ldr	r3, [r7, #4]
 80021ec:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80021f0:	b2db      	uxtb	r3, r3
 80021f2:	2b00      	cmp	r3, #0
 80021f4:	d106      	bne.n	8002204 <HAL_TIM_Base_Init+0x2c>
 80021f6:	687b      	ldr	r3, [r7, #4]
 80021f8:	2200      	movs	r2, #0
 80021fa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80021fe:	6878      	ldr	r0, [r7, #4]
 8002200:	f7fe ff5a 	bl	80010b8 <HAL_TIM_Base_MspInit>
 8002204:	687b      	ldr	r3, [r7, #4]
 8002206:	2202      	movs	r2, #2
 8002208:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800220c:	687b      	ldr	r3, [r7, #4]
 800220e:	681a      	ldr	r2, [r3, #0]
 8002210:	687b      	ldr	r3, [r7, #4]
 8002212:	3304      	adds	r3, #4
 8002214:	4619      	mov	r1, r3
 8002216:	4610      	mov	r0, r2
 8002218:	f000 fc20 	bl	8002a5c <TIM_Base_SetConfig>
 800221c:	687b      	ldr	r3, [r7, #4]
 800221e:	2201      	movs	r2, #1
 8002220:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002224:	687b      	ldr	r3, [r7, #4]
 8002226:	2201      	movs	r2, #1
 8002228:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800222c:	687b      	ldr	r3, [r7, #4]
 800222e:	2201      	movs	r2, #1
 8002230:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002234:	687b      	ldr	r3, [r7, #4]
 8002236:	2201      	movs	r2, #1
 8002238:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800223c:	687b      	ldr	r3, [r7, #4]
 800223e:	2201      	movs	r2, #1
 8002240:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002244:	687b      	ldr	r3, [r7, #4]
 8002246:	2201      	movs	r2, #1
 8002248:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800224c:	687b      	ldr	r3, [r7, #4]
 800224e:	2201      	movs	r2, #1
 8002250:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002254:	687b      	ldr	r3, [r7, #4]
 8002256:	2201      	movs	r2, #1
 8002258:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800225c:	687b      	ldr	r3, [r7, #4]
 800225e:	2201      	movs	r2, #1
 8002260:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002264:	687b      	ldr	r3, [r7, #4]
 8002266:	2201      	movs	r2, #1
 8002268:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800226c:	2300      	movs	r3, #0
 800226e:	4618      	mov	r0, r3
 8002270:	3708      	adds	r7, #8
 8002272:	46bd      	mov	sp, r7
 8002274:	bd80      	pop	{r7, pc}
	...

08002278 <HAL_TIM_Base_Start_IT>:
 8002278:	b480      	push	{r7}
 800227a:	b085      	sub	sp, #20
 800227c:	af00      	add	r7, sp, #0
 800227e:	6078      	str	r0, [r7, #4]
 8002280:	687b      	ldr	r3, [r7, #4]
 8002282:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002286:	b2db      	uxtb	r3, r3
 8002288:	2b01      	cmp	r3, #1
 800228a:	d001      	beq.n	8002290 <HAL_TIM_Base_Start_IT+0x18>
 800228c:	2301      	movs	r3, #1
 800228e:	e03a      	b.n	8002306 <HAL_TIM_Base_Start_IT+0x8e>
 8002290:	687b      	ldr	r3, [r7, #4]
 8002292:	2202      	movs	r2, #2
 8002294:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002298:	687b      	ldr	r3, [r7, #4]
 800229a:	681b      	ldr	r3, [r3, #0]
 800229c:	68da      	ldr	r2, [r3, #12]
 800229e:	687b      	ldr	r3, [r7, #4]
 80022a0:	681b      	ldr	r3, [r3, #0]
 80022a2:	f042 0201 	orr.w	r2, r2, #1
 80022a6:	60da      	str	r2, [r3, #12]
 80022a8:	687b      	ldr	r3, [r7, #4]
 80022aa:	681b      	ldr	r3, [r3, #0]
 80022ac:	4a18      	ldr	r2, [pc, #96]	; (8002310 <HAL_TIM_Base_Start_IT+0x98>)
 80022ae:	4293      	cmp	r3, r2
 80022b0:	d00e      	beq.n	80022d0 <HAL_TIM_Base_Start_IT+0x58>
 80022b2:	687b      	ldr	r3, [r7, #4]
 80022b4:	681b      	ldr	r3, [r3, #0]
 80022b6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80022ba:	d009      	beq.n	80022d0 <HAL_TIM_Base_Start_IT+0x58>
 80022bc:	687b      	ldr	r3, [r7, #4]
 80022be:	681b      	ldr	r3, [r3, #0]
 80022c0:	4a14      	ldr	r2, [pc, #80]	; (8002314 <HAL_TIM_Base_Start_IT+0x9c>)
 80022c2:	4293      	cmp	r3, r2
 80022c4:	d004      	beq.n	80022d0 <HAL_TIM_Base_Start_IT+0x58>
 80022c6:	687b      	ldr	r3, [r7, #4]
 80022c8:	681b      	ldr	r3, [r3, #0]
 80022ca:	4a13      	ldr	r2, [pc, #76]	; (8002318 <HAL_TIM_Base_Start_IT+0xa0>)
 80022cc:	4293      	cmp	r3, r2
 80022ce:	d111      	bne.n	80022f4 <HAL_TIM_Base_Start_IT+0x7c>
 80022d0:	687b      	ldr	r3, [r7, #4]
 80022d2:	681b      	ldr	r3, [r3, #0]
 80022d4:	689b      	ldr	r3, [r3, #8]
 80022d6:	f003 0307 	and.w	r3, r3, #7
 80022da:	60fb      	str	r3, [r7, #12]
 80022dc:	68fb      	ldr	r3, [r7, #12]
 80022de:	2b06      	cmp	r3, #6
 80022e0:	d010      	beq.n	8002304 <HAL_TIM_Base_Start_IT+0x8c>
 80022e2:	687b      	ldr	r3, [r7, #4]
 80022e4:	681b      	ldr	r3, [r3, #0]
 80022e6:	681a      	ldr	r2, [r3, #0]
 80022e8:	687b      	ldr	r3, [r7, #4]
 80022ea:	681b      	ldr	r3, [r3, #0]
 80022ec:	f042 0201 	orr.w	r2, r2, #1
 80022f0:	601a      	str	r2, [r3, #0]
 80022f2:	e007      	b.n	8002304 <HAL_TIM_Base_Start_IT+0x8c>
 80022f4:	687b      	ldr	r3, [r7, #4]
 80022f6:	681b      	ldr	r3, [r3, #0]
 80022f8:	681a      	ldr	r2, [r3, #0]
 80022fa:	687b      	ldr	r3, [r7, #4]
 80022fc:	681b      	ldr	r3, [r3, #0]
 80022fe:	f042 0201 	orr.w	r2, r2, #1
 8002302:	601a      	str	r2, [r3, #0]
 8002304:	2300      	movs	r3, #0
 8002306:	4618      	mov	r0, r3
 8002308:	3714      	adds	r7, #20
 800230a:	46bd      	mov	sp, r7
 800230c:	bc80      	pop	{r7}
 800230e:	4770      	bx	lr
 8002310:	40012c00 	.word	0x40012c00
 8002314:	40000400 	.word	0x40000400
 8002318:	40000800 	.word	0x40000800

0800231c <HAL_TIM_PWM_Init>:
 800231c:	b580      	push	{r7, lr}
 800231e:	b082      	sub	sp, #8
 8002320:	af00      	add	r7, sp, #0
 8002322:	6078      	str	r0, [r7, #4]
 8002324:	687b      	ldr	r3, [r7, #4]
 8002326:	2b00      	cmp	r3, #0
 8002328:	d101      	bne.n	800232e <HAL_TIM_PWM_Init+0x12>
 800232a:	2301      	movs	r3, #1
 800232c:	e041      	b.n	80023b2 <HAL_TIM_PWM_Init+0x96>
 800232e:	687b      	ldr	r3, [r7, #4]
 8002330:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002334:	b2db      	uxtb	r3, r3
 8002336:	2b00      	cmp	r3, #0
 8002338:	d106      	bne.n	8002348 <HAL_TIM_PWM_Init+0x2c>
 800233a:	687b      	ldr	r3, [r7, #4]
 800233c:	2200      	movs	r2, #0
 800233e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002342:	6878      	ldr	r0, [r7, #4]
 8002344:	f7fe fedc 	bl	8001100 <HAL_TIM_PWM_MspInit>
 8002348:	687b      	ldr	r3, [r7, #4]
 800234a:	2202      	movs	r2, #2
 800234c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002350:	687b      	ldr	r3, [r7, #4]
 8002352:	681a      	ldr	r2, [r3, #0]
 8002354:	687b      	ldr	r3, [r7, #4]
 8002356:	3304      	adds	r3, #4
 8002358:	4619      	mov	r1, r3
 800235a:	4610      	mov	r0, r2
 800235c:	f000 fb7e 	bl	8002a5c <TIM_Base_SetConfig>
 8002360:	687b      	ldr	r3, [r7, #4]
 8002362:	2201      	movs	r2, #1
 8002364:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002368:	687b      	ldr	r3, [r7, #4]
 800236a:	2201      	movs	r2, #1
 800236c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002370:	687b      	ldr	r3, [r7, #4]
 8002372:	2201      	movs	r2, #1
 8002374:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002378:	687b      	ldr	r3, [r7, #4]
 800237a:	2201      	movs	r2, #1
 800237c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002380:	687b      	ldr	r3, [r7, #4]
 8002382:	2201      	movs	r2, #1
 8002384:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002388:	687b      	ldr	r3, [r7, #4]
 800238a:	2201      	movs	r2, #1
 800238c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002390:	687b      	ldr	r3, [r7, #4]
 8002392:	2201      	movs	r2, #1
 8002394:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002398:	687b      	ldr	r3, [r7, #4]
 800239a:	2201      	movs	r2, #1
 800239c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80023a0:	687b      	ldr	r3, [r7, #4]
 80023a2:	2201      	movs	r2, #1
 80023a4:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80023a8:	687b      	ldr	r3, [r7, #4]
 80023aa:	2201      	movs	r2, #1
 80023ac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80023b0:	2300      	movs	r3, #0
 80023b2:	4618      	mov	r0, r3
 80023b4:	3708      	adds	r7, #8
 80023b6:	46bd      	mov	sp, r7
 80023b8:	bd80      	pop	{r7, pc}
	...

080023bc <HAL_TIM_PWM_Start>:
 80023bc:	b580      	push	{r7, lr}
 80023be:	b084      	sub	sp, #16
 80023c0:	af00      	add	r7, sp, #0
 80023c2:	6078      	str	r0, [r7, #4]
 80023c4:	6039      	str	r1, [r7, #0]
 80023c6:	683b      	ldr	r3, [r7, #0]
 80023c8:	2b00      	cmp	r3, #0
 80023ca:	d109      	bne.n	80023e0 <HAL_TIM_PWM_Start+0x24>
 80023cc:	687b      	ldr	r3, [r7, #4]
 80023ce:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80023d2:	b2db      	uxtb	r3, r3
 80023d4:	2b01      	cmp	r3, #1
 80023d6:	bf14      	ite	ne
 80023d8:	2301      	movne	r3, #1
 80023da:	2300      	moveq	r3, #0
 80023dc:	b2db      	uxtb	r3, r3
 80023de:	e022      	b.n	8002426 <HAL_TIM_PWM_Start+0x6a>
 80023e0:	683b      	ldr	r3, [r7, #0]
 80023e2:	2b04      	cmp	r3, #4
 80023e4:	d109      	bne.n	80023fa <HAL_TIM_PWM_Start+0x3e>
 80023e6:	687b      	ldr	r3, [r7, #4]
 80023e8:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 80023ec:	b2db      	uxtb	r3, r3
 80023ee:	2b01      	cmp	r3, #1
 80023f0:	bf14      	ite	ne
 80023f2:	2301      	movne	r3, #1
 80023f4:	2300      	moveq	r3, #0
 80023f6:	b2db      	uxtb	r3, r3
 80023f8:	e015      	b.n	8002426 <HAL_TIM_PWM_Start+0x6a>
 80023fa:	683b      	ldr	r3, [r7, #0]
 80023fc:	2b08      	cmp	r3, #8
 80023fe:	d109      	bne.n	8002414 <HAL_TIM_PWM_Start+0x58>
 8002400:	687b      	ldr	r3, [r7, #4]
 8002402:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8002406:	b2db      	uxtb	r3, r3
 8002408:	2b01      	cmp	r3, #1
 800240a:	bf14      	ite	ne
 800240c:	2301      	movne	r3, #1
 800240e:	2300      	moveq	r3, #0
 8002410:	b2db      	uxtb	r3, r3
 8002412:	e008      	b.n	8002426 <HAL_TIM_PWM_Start+0x6a>
 8002414:	687b      	ldr	r3, [r7, #4]
 8002416:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800241a:	b2db      	uxtb	r3, r3
 800241c:	2b01      	cmp	r3, #1
 800241e:	bf14      	ite	ne
 8002420:	2301      	movne	r3, #1
 8002422:	2300      	moveq	r3, #0
 8002424:	b2db      	uxtb	r3, r3
 8002426:	2b00      	cmp	r3, #0
 8002428:	d001      	beq.n	800242e <HAL_TIM_PWM_Start+0x72>
 800242a:	2301      	movs	r3, #1
 800242c:	e05e      	b.n	80024ec <HAL_TIM_PWM_Start+0x130>
 800242e:	683b      	ldr	r3, [r7, #0]
 8002430:	2b00      	cmp	r3, #0
 8002432:	d104      	bne.n	800243e <HAL_TIM_PWM_Start+0x82>
 8002434:	687b      	ldr	r3, [r7, #4]
 8002436:	2202      	movs	r2, #2
 8002438:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800243c:	e013      	b.n	8002466 <HAL_TIM_PWM_Start+0xaa>
 800243e:	683b      	ldr	r3, [r7, #0]
 8002440:	2b04      	cmp	r3, #4
 8002442:	d104      	bne.n	800244e <HAL_TIM_PWM_Start+0x92>
 8002444:	687b      	ldr	r3, [r7, #4]
 8002446:	2202      	movs	r2, #2
 8002448:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800244c:	e00b      	b.n	8002466 <HAL_TIM_PWM_Start+0xaa>
 800244e:	683b      	ldr	r3, [r7, #0]
 8002450:	2b08      	cmp	r3, #8
 8002452:	d104      	bne.n	800245e <HAL_TIM_PWM_Start+0xa2>
 8002454:	687b      	ldr	r3, [r7, #4]
 8002456:	2202      	movs	r2, #2
 8002458:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800245c:	e003      	b.n	8002466 <HAL_TIM_PWM_Start+0xaa>
 800245e:	687b      	ldr	r3, [r7, #4]
 8002460:	2202      	movs	r2, #2
 8002462:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002466:	687b      	ldr	r3, [r7, #4]
 8002468:	681b      	ldr	r3, [r3, #0]
 800246a:	2201      	movs	r2, #1
 800246c:	6839      	ldr	r1, [r7, #0]
 800246e:	4618      	mov	r0, r3
 8002470:	f000 fd74 	bl	8002f5c <TIM_CCxChannelCmd>
 8002474:	687b      	ldr	r3, [r7, #4]
 8002476:	681b      	ldr	r3, [r3, #0]
 8002478:	4a1e      	ldr	r2, [pc, #120]	; (80024f4 <HAL_TIM_PWM_Start+0x138>)
 800247a:	4293      	cmp	r3, r2
 800247c:	d107      	bne.n	800248e <HAL_TIM_PWM_Start+0xd2>
 800247e:	687b      	ldr	r3, [r7, #4]
 8002480:	681b      	ldr	r3, [r3, #0]
 8002482:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002484:	687b      	ldr	r3, [r7, #4]
 8002486:	681b      	ldr	r3, [r3, #0]
 8002488:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800248c:	645a      	str	r2, [r3, #68]	; 0x44
 800248e:	687b      	ldr	r3, [r7, #4]
 8002490:	681b      	ldr	r3, [r3, #0]
 8002492:	4a18      	ldr	r2, [pc, #96]	; (80024f4 <HAL_TIM_PWM_Start+0x138>)
 8002494:	4293      	cmp	r3, r2
 8002496:	d00e      	beq.n	80024b6 <HAL_TIM_PWM_Start+0xfa>
 8002498:	687b      	ldr	r3, [r7, #4]
 800249a:	681b      	ldr	r3, [r3, #0]
 800249c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80024a0:	d009      	beq.n	80024b6 <HAL_TIM_PWM_Start+0xfa>
 80024a2:	687b      	ldr	r3, [r7, #4]
 80024a4:	681b      	ldr	r3, [r3, #0]
 80024a6:	4a14      	ldr	r2, [pc, #80]	; (80024f8 <HAL_TIM_PWM_Start+0x13c>)
 80024a8:	4293      	cmp	r3, r2
 80024aa:	d004      	beq.n	80024b6 <HAL_TIM_PWM_Start+0xfa>
 80024ac:	687b      	ldr	r3, [r7, #4]
 80024ae:	681b      	ldr	r3, [r3, #0]
 80024b0:	4a12      	ldr	r2, [pc, #72]	; (80024fc <HAL_TIM_PWM_Start+0x140>)
 80024b2:	4293      	cmp	r3, r2
 80024b4:	d111      	bne.n	80024da <HAL_TIM_PWM_Start+0x11e>
 80024b6:	687b      	ldr	r3, [r7, #4]
 80024b8:	681b      	ldr	r3, [r3, #0]
 80024ba:	689b      	ldr	r3, [r3, #8]
 80024bc:	f003 0307 	and.w	r3, r3, #7
 80024c0:	60fb      	str	r3, [r7, #12]
 80024c2:	68fb      	ldr	r3, [r7, #12]
 80024c4:	2b06      	cmp	r3, #6
 80024c6:	d010      	beq.n	80024ea <HAL_TIM_PWM_Start+0x12e>
 80024c8:	687b      	ldr	r3, [r7, #4]
 80024ca:	681b      	ldr	r3, [r3, #0]
 80024cc:	681a      	ldr	r2, [r3, #0]
 80024ce:	687b      	ldr	r3, [r7, #4]
 80024d0:	681b      	ldr	r3, [r3, #0]
 80024d2:	f042 0201 	orr.w	r2, r2, #1
 80024d6:	601a      	str	r2, [r3, #0]
 80024d8:	e007      	b.n	80024ea <HAL_TIM_PWM_Start+0x12e>
 80024da:	687b      	ldr	r3, [r7, #4]
 80024dc:	681b      	ldr	r3, [r3, #0]
 80024de:	681a      	ldr	r2, [r3, #0]
 80024e0:	687b      	ldr	r3, [r7, #4]
 80024e2:	681b      	ldr	r3, [r3, #0]
 80024e4:	f042 0201 	orr.w	r2, r2, #1
 80024e8:	601a      	str	r2, [r3, #0]
 80024ea:	2300      	movs	r3, #0
 80024ec:	4618      	mov	r0, r3
 80024ee:	3710      	adds	r7, #16
 80024f0:	46bd      	mov	sp, r7
 80024f2:	bd80      	pop	{r7, pc}
 80024f4:	40012c00 	.word	0x40012c00
 80024f8:	40000400 	.word	0x40000400
 80024fc:	40000800 	.word	0x40000800

08002500 <HAL_TIM_IRQHandler>:
 8002500:	b580      	push	{r7, lr}
 8002502:	b082      	sub	sp, #8
 8002504:	af00      	add	r7, sp, #0
 8002506:	6078      	str	r0, [r7, #4]
 8002508:	687b      	ldr	r3, [r7, #4]
 800250a:	681b      	ldr	r3, [r3, #0]
 800250c:	691b      	ldr	r3, [r3, #16]
 800250e:	f003 0302 	and.w	r3, r3, #2
 8002512:	2b02      	cmp	r3, #2
 8002514:	d122      	bne.n	800255c <HAL_TIM_IRQHandler+0x5c>
 8002516:	687b      	ldr	r3, [r7, #4]
 8002518:	681b      	ldr	r3, [r3, #0]
 800251a:	68db      	ldr	r3, [r3, #12]
 800251c:	f003 0302 	and.w	r3, r3, #2
 8002520:	2b02      	cmp	r3, #2
 8002522:	d11b      	bne.n	800255c <HAL_TIM_IRQHandler+0x5c>
 8002524:	687b      	ldr	r3, [r7, #4]
 8002526:	681b      	ldr	r3, [r3, #0]
 8002528:	f06f 0202 	mvn.w	r2, #2
 800252c:	611a      	str	r2, [r3, #16]
 800252e:	687b      	ldr	r3, [r7, #4]
 8002530:	2201      	movs	r2, #1
 8002532:	771a      	strb	r2, [r3, #28]
 8002534:	687b      	ldr	r3, [r7, #4]
 8002536:	681b      	ldr	r3, [r3, #0]
 8002538:	699b      	ldr	r3, [r3, #24]
 800253a:	f003 0303 	and.w	r3, r3, #3
 800253e:	2b00      	cmp	r3, #0
 8002540:	d003      	beq.n	800254a <HAL_TIM_IRQHandler+0x4a>
 8002542:	6878      	ldr	r0, [r7, #4]
 8002544:	f000 fa6f 	bl	8002a26 <HAL_TIM_IC_CaptureCallback>
 8002548:	e005      	b.n	8002556 <HAL_TIM_IRQHandler+0x56>
 800254a:	6878      	ldr	r0, [r7, #4]
 800254c:	f000 fa62 	bl	8002a14 <HAL_TIM_OC_DelayElapsedCallback>
 8002550:	6878      	ldr	r0, [r7, #4]
 8002552:	f000 fa71 	bl	8002a38 <HAL_TIM_PWM_PulseFinishedCallback>
 8002556:	687b      	ldr	r3, [r7, #4]
 8002558:	2200      	movs	r2, #0
 800255a:	771a      	strb	r2, [r3, #28]
 800255c:	687b      	ldr	r3, [r7, #4]
 800255e:	681b      	ldr	r3, [r3, #0]
 8002560:	691b      	ldr	r3, [r3, #16]
 8002562:	f003 0304 	and.w	r3, r3, #4
 8002566:	2b04      	cmp	r3, #4
 8002568:	d122      	bne.n	80025b0 <HAL_TIM_IRQHandler+0xb0>
 800256a:	687b      	ldr	r3, [r7, #4]
 800256c:	681b      	ldr	r3, [r3, #0]
 800256e:	68db      	ldr	r3, [r3, #12]
 8002570:	f003 0304 	and.w	r3, r3, #4
 8002574:	2b04      	cmp	r3, #4
 8002576:	d11b      	bne.n	80025b0 <HAL_TIM_IRQHandler+0xb0>
 8002578:	687b      	ldr	r3, [r7, #4]
 800257a:	681b      	ldr	r3, [r3, #0]
 800257c:	f06f 0204 	mvn.w	r2, #4
 8002580:	611a      	str	r2, [r3, #16]
 8002582:	687b      	ldr	r3, [r7, #4]
 8002584:	2202      	movs	r2, #2
 8002586:	771a      	strb	r2, [r3, #28]
 8002588:	687b      	ldr	r3, [r7, #4]
 800258a:	681b      	ldr	r3, [r3, #0]
 800258c:	699b      	ldr	r3, [r3, #24]
 800258e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002592:	2b00      	cmp	r3, #0
 8002594:	d003      	beq.n	800259e <HAL_TIM_IRQHandler+0x9e>
 8002596:	6878      	ldr	r0, [r7, #4]
 8002598:	f000 fa45 	bl	8002a26 <HAL_TIM_IC_CaptureCallback>
 800259c:	e005      	b.n	80025aa <HAL_TIM_IRQHandler+0xaa>
 800259e:	6878      	ldr	r0, [r7, #4]
 80025a0:	f000 fa38 	bl	8002a14 <HAL_TIM_OC_DelayElapsedCallback>
 80025a4:	6878      	ldr	r0, [r7, #4]
 80025a6:	f000 fa47 	bl	8002a38 <HAL_TIM_PWM_PulseFinishedCallback>
 80025aa:	687b      	ldr	r3, [r7, #4]
 80025ac:	2200      	movs	r2, #0
 80025ae:	771a      	strb	r2, [r3, #28]
 80025b0:	687b      	ldr	r3, [r7, #4]
 80025b2:	681b      	ldr	r3, [r3, #0]
 80025b4:	691b      	ldr	r3, [r3, #16]
 80025b6:	f003 0308 	and.w	r3, r3, #8
 80025ba:	2b08      	cmp	r3, #8
 80025bc:	d122      	bne.n	8002604 <HAL_TIM_IRQHandler+0x104>
 80025be:	687b      	ldr	r3, [r7, #4]
 80025c0:	681b      	ldr	r3, [r3, #0]
 80025c2:	68db      	ldr	r3, [r3, #12]
 80025c4:	f003 0308 	and.w	r3, r3, #8
 80025c8:	2b08      	cmp	r3, #8
 80025ca:	d11b      	bne.n	8002604 <HAL_TIM_IRQHandler+0x104>
 80025cc:	687b      	ldr	r3, [r7, #4]
 80025ce:	681b      	ldr	r3, [r3, #0]
 80025d0:	f06f 0208 	mvn.w	r2, #8
 80025d4:	611a      	str	r2, [r3, #16]
 80025d6:	687b      	ldr	r3, [r7, #4]
 80025d8:	2204      	movs	r2, #4
 80025da:	771a      	strb	r2, [r3, #28]
 80025dc:	687b      	ldr	r3, [r7, #4]
 80025de:	681b      	ldr	r3, [r3, #0]
 80025e0:	69db      	ldr	r3, [r3, #28]
 80025e2:	f003 0303 	and.w	r3, r3, #3
 80025e6:	2b00      	cmp	r3, #0
 80025e8:	d003      	beq.n	80025f2 <HAL_TIM_IRQHandler+0xf2>
 80025ea:	6878      	ldr	r0, [r7, #4]
 80025ec:	f000 fa1b 	bl	8002a26 <HAL_TIM_IC_CaptureCallback>
 80025f0:	e005      	b.n	80025fe <HAL_TIM_IRQHandler+0xfe>
 80025f2:	6878      	ldr	r0, [r7, #4]
 80025f4:	f000 fa0e 	bl	8002a14 <HAL_TIM_OC_DelayElapsedCallback>
 80025f8:	6878      	ldr	r0, [r7, #4]
 80025fa:	f000 fa1d 	bl	8002a38 <HAL_TIM_PWM_PulseFinishedCallback>
 80025fe:	687b      	ldr	r3, [r7, #4]
 8002600:	2200      	movs	r2, #0
 8002602:	771a      	strb	r2, [r3, #28]
 8002604:	687b      	ldr	r3, [r7, #4]
 8002606:	681b      	ldr	r3, [r3, #0]
 8002608:	691b      	ldr	r3, [r3, #16]
 800260a:	f003 0310 	and.w	r3, r3, #16
 800260e:	2b10      	cmp	r3, #16
 8002610:	d122      	bne.n	8002658 <HAL_TIM_IRQHandler+0x158>
 8002612:	687b      	ldr	r3, [r7, #4]
 8002614:	681b      	ldr	r3, [r3, #0]
 8002616:	68db      	ldr	r3, [r3, #12]
 8002618:	f003 0310 	and.w	r3, r3, #16
 800261c:	2b10      	cmp	r3, #16
 800261e:	d11b      	bne.n	8002658 <HAL_TIM_IRQHandler+0x158>
 8002620:	687b      	ldr	r3, [r7, #4]
 8002622:	681b      	ldr	r3, [r3, #0]
 8002624:	f06f 0210 	mvn.w	r2, #16
 8002628:	611a      	str	r2, [r3, #16]
 800262a:	687b      	ldr	r3, [r7, #4]
 800262c:	2208      	movs	r2, #8
 800262e:	771a      	strb	r2, [r3, #28]
 8002630:	687b      	ldr	r3, [r7, #4]
 8002632:	681b      	ldr	r3, [r3, #0]
 8002634:	69db      	ldr	r3, [r3, #28]
 8002636:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800263a:	2b00      	cmp	r3, #0
 800263c:	d003      	beq.n	8002646 <HAL_TIM_IRQHandler+0x146>
 800263e:	6878      	ldr	r0, [r7, #4]
 8002640:	f000 f9f1 	bl	8002a26 <HAL_TIM_IC_CaptureCallback>
 8002644:	e005      	b.n	8002652 <HAL_TIM_IRQHandler+0x152>
 8002646:	6878      	ldr	r0, [r7, #4]
 8002648:	f000 f9e4 	bl	8002a14 <HAL_TIM_OC_DelayElapsedCallback>
 800264c:	6878      	ldr	r0, [r7, #4]
 800264e:	f000 f9f3 	bl	8002a38 <HAL_TIM_PWM_PulseFinishedCallback>
 8002652:	687b      	ldr	r3, [r7, #4]
 8002654:	2200      	movs	r2, #0
 8002656:	771a      	strb	r2, [r3, #28]
 8002658:	687b      	ldr	r3, [r7, #4]
 800265a:	681b      	ldr	r3, [r3, #0]
 800265c:	691b      	ldr	r3, [r3, #16]
 800265e:	f003 0301 	and.w	r3, r3, #1
 8002662:	2b01      	cmp	r3, #1
 8002664:	d10e      	bne.n	8002684 <HAL_TIM_IRQHandler+0x184>
 8002666:	687b      	ldr	r3, [r7, #4]
 8002668:	681b      	ldr	r3, [r3, #0]
 800266a:	68db      	ldr	r3, [r3, #12]
 800266c:	f003 0301 	and.w	r3, r3, #1
 8002670:	2b01      	cmp	r3, #1
 8002672:	d107      	bne.n	8002684 <HAL_TIM_IRQHandler+0x184>
 8002674:	687b      	ldr	r3, [r7, #4]
 8002676:	681b      	ldr	r3, [r3, #0]
 8002678:	f06f 0201 	mvn.w	r2, #1
 800267c:	611a      	str	r2, [r3, #16]
 800267e:	6878      	ldr	r0, [r7, #4]
 8002680:	f7fe f892 	bl	80007a8 <HAL_TIM_PeriodElapsedCallback>
 8002684:	687b      	ldr	r3, [r7, #4]
 8002686:	681b      	ldr	r3, [r3, #0]
 8002688:	691b      	ldr	r3, [r3, #16]
 800268a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800268e:	2b80      	cmp	r3, #128	; 0x80
 8002690:	d10e      	bne.n	80026b0 <HAL_TIM_IRQHandler+0x1b0>
 8002692:	687b      	ldr	r3, [r7, #4]
 8002694:	681b      	ldr	r3, [r3, #0]
 8002696:	68db      	ldr	r3, [r3, #12]
 8002698:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800269c:	2b80      	cmp	r3, #128	; 0x80
 800269e:	d107      	bne.n	80026b0 <HAL_TIM_IRQHandler+0x1b0>
 80026a0:	687b      	ldr	r3, [r7, #4]
 80026a2:	681b      	ldr	r3, [r3, #0]
 80026a4:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80026a8:	611a      	str	r2, [r3, #16]
 80026aa:	6878      	ldr	r0, [r7, #4]
 80026ac:	f000 fce1 	bl	8003072 <HAL_TIMEx_BreakCallback>
 80026b0:	687b      	ldr	r3, [r7, #4]
 80026b2:	681b      	ldr	r3, [r3, #0]
 80026b4:	691b      	ldr	r3, [r3, #16]
 80026b6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80026ba:	2b40      	cmp	r3, #64	; 0x40
 80026bc:	d10e      	bne.n	80026dc <HAL_TIM_IRQHandler+0x1dc>
 80026be:	687b      	ldr	r3, [r7, #4]
 80026c0:	681b      	ldr	r3, [r3, #0]
 80026c2:	68db      	ldr	r3, [r3, #12]
 80026c4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80026c8:	2b40      	cmp	r3, #64	; 0x40
 80026ca:	d107      	bne.n	80026dc <HAL_TIM_IRQHandler+0x1dc>
 80026cc:	687b      	ldr	r3, [r7, #4]
 80026ce:	681b      	ldr	r3, [r3, #0]
 80026d0:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80026d4:	611a      	str	r2, [r3, #16]
 80026d6:	6878      	ldr	r0, [r7, #4]
 80026d8:	f000 f9b7 	bl	8002a4a <HAL_TIM_TriggerCallback>
 80026dc:	687b      	ldr	r3, [r7, #4]
 80026de:	681b      	ldr	r3, [r3, #0]
 80026e0:	691b      	ldr	r3, [r3, #16]
 80026e2:	f003 0320 	and.w	r3, r3, #32
 80026e6:	2b20      	cmp	r3, #32
 80026e8:	d10e      	bne.n	8002708 <HAL_TIM_IRQHandler+0x208>
 80026ea:	687b      	ldr	r3, [r7, #4]
 80026ec:	681b      	ldr	r3, [r3, #0]
 80026ee:	68db      	ldr	r3, [r3, #12]
 80026f0:	f003 0320 	and.w	r3, r3, #32
 80026f4:	2b20      	cmp	r3, #32
 80026f6:	d107      	bne.n	8002708 <HAL_TIM_IRQHandler+0x208>
 80026f8:	687b      	ldr	r3, [r7, #4]
 80026fa:	681b      	ldr	r3, [r3, #0]
 80026fc:	f06f 0220 	mvn.w	r2, #32
 8002700:	611a      	str	r2, [r3, #16]
 8002702:	6878      	ldr	r0, [r7, #4]
 8002704:	f000 fcac 	bl	8003060 <HAL_TIMEx_CommutCallback>
 8002708:	bf00      	nop
 800270a:	3708      	adds	r7, #8
 800270c:	46bd      	mov	sp, r7
 800270e:	bd80      	pop	{r7, pc}

08002710 <HAL_TIM_PWM_ConfigChannel>:
 8002710:	b580      	push	{r7, lr}
 8002712:	b084      	sub	sp, #16
 8002714:	af00      	add	r7, sp, #0
 8002716:	60f8      	str	r0, [r7, #12]
 8002718:	60b9      	str	r1, [r7, #8]
 800271a:	607a      	str	r2, [r7, #4]
 800271c:	68fb      	ldr	r3, [r7, #12]
 800271e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002722:	2b01      	cmp	r3, #1
 8002724:	d101      	bne.n	800272a <HAL_TIM_PWM_ConfigChannel+0x1a>
 8002726:	2302      	movs	r3, #2
 8002728:	e0ac      	b.n	8002884 <HAL_TIM_PWM_ConfigChannel+0x174>
 800272a:	68fb      	ldr	r3, [r7, #12]
 800272c:	2201      	movs	r2, #1
 800272e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002732:	687b      	ldr	r3, [r7, #4]
 8002734:	2b0c      	cmp	r3, #12
 8002736:	f200 809f 	bhi.w	8002878 <HAL_TIM_PWM_ConfigChannel+0x168>
 800273a:	a201      	add	r2, pc, #4	; (adr r2, 8002740 <HAL_TIM_PWM_ConfigChannel+0x30>)
 800273c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002740:	08002775 	.word	0x08002775
 8002744:	08002879 	.word	0x08002879
 8002748:	08002879 	.word	0x08002879
 800274c:	08002879 	.word	0x08002879
 8002750:	080027b5 	.word	0x080027b5
 8002754:	08002879 	.word	0x08002879
 8002758:	08002879 	.word	0x08002879
 800275c:	08002879 	.word	0x08002879
 8002760:	080027f7 	.word	0x080027f7
 8002764:	08002879 	.word	0x08002879
 8002768:	08002879 	.word	0x08002879
 800276c:	08002879 	.word	0x08002879
 8002770:	08002837 	.word	0x08002837
 8002774:	68fb      	ldr	r3, [r7, #12]
 8002776:	681b      	ldr	r3, [r3, #0]
 8002778:	68b9      	ldr	r1, [r7, #8]
 800277a:	4618      	mov	r0, r3
 800277c:	f000 f9d0 	bl	8002b20 <TIM_OC1_SetConfig>
 8002780:	68fb      	ldr	r3, [r7, #12]
 8002782:	681b      	ldr	r3, [r3, #0]
 8002784:	699a      	ldr	r2, [r3, #24]
 8002786:	68fb      	ldr	r3, [r7, #12]
 8002788:	681b      	ldr	r3, [r3, #0]
 800278a:	f042 0208 	orr.w	r2, r2, #8
 800278e:	619a      	str	r2, [r3, #24]
 8002790:	68fb      	ldr	r3, [r7, #12]
 8002792:	681b      	ldr	r3, [r3, #0]
 8002794:	699a      	ldr	r2, [r3, #24]
 8002796:	68fb      	ldr	r3, [r7, #12]
 8002798:	681b      	ldr	r3, [r3, #0]
 800279a:	f022 0204 	bic.w	r2, r2, #4
 800279e:	619a      	str	r2, [r3, #24]
 80027a0:	68fb      	ldr	r3, [r7, #12]
 80027a2:	681b      	ldr	r3, [r3, #0]
 80027a4:	6999      	ldr	r1, [r3, #24]
 80027a6:	68bb      	ldr	r3, [r7, #8]
 80027a8:	691a      	ldr	r2, [r3, #16]
 80027aa:	68fb      	ldr	r3, [r7, #12]
 80027ac:	681b      	ldr	r3, [r3, #0]
 80027ae:	430a      	orrs	r2, r1
 80027b0:	619a      	str	r2, [r3, #24]
 80027b2:	e062      	b.n	800287a <HAL_TIM_PWM_ConfigChannel+0x16a>
 80027b4:	68fb      	ldr	r3, [r7, #12]
 80027b6:	681b      	ldr	r3, [r3, #0]
 80027b8:	68b9      	ldr	r1, [r7, #8]
 80027ba:	4618      	mov	r0, r3
 80027bc:	f000 fa16 	bl	8002bec <TIM_OC2_SetConfig>
 80027c0:	68fb      	ldr	r3, [r7, #12]
 80027c2:	681b      	ldr	r3, [r3, #0]
 80027c4:	699a      	ldr	r2, [r3, #24]
 80027c6:	68fb      	ldr	r3, [r7, #12]
 80027c8:	681b      	ldr	r3, [r3, #0]
 80027ca:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80027ce:	619a      	str	r2, [r3, #24]
 80027d0:	68fb      	ldr	r3, [r7, #12]
 80027d2:	681b      	ldr	r3, [r3, #0]
 80027d4:	699a      	ldr	r2, [r3, #24]
 80027d6:	68fb      	ldr	r3, [r7, #12]
 80027d8:	681b      	ldr	r3, [r3, #0]
 80027da:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80027de:	619a      	str	r2, [r3, #24]
 80027e0:	68fb      	ldr	r3, [r7, #12]
 80027e2:	681b      	ldr	r3, [r3, #0]
 80027e4:	6999      	ldr	r1, [r3, #24]
 80027e6:	68bb      	ldr	r3, [r7, #8]
 80027e8:	691b      	ldr	r3, [r3, #16]
 80027ea:	021a      	lsls	r2, r3, #8
 80027ec:	68fb      	ldr	r3, [r7, #12]
 80027ee:	681b      	ldr	r3, [r3, #0]
 80027f0:	430a      	orrs	r2, r1
 80027f2:	619a      	str	r2, [r3, #24]
 80027f4:	e041      	b.n	800287a <HAL_TIM_PWM_ConfigChannel+0x16a>
 80027f6:	68fb      	ldr	r3, [r7, #12]
 80027f8:	681b      	ldr	r3, [r3, #0]
 80027fa:	68b9      	ldr	r1, [r7, #8]
 80027fc:	4618      	mov	r0, r3
 80027fe:	f000 fa5f 	bl	8002cc0 <TIM_OC3_SetConfig>
 8002802:	68fb      	ldr	r3, [r7, #12]
 8002804:	681b      	ldr	r3, [r3, #0]
 8002806:	69da      	ldr	r2, [r3, #28]
 8002808:	68fb      	ldr	r3, [r7, #12]
 800280a:	681b      	ldr	r3, [r3, #0]
 800280c:	f042 0208 	orr.w	r2, r2, #8
 8002810:	61da      	str	r2, [r3, #28]
 8002812:	68fb      	ldr	r3, [r7, #12]
 8002814:	681b      	ldr	r3, [r3, #0]
 8002816:	69da      	ldr	r2, [r3, #28]
 8002818:	68fb      	ldr	r3, [r7, #12]
 800281a:	681b      	ldr	r3, [r3, #0]
 800281c:	f022 0204 	bic.w	r2, r2, #4
 8002820:	61da      	str	r2, [r3, #28]
 8002822:	68fb      	ldr	r3, [r7, #12]
 8002824:	681b      	ldr	r3, [r3, #0]
 8002826:	69d9      	ldr	r1, [r3, #28]
 8002828:	68bb      	ldr	r3, [r7, #8]
 800282a:	691a      	ldr	r2, [r3, #16]
 800282c:	68fb      	ldr	r3, [r7, #12]
 800282e:	681b      	ldr	r3, [r3, #0]
 8002830:	430a      	orrs	r2, r1
 8002832:	61da      	str	r2, [r3, #28]
 8002834:	e021      	b.n	800287a <HAL_TIM_PWM_ConfigChannel+0x16a>
 8002836:	68fb      	ldr	r3, [r7, #12]
 8002838:	681b      	ldr	r3, [r3, #0]
 800283a:	68b9      	ldr	r1, [r7, #8]
 800283c:	4618      	mov	r0, r3
 800283e:	f000 faa9 	bl	8002d94 <TIM_OC4_SetConfig>
 8002842:	68fb      	ldr	r3, [r7, #12]
 8002844:	681b      	ldr	r3, [r3, #0]
 8002846:	69da      	ldr	r2, [r3, #28]
 8002848:	68fb      	ldr	r3, [r7, #12]
 800284a:	681b      	ldr	r3, [r3, #0]
 800284c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8002850:	61da      	str	r2, [r3, #28]
 8002852:	68fb      	ldr	r3, [r7, #12]
 8002854:	681b      	ldr	r3, [r3, #0]
 8002856:	69da      	ldr	r2, [r3, #28]
 8002858:	68fb      	ldr	r3, [r7, #12]
 800285a:	681b      	ldr	r3, [r3, #0]
 800285c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002860:	61da      	str	r2, [r3, #28]
 8002862:	68fb      	ldr	r3, [r7, #12]
 8002864:	681b      	ldr	r3, [r3, #0]
 8002866:	69d9      	ldr	r1, [r3, #28]
 8002868:	68bb      	ldr	r3, [r7, #8]
 800286a:	691b      	ldr	r3, [r3, #16]
 800286c:	021a      	lsls	r2, r3, #8
 800286e:	68fb      	ldr	r3, [r7, #12]
 8002870:	681b      	ldr	r3, [r3, #0]
 8002872:	430a      	orrs	r2, r1
 8002874:	61da      	str	r2, [r3, #28]
 8002876:	e000      	b.n	800287a <HAL_TIM_PWM_ConfigChannel+0x16a>
 8002878:	bf00      	nop
 800287a:	68fb      	ldr	r3, [r7, #12]
 800287c:	2200      	movs	r2, #0
 800287e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002882:	2300      	movs	r3, #0
 8002884:	4618      	mov	r0, r3
 8002886:	3710      	adds	r7, #16
 8002888:	46bd      	mov	sp, r7
 800288a:	bd80      	pop	{r7, pc}

0800288c <HAL_TIM_ConfigClockSource>:
 800288c:	b580      	push	{r7, lr}
 800288e:	b084      	sub	sp, #16
 8002890:	af00      	add	r7, sp, #0
 8002892:	6078      	str	r0, [r7, #4]
 8002894:	6039      	str	r1, [r7, #0]
 8002896:	687b      	ldr	r3, [r7, #4]
 8002898:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800289c:	2b01      	cmp	r3, #1
 800289e:	d101      	bne.n	80028a4 <HAL_TIM_ConfigClockSource+0x18>
 80028a0:	2302      	movs	r3, #2
 80028a2:	e0b3      	b.n	8002a0c <HAL_TIM_ConfigClockSource+0x180>
 80028a4:	687b      	ldr	r3, [r7, #4]
 80028a6:	2201      	movs	r2, #1
 80028a8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80028ac:	687b      	ldr	r3, [r7, #4]
 80028ae:	2202      	movs	r2, #2
 80028b0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80028b4:	687b      	ldr	r3, [r7, #4]
 80028b6:	681b      	ldr	r3, [r3, #0]
 80028b8:	689b      	ldr	r3, [r3, #8]
 80028ba:	60fb      	str	r3, [r7, #12]
 80028bc:	68fb      	ldr	r3, [r7, #12]
 80028be:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 80028c2:	60fb      	str	r3, [r7, #12]
 80028c4:	68fb      	ldr	r3, [r7, #12]
 80028c6:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80028ca:	60fb      	str	r3, [r7, #12]
 80028cc:	687b      	ldr	r3, [r7, #4]
 80028ce:	681b      	ldr	r3, [r3, #0]
 80028d0:	68fa      	ldr	r2, [r7, #12]
 80028d2:	609a      	str	r2, [r3, #8]
 80028d4:	683b      	ldr	r3, [r7, #0]
 80028d6:	681b      	ldr	r3, [r3, #0]
 80028d8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80028dc:	d03e      	beq.n	800295c <HAL_TIM_ConfigClockSource+0xd0>
 80028de:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80028e2:	f200 8087 	bhi.w	80029f4 <HAL_TIM_ConfigClockSource+0x168>
 80028e6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80028ea:	f000 8085 	beq.w	80029f8 <HAL_TIM_ConfigClockSource+0x16c>
 80028ee:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80028f2:	d87f      	bhi.n	80029f4 <HAL_TIM_ConfigClockSource+0x168>
 80028f4:	2b70      	cmp	r3, #112	; 0x70
 80028f6:	d01a      	beq.n	800292e <HAL_TIM_ConfigClockSource+0xa2>
 80028f8:	2b70      	cmp	r3, #112	; 0x70
 80028fa:	d87b      	bhi.n	80029f4 <HAL_TIM_ConfigClockSource+0x168>
 80028fc:	2b60      	cmp	r3, #96	; 0x60
 80028fe:	d050      	beq.n	80029a2 <HAL_TIM_ConfigClockSource+0x116>
 8002900:	2b60      	cmp	r3, #96	; 0x60
 8002902:	d877      	bhi.n	80029f4 <HAL_TIM_ConfigClockSource+0x168>
 8002904:	2b50      	cmp	r3, #80	; 0x50
 8002906:	d03c      	beq.n	8002982 <HAL_TIM_ConfigClockSource+0xf6>
 8002908:	2b50      	cmp	r3, #80	; 0x50
 800290a:	d873      	bhi.n	80029f4 <HAL_TIM_ConfigClockSource+0x168>
 800290c:	2b40      	cmp	r3, #64	; 0x40
 800290e:	d058      	beq.n	80029c2 <HAL_TIM_ConfigClockSource+0x136>
 8002910:	2b40      	cmp	r3, #64	; 0x40
 8002912:	d86f      	bhi.n	80029f4 <HAL_TIM_ConfigClockSource+0x168>
 8002914:	2b30      	cmp	r3, #48	; 0x30
 8002916:	d064      	beq.n	80029e2 <HAL_TIM_ConfigClockSource+0x156>
 8002918:	2b30      	cmp	r3, #48	; 0x30
 800291a:	d86b      	bhi.n	80029f4 <HAL_TIM_ConfigClockSource+0x168>
 800291c:	2b20      	cmp	r3, #32
 800291e:	d060      	beq.n	80029e2 <HAL_TIM_ConfigClockSource+0x156>
 8002920:	2b20      	cmp	r3, #32
 8002922:	d867      	bhi.n	80029f4 <HAL_TIM_ConfigClockSource+0x168>
 8002924:	2b00      	cmp	r3, #0
 8002926:	d05c      	beq.n	80029e2 <HAL_TIM_ConfigClockSource+0x156>
 8002928:	2b10      	cmp	r3, #16
 800292a:	d05a      	beq.n	80029e2 <HAL_TIM_ConfigClockSource+0x156>
 800292c:	e062      	b.n	80029f4 <HAL_TIM_ConfigClockSource+0x168>
 800292e:	687b      	ldr	r3, [r7, #4]
 8002930:	6818      	ldr	r0, [r3, #0]
 8002932:	683b      	ldr	r3, [r7, #0]
 8002934:	6899      	ldr	r1, [r3, #8]
 8002936:	683b      	ldr	r3, [r7, #0]
 8002938:	685a      	ldr	r2, [r3, #4]
 800293a:	683b      	ldr	r3, [r7, #0]
 800293c:	68db      	ldr	r3, [r3, #12]
 800293e:	f000 faee 	bl	8002f1e <TIM_ETR_SetConfig>
 8002942:	687b      	ldr	r3, [r7, #4]
 8002944:	681b      	ldr	r3, [r3, #0]
 8002946:	689b      	ldr	r3, [r3, #8]
 8002948:	60fb      	str	r3, [r7, #12]
 800294a:	68fb      	ldr	r3, [r7, #12]
 800294c:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8002950:	60fb      	str	r3, [r7, #12]
 8002952:	687b      	ldr	r3, [r7, #4]
 8002954:	681b      	ldr	r3, [r3, #0]
 8002956:	68fa      	ldr	r2, [r7, #12]
 8002958:	609a      	str	r2, [r3, #8]
 800295a:	e04e      	b.n	80029fa <HAL_TIM_ConfigClockSource+0x16e>
 800295c:	687b      	ldr	r3, [r7, #4]
 800295e:	6818      	ldr	r0, [r3, #0]
 8002960:	683b      	ldr	r3, [r7, #0]
 8002962:	6899      	ldr	r1, [r3, #8]
 8002964:	683b      	ldr	r3, [r7, #0]
 8002966:	685a      	ldr	r2, [r3, #4]
 8002968:	683b      	ldr	r3, [r7, #0]
 800296a:	68db      	ldr	r3, [r3, #12]
 800296c:	f000 fad7 	bl	8002f1e <TIM_ETR_SetConfig>
 8002970:	687b      	ldr	r3, [r7, #4]
 8002972:	681b      	ldr	r3, [r3, #0]
 8002974:	689a      	ldr	r2, [r3, #8]
 8002976:	687b      	ldr	r3, [r7, #4]
 8002978:	681b      	ldr	r3, [r3, #0]
 800297a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800297e:	609a      	str	r2, [r3, #8]
 8002980:	e03b      	b.n	80029fa <HAL_TIM_ConfigClockSource+0x16e>
 8002982:	687b      	ldr	r3, [r7, #4]
 8002984:	6818      	ldr	r0, [r3, #0]
 8002986:	683b      	ldr	r3, [r7, #0]
 8002988:	6859      	ldr	r1, [r3, #4]
 800298a:	683b      	ldr	r3, [r7, #0]
 800298c:	68db      	ldr	r3, [r3, #12]
 800298e:	461a      	mov	r2, r3
 8002990:	f000 fa4e 	bl	8002e30 <TIM_TI1_ConfigInputStage>
 8002994:	687b      	ldr	r3, [r7, #4]
 8002996:	681b      	ldr	r3, [r3, #0]
 8002998:	2150      	movs	r1, #80	; 0x50
 800299a:	4618      	mov	r0, r3
 800299c:	f000 faa5 	bl	8002eea <TIM_ITRx_SetConfig>
 80029a0:	e02b      	b.n	80029fa <HAL_TIM_ConfigClockSource+0x16e>
 80029a2:	687b      	ldr	r3, [r7, #4]
 80029a4:	6818      	ldr	r0, [r3, #0]
 80029a6:	683b      	ldr	r3, [r7, #0]
 80029a8:	6859      	ldr	r1, [r3, #4]
 80029aa:	683b      	ldr	r3, [r7, #0]
 80029ac:	68db      	ldr	r3, [r3, #12]
 80029ae:	461a      	mov	r2, r3
 80029b0:	f000 fa6c 	bl	8002e8c <TIM_TI2_ConfigInputStage>
 80029b4:	687b      	ldr	r3, [r7, #4]
 80029b6:	681b      	ldr	r3, [r3, #0]
 80029b8:	2160      	movs	r1, #96	; 0x60
 80029ba:	4618      	mov	r0, r3
 80029bc:	f000 fa95 	bl	8002eea <TIM_ITRx_SetConfig>
 80029c0:	e01b      	b.n	80029fa <HAL_TIM_ConfigClockSource+0x16e>
 80029c2:	687b      	ldr	r3, [r7, #4]
 80029c4:	6818      	ldr	r0, [r3, #0]
 80029c6:	683b      	ldr	r3, [r7, #0]
 80029c8:	6859      	ldr	r1, [r3, #4]
 80029ca:	683b      	ldr	r3, [r7, #0]
 80029cc:	68db      	ldr	r3, [r3, #12]
 80029ce:	461a      	mov	r2, r3
 80029d0:	f000 fa2e 	bl	8002e30 <TIM_TI1_ConfigInputStage>
 80029d4:	687b      	ldr	r3, [r7, #4]
 80029d6:	681b      	ldr	r3, [r3, #0]
 80029d8:	2140      	movs	r1, #64	; 0x40
 80029da:	4618      	mov	r0, r3
 80029dc:	f000 fa85 	bl	8002eea <TIM_ITRx_SetConfig>
 80029e0:	e00b      	b.n	80029fa <HAL_TIM_ConfigClockSource+0x16e>
 80029e2:	687b      	ldr	r3, [r7, #4]
 80029e4:	681a      	ldr	r2, [r3, #0]
 80029e6:	683b      	ldr	r3, [r7, #0]
 80029e8:	681b      	ldr	r3, [r3, #0]
 80029ea:	4619      	mov	r1, r3
 80029ec:	4610      	mov	r0, r2
 80029ee:	f000 fa7c 	bl	8002eea <TIM_ITRx_SetConfig>
 80029f2:	e002      	b.n	80029fa <HAL_TIM_ConfigClockSource+0x16e>
 80029f4:	bf00      	nop
 80029f6:	e000      	b.n	80029fa <HAL_TIM_ConfigClockSource+0x16e>
 80029f8:	bf00      	nop
 80029fa:	687b      	ldr	r3, [r7, #4]
 80029fc:	2201      	movs	r2, #1
 80029fe:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002a02:	687b      	ldr	r3, [r7, #4]
 8002a04:	2200      	movs	r2, #0
 8002a06:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002a0a:	2300      	movs	r3, #0
 8002a0c:	4618      	mov	r0, r3
 8002a0e:	3710      	adds	r7, #16
 8002a10:	46bd      	mov	sp, r7
 8002a12:	bd80      	pop	{r7, pc}

08002a14 <HAL_TIM_OC_DelayElapsedCallback>:
 8002a14:	b480      	push	{r7}
 8002a16:	b083      	sub	sp, #12
 8002a18:	af00      	add	r7, sp, #0
 8002a1a:	6078      	str	r0, [r7, #4]
 8002a1c:	bf00      	nop
 8002a1e:	370c      	adds	r7, #12
 8002a20:	46bd      	mov	sp, r7
 8002a22:	bc80      	pop	{r7}
 8002a24:	4770      	bx	lr

08002a26 <HAL_TIM_IC_CaptureCallback>:
 8002a26:	b480      	push	{r7}
 8002a28:	b083      	sub	sp, #12
 8002a2a:	af00      	add	r7, sp, #0
 8002a2c:	6078      	str	r0, [r7, #4]
 8002a2e:	bf00      	nop
 8002a30:	370c      	adds	r7, #12
 8002a32:	46bd      	mov	sp, r7
 8002a34:	bc80      	pop	{r7}
 8002a36:	4770      	bx	lr

08002a38 <HAL_TIM_PWM_PulseFinishedCallback>:
 8002a38:	b480      	push	{r7}
 8002a3a:	b083      	sub	sp, #12
 8002a3c:	af00      	add	r7, sp, #0
 8002a3e:	6078      	str	r0, [r7, #4]
 8002a40:	bf00      	nop
 8002a42:	370c      	adds	r7, #12
 8002a44:	46bd      	mov	sp, r7
 8002a46:	bc80      	pop	{r7}
 8002a48:	4770      	bx	lr

08002a4a <HAL_TIM_TriggerCallback>:
 8002a4a:	b480      	push	{r7}
 8002a4c:	b083      	sub	sp, #12
 8002a4e:	af00      	add	r7, sp, #0
 8002a50:	6078      	str	r0, [r7, #4]
 8002a52:	bf00      	nop
 8002a54:	370c      	adds	r7, #12
 8002a56:	46bd      	mov	sp, r7
 8002a58:	bc80      	pop	{r7}
 8002a5a:	4770      	bx	lr

08002a5c <TIM_Base_SetConfig>:
 8002a5c:	b480      	push	{r7}
 8002a5e:	b085      	sub	sp, #20
 8002a60:	af00      	add	r7, sp, #0
 8002a62:	6078      	str	r0, [r7, #4]
 8002a64:	6039      	str	r1, [r7, #0]
 8002a66:	687b      	ldr	r3, [r7, #4]
 8002a68:	681b      	ldr	r3, [r3, #0]
 8002a6a:	60fb      	str	r3, [r7, #12]
 8002a6c:	687b      	ldr	r3, [r7, #4]
 8002a6e:	4a29      	ldr	r2, [pc, #164]	; (8002b14 <TIM_Base_SetConfig+0xb8>)
 8002a70:	4293      	cmp	r3, r2
 8002a72:	d00b      	beq.n	8002a8c <TIM_Base_SetConfig+0x30>
 8002a74:	687b      	ldr	r3, [r7, #4]
 8002a76:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002a7a:	d007      	beq.n	8002a8c <TIM_Base_SetConfig+0x30>
 8002a7c:	687b      	ldr	r3, [r7, #4]
 8002a7e:	4a26      	ldr	r2, [pc, #152]	; (8002b18 <TIM_Base_SetConfig+0xbc>)
 8002a80:	4293      	cmp	r3, r2
 8002a82:	d003      	beq.n	8002a8c <TIM_Base_SetConfig+0x30>
 8002a84:	687b      	ldr	r3, [r7, #4]
 8002a86:	4a25      	ldr	r2, [pc, #148]	; (8002b1c <TIM_Base_SetConfig+0xc0>)
 8002a88:	4293      	cmp	r3, r2
 8002a8a:	d108      	bne.n	8002a9e <TIM_Base_SetConfig+0x42>
 8002a8c:	68fb      	ldr	r3, [r7, #12]
 8002a8e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002a92:	60fb      	str	r3, [r7, #12]
 8002a94:	683b      	ldr	r3, [r7, #0]
 8002a96:	685b      	ldr	r3, [r3, #4]
 8002a98:	68fa      	ldr	r2, [r7, #12]
 8002a9a:	4313      	orrs	r3, r2
 8002a9c:	60fb      	str	r3, [r7, #12]
 8002a9e:	687b      	ldr	r3, [r7, #4]
 8002aa0:	4a1c      	ldr	r2, [pc, #112]	; (8002b14 <TIM_Base_SetConfig+0xb8>)
 8002aa2:	4293      	cmp	r3, r2
 8002aa4:	d00b      	beq.n	8002abe <TIM_Base_SetConfig+0x62>
 8002aa6:	687b      	ldr	r3, [r7, #4]
 8002aa8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002aac:	d007      	beq.n	8002abe <TIM_Base_SetConfig+0x62>
 8002aae:	687b      	ldr	r3, [r7, #4]
 8002ab0:	4a19      	ldr	r2, [pc, #100]	; (8002b18 <TIM_Base_SetConfig+0xbc>)
 8002ab2:	4293      	cmp	r3, r2
 8002ab4:	d003      	beq.n	8002abe <TIM_Base_SetConfig+0x62>
 8002ab6:	687b      	ldr	r3, [r7, #4]
 8002ab8:	4a18      	ldr	r2, [pc, #96]	; (8002b1c <TIM_Base_SetConfig+0xc0>)
 8002aba:	4293      	cmp	r3, r2
 8002abc:	d108      	bne.n	8002ad0 <TIM_Base_SetConfig+0x74>
 8002abe:	68fb      	ldr	r3, [r7, #12]
 8002ac0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8002ac4:	60fb      	str	r3, [r7, #12]
 8002ac6:	683b      	ldr	r3, [r7, #0]
 8002ac8:	68db      	ldr	r3, [r3, #12]
 8002aca:	68fa      	ldr	r2, [r7, #12]
 8002acc:	4313      	orrs	r3, r2
 8002ace:	60fb      	str	r3, [r7, #12]
 8002ad0:	68fb      	ldr	r3, [r7, #12]
 8002ad2:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8002ad6:	683b      	ldr	r3, [r7, #0]
 8002ad8:	695b      	ldr	r3, [r3, #20]
 8002ada:	4313      	orrs	r3, r2
 8002adc:	60fb      	str	r3, [r7, #12]
 8002ade:	687b      	ldr	r3, [r7, #4]
 8002ae0:	68fa      	ldr	r2, [r7, #12]
 8002ae2:	601a      	str	r2, [r3, #0]
 8002ae4:	683b      	ldr	r3, [r7, #0]
 8002ae6:	689a      	ldr	r2, [r3, #8]
 8002ae8:	687b      	ldr	r3, [r7, #4]
 8002aea:	62da      	str	r2, [r3, #44]	; 0x2c
 8002aec:	683b      	ldr	r3, [r7, #0]
 8002aee:	681a      	ldr	r2, [r3, #0]
 8002af0:	687b      	ldr	r3, [r7, #4]
 8002af2:	629a      	str	r2, [r3, #40]	; 0x28
 8002af4:	687b      	ldr	r3, [r7, #4]
 8002af6:	4a07      	ldr	r2, [pc, #28]	; (8002b14 <TIM_Base_SetConfig+0xb8>)
 8002af8:	4293      	cmp	r3, r2
 8002afa:	d103      	bne.n	8002b04 <TIM_Base_SetConfig+0xa8>
 8002afc:	683b      	ldr	r3, [r7, #0]
 8002afe:	691a      	ldr	r2, [r3, #16]
 8002b00:	687b      	ldr	r3, [r7, #4]
 8002b02:	631a      	str	r2, [r3, #48]	; 0x30
 8002b04:	687b      	ldr	r3, [r7, #4]
 8002b06:	2201      	movs	r2, #1
 8002b08:	615a      	str	r2, [r3, #20]
 8002b0a:	bf00      	nop
 8002b0c:	3714      	adds	r7, #20
 8002b0e:	46bd      	mov	sp, r7
 8002b10:	bc80      	pop	{r7}
 8002b12:	4770      	bx	lr
 8002b14:	40012c00 	.word	0x40012c00
 8002b18:	40000400 	.word	0x40000400
 8002b1c:	40000800 	.word	0x40000800

08002b20 <TIM_OC1_SetConfig>:
 8002b20:	b480      	push	{r7}
 8002b22:	b087      	sub	sp, #28
 8002b24:	af00      	add	r7, sp, #0
 8002b26:	6078      	str	r0, [r7, #4]
 8002b28:	6039      	str	r1, [r7, #0]
 8002b2a:	687b      	ldr	r3, [r7, #4]
 8002b2c:	6a1b      	ldr	r3, [r3, #32]
 8002b2e:	f023 0201 	bic.w	r2, r3, #1
 8002b32:	687b      	ldr	r3, [r7, #4]
 8002b34:	621a      	str	r2, [r3, #32]
 8002b36:	687b      	ldr	r3, [r7, #4]
 8002b38:	6a1b      	ldr	r3, [r3, #32]
 8002b3a:	617b      	str	r3, [r7, #20]
 8002b3c:	687b      	ldr	r3, [r7, #4]
 8002b3e:	685b      	ldr	r3, [r3, #4]
 8002b40:	613b      	str	r3, [r7, #16]
 8002b42:	687b      	ldr	r3, [r7, #4]
 8002b44:	699b      	ldr	r3, [r3, #24]
 8002b46:	60fb      	str	r3, [r7, #12]
 8002b48:	68fb      	ldr	r3, [r7, #12]
 8002b4a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002b4e:	60fb      	str	r3, [r7, #12]
 8002b50:	68fb      	ldr	r3, [r7, #12]
 8002b52:	f023 0303 	bic.w	r3, r3, #3
 8002b56:	60fb      	str	r3, [r7, #12]
 8002b58:	683b      	ldr	r3, [r7, #0]
 8002b5a:	681b      	ldr	r3, [r3, #0]
 8002b5c:	68fa      	ldr	r2, [r7, #12]
 8002b5e:	4313      	orrs	r3, r2
 8002b60:	60fb      	str	r3, [r7, #12]
 8002b62:	697b      	ldr	r3, [r7, #20]
 8002b64:	f023 0302 	bic.w	r3, r3, #2
 8002b68:	617b      	str	r3, [r7, #20]
 8002b6a:	683b      	ldr	r3, [r7, #0]
 8002b6c:	689b      	ldr	r3, [r3, #8]
 8002b6e:	697a      	ldr	r2, [r7, #20]
 8002b70:	4313      	orrs	r3, r2
 8002b72:	617b      	str	r3, [r7, #20]
 8002b74:	687b      	ldr	r3, [r7, #4]
 8002b76:	4a1c      	ldr	r2, [pc, #112]	; (8002be8 <TIM_OC1_SetConfig+0xc8>)
 8002b78:	4293      	cmp	r3, r2
 8002b7a:	d10c      	bne.n	8002b96 <TIM_OC1_SetConfig+0x76>
 8002b7c:	697b      	ldr	r3, [r7, #20]
 8002b7e:	f023 0308 	bic.w	r3, r3, #8
 8002b82:	617b      	str	r3, [r7, #20]
 8002b84:	683b      	ldr	r3, [r7, #0]
 8002b86:	68db      	ldr	r3, [r3, #12]
 8002b88:	697a      	ldr	r2, [r7, #20]
 8002b8a:	4313      	orrs	r3, r2
 8002b8c:	617b      	str	r3, [r7, #20]
 8002b8e:	697b      	ldr	r3, [r7, #20]
 8002b90:	f023 0304 	bic.w	r3, r3, #4
 8002b94:	617b      	str	r3, [r7, #20]
 8002b96:	687b      	ldr	r3, [r7, #4]
 8002b98:	4a13      	ldr	r2, [pc, #76]	; (8002be8 <TIM_OC1_SetConfig+0xc8>)
 8002b9a:	4293      	cmp	r3, r2
 8002b9c:	d111      	bne.n	8002bc2 <TIM_OC1_SetConfig+0xa2>
 8002b9e:	693b      	ldr	r3, [r7, #16]
 8002ba0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002ba4:	613b      	str	r3, [r7, #16]
 8002ba6:	693b      	ldr	r3, [r7, #16]
 8002ba8:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8002bac:	613b      	str	r3, [r7, #16]
 8002bae:	683b      	ldr	r3, [r7, #0]
 8002bb0:	695b      	ldr	r3, [r3, #20]
 8002bb2:	693a      	ldr	r2, [r7, #16]
 8002bb4:	4313      	orrs	r3, r2
 8002bb6:	613b      	str	r3, [r7, #16]
 8002bb8:	683b      	ldr	r3, [r7, #0]
 8002bba:	699b      	ldr	r3, [r3, #24]
 8002bbc:	693a      	ldr	r2, [r7, #16]
 8002bbe:	4313      	orrs	r3, r2
 8002bc0:	613b      	str	r3, [r7, #16]
 8002bc2:	687b      	ldr	r3, [r7, #4]
 8002bc4:	693a      	ldr	r2, [r7, #16]
 8002bc6:	605a      	str	r2, [r3, #4]
 8002bc8:	687b      	ldr	r3, [r7, #4]
 8002bca:	68fa      	ldr	r2, [r7, #12]
 8002bcc:	619a      	str	r2, [r3, #24]
 8002bce:	683b      	ldr	r3, [r7, #0]
 8002bd0:	685a      	ldr	r2, [r3, #4]
 8002bd2:	687b      	ldr	r3, [r7, #4]
 8002bd4:	635a      	str	r2, [r3, #52]	; 0x34
 8002bd6:	687b      	ldr	r3, [r7, #4]
 8002bd8:	697a      	ldr	r2, [r7, #20]
 8002bda:	621a      	str	r2, [r3, #32]
 8002bdc:	bf00      	nop
 8002bde:	371c      	adds	r7, #28
 8002be0:	46bd      	mov	sp, r7
 8002be2:	bc80      	pop	{r7}
 8002be4:	4770      	bx	lr
 8002be6:	bf00      	nop
 8002be8:	40012c00 	.word	0x40012c00

08002bec <TIM_OC2_SetConfig>:
 8002bec:	b480      	push	{r7}
 8002bee:	b087      	sub	sp, #28
 8002bf0:	af00      	add	r7, sp, #0
 8002bf2:	6078      	str	r0, [r7, #4]
 8002bf4:	6039      	str	r1, [r7, #0]
 8002bf6:	687b      	ldr	r3, [r7, #4]
 8002bf8:	6a1b      	ldr	r3, [r3, #32]
 8002bfa:	f023 0210 	bic.w	r2, r3, #16
 8002bfe:	687b      	ldr	r3, [r7, #4]
 8002c00:	621a      	str	r2, [r3, #32]
 8002c02:	687b      	ldr	r3, [r7, #4]
 8002c04:	6a1b      	ldr	r3, [r3, #32]
 8002c06:	617b      	str	r3, [r7, #20]
 8002c08:	687b      	ldr	r3, [r7, #4]
 8002c0a:	685b      	ldr	r3, [r3, #4]
 8002c0c:	613b      	str	r3, [r7, #16]
 8002c0e:	687b      	ldr	r3, [r7, #4]
 8002c10:	699b      	ldr	r3, [r3, #24]
 8002c12:	60fb      	str	r3, [r7, #12]
 8002c14:	68fb      	ldr	r3, [r7, #12]
 8002c16:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8002c1a:	60fb      	str	r3, [r7, #12]
 8002c1c:	68fb      	ldr	r3, [r7, #12]
 8002c1e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8002c22:	60fb      	str	r3, [r7, #12]
 8002c24:	683b      	ldr	r3, [r7, #0]
 8002c26:	681b      	ldr	r3, [r3, #0]
 8002c28:	021b      	lsls	r3, r3, #8
 8002c2a:	68fa      	ldr	r2, [r7, #12]
 8002c2c:	4313      	orrs	r3, r2
 8002c2e:	60fb      	str	r3, [r7, #12]
 8002c30:	697b      	ldr	r3, [r7, #20]
 8002c32:	f023 0320 	bic.w	r3, r3, #32
 8002c36:	617b      	str	r3, [r7, #20]
 8002c38:	683b      	ldr	r3, [r7, #0]
 8002c3a:	689b      	ldr	r3, [r3, #8]
 8002c3c:	011b      	lsls	r3, r3, #4
 8002c3e:	697a      	ldr	r2, [r7, #20]
 8002c40:	4313      	orrs	r3, r2
 8002c42:	617b      	str	r3, [r7, #20]
 8002c44:	687b      	ldr	r3, [r7, #4]
 8002c46:	4a1d      	ldr	r2, [pc, #116]	; (8002cbc <TIM_OC2_SetConfig+0xd0>)
 8002c48:	4293      	cmp	r3, r2
 8002c4a:	d10d      	bne.n	8002c68 <TIM_OC2_SetConfig+0x7c>
 8002c4c:	697b      	ldr	r3, [r7, #20]
 8002c4e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8002c52:	617b      	str	r3, [r7, #20]
 8002c54:	683b      	ldr	r3, [r7, #0]
 8002c56:	68db      	ldr	r3, [r3, #12]
 8002c58:	011b      	lsls	r3, r3, #4
 8002c5a:	697a      	ldr	r2, [r7, #20]
 8002c5c:	4313      	orrs	r3, r2
 8002c5e:	617b      	str	r3, [r7, #20]
 8002c60:	697b      	ldr	r3, [r7, #20]
 8002c62:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8002c66:	617b      	str	r3, [r7, #20]
 8002c68:	687b      	ldr	r3, [r7, #4]
 8002c6a:	4a14      	ldr	r2, [pc, #80]	; (8002cbc <TIM_OC2_SetConfig+0xd0>)
 8002c6c:	4293      	cmp	r3, r2
 8002c6e:	d113      	bne.n	8002c98 <TIM_OC2_SetConfig+0xac>
 8002c70:	693b      	ldr	r3, [r7, #16]
 8002c72:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8002c76:	613b      	str	r3, [r7, #16]
 8002c78:	693b      	ldr	r3, [r7, #16]
 8002c7a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8002c7e:	613b      	str	r3, [r7, #16]
 8002c80:	683b      	ldr	r3, [r7, #0]
 8002c82:	695b      	ldr	r3, [r3, #20]
 8002c84:	009b      	lsls	r3, r3, #2
 8002c86:	693a      	ldr	r2, [r7, #16]
 8002c88:	4313      	orrs	r3, r2
 8002c8a:	613b      	str	r3, [r7, #16]
 8002c8c:	683b      	ldr	r3, [r7, #0]
 8002c8e:	699b      	ldr	r3, [r3, #24]
 8002c90:	009b      	lsls	r3, r3, #2
 8002c92:	693a      	ldr	r2, [r7, #16]
 8002c94:	4313      	orrs	r3, r2
 8002c96:	613b      	str	r3, [r7, #16]
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	693a      	ldr	r2, [r7, #16]
 8002c9c:	605a      	str	r2, [r3, #4]
 8002c9e:	687b      	ldr	r3, [r7, #4]
 8002ca0:	68fa      	ldr	r2, [r7, #12]
 8002ca2:	619a      	str	r2, [r3, #24]
 8002ca4:	683b      	ldr	r3, [r7, #0]
 8002ca6:	685a      	ldr	r2, [r3, #4]
 8002ca8:	687b      	ldr	r3, [r7, #4]
 8002caa:	639a      	str	r2, [r3, #56]	; 0x38
 8002cac:	687b      	ldr	r3, [r7, #4]
 8002cae:	697a      	ldr	r2, [r7, #20]
 8002cb0:	621a      	str	r2, [r3, #32]
 8002cb2:	bf00      	nop
 8002cb4:	371c      	adds	r7, #28
 8002cb6:	46bd      	mov	sp, r7
 8002cb8:	bc80      	pop	{r7}
 8002cba:	4770      	bx	lr
 8002cbc:	40012c00 	.word	0x40012c00

08002cc0 <TIM_OC3_SetConfig>:
 8002cc0:	b480      	push	{r7}
 8002cc2:	b087      	sub	sp, #28
 8002cc4:	af00      	add	r7, sp, #0
 8002cc6:	6078      	str	r0, [r7, #4]
 8002cc8:	6039      	str	r1, [r7, #0]
 8002cca:	687b      	ldr	r3, [r7, #4]
 8002ccc:	6a1b      	ldr	r3, [r3, #32]
 8002cce:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8002cd2:	687b      	ldr	r3, [r7, #4]
 8002cd4:	621a      	str	r2, [r3, #32]
 8002cd6:	687b      	ldr	r3, [r7, #4]
 8002cd8:	6a1b      	ldr	r3, [r3, #32]
 8002cda:	617b      	str	r3, [r7, #20]
 8002cdc:	687b      	ldr	r3, [r7, #4]
 8002cde:	685b      	ldr	r3, [r3, #4]
 8002ce0:	613b      	str	r3, [r7, #16]
 8002ce2:	687b      	ldr	r3, [r7, #4]
 8002ce4:	69db      	ldr	r3, [r3, #28]
 8002ce6:	60fb      	str	r3, [r7, #12]
 8002ce8:	68fb      	ldr	r3, [r7, #12]
 8002cea:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002cee:	60fb      	str	r3, [r7, #12]
 8002cf0:	68fb      	ldr	r3, [r7, #12]
 8002cf2:	f023 0303 	bic.w	r3, r3, #3
 8002cf6:	60fb      	str	r3, [r7, #12]
 8002cf8:	683b      	ldr	r3, [r7, #0]
 8002cfa:	681b      	ldr	r3, [r3, #0]
 8002cfc:	68fa      	ldr	r2, [r7, #12]
 8002cfe:	4313      	orrs	r3, r2
 8002d00:	60fb      	str	r3, [r7, #12]
 8002d02:	697b      	ldr	r3, [r7, #20]
 8002d04:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8002d08:	617b      	str	r3, [r7, #20]
 8002d0a:	683b      	ldr	r3, [r7, #0]
 8002d0c:	689b      	ldr	r3, [r3, #8]
 8002d0e:	021b      	lsls	r3, r3, #8
 8002d10:	697a      	ldr	r2, [r7, #20]
 8002d12:	4313      	orrs	r3, r2
 8002d14:	617b      	str	r3, [r7, #20]
 8002d16:	687b      	ldr	r3, [r7, #4]
 8002d18:	4a1d      	ldr	r2, [pc, #116]	; (8002d90 <TIM_OC3_SetConfig+0xd0>)
 8002d1a:	4293      	cmp	r3, r2
 8002d1c:	d10d      	bne.n	8002d3a <TIM_OC3_SetConfig+0x7a>
 8002d1e:	697b      	ldr	r3, [r7, #20]
 8002d20:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8002d24:	617b      	str	r3, [r7, #20]
 8002d26:	683b      	ldr	r3, [r7, #0]
 8002d28:	68db      	ldr	r3, [r3, #12]
 8002d2a:	021b      	lsls	r3, r3, #8
 8002d2c:	697a      	ldr	r2, [r7, #20]
 8002d2e:	4313      	orrs	r3, r2
 8002d30:	617b      	str	r3, [r7, #20]
 8002d32:	697b      	ldr	r3, [r7, #20]
 8002d34:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8002d38:	617b      	str	r3, [r7, #20]
 8002d3a:	687b      	ldr	r3, [r7, #4]
 8002d3c:	4a14      	ldr	r2, [pc, #80]	; (8002d90 <TIM_OC3_SetConfig+0xd0>)
 8002d3e:	4293      	cmp	r3, r2
 8002d40:	d113      	bne.n	8002d6a <TIM_OC3_SetConfig+0xaa>
 8002d42:	693b      	ldr	r3, [r7, #16]
 8002d44:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002d48:	613b      	str	r3, [r7, #16]
 8002d4a:	693b      	ldr	r3, [r7, #16]
 8002d4c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8002d50:	613b      	str	r3, [r7, #16]
 8002d52:	683b      	ldr	r3, [r7, #0]
 8002d54:	695b      	ldr	r3, [r3, #20]
 8002d56:	011b      	lsls	r3, r3, #4
 8002d58:	693a      	ldr	r2, [r7, #16]
 8002d5a:	4313      	orrs	r3, r2
 8002d5c:	613b      	str	r3, [r7, #16]
 8002d5e:	683b      	ldr	r3, [r7, #0]
 8002d60:	699b      	ldr	r3, [r3, #24]
 8002d62:	011b      	lsls	r3, r3, #4
 8002d64:	693a      	ldr	r2, [r7, #16]
 8002d66:	4313      	orrs	r3, r2
 8002d68:	613b      	str	r3, [r7, #16]
 8002d6a:	687b      	ldr	r3, [r7, #4]
 8002d6c:	693a      	ldr	r2, [r7, #16]
 8002d6e:	605a      	str	r2, [r3, #4]
 8002d70:	687b      	ldr	r3, [r7, #4]
 8002d72:	68fa      	ldr	r2, [r7, #12]
 8002d74:	61da      	str	r2, [r3, #28]
 8002d76:	683b      	ldr	r3, [r7, #0]
 8002d78:	685a      	ldr	r2, [r3, #4]
 8002d7a:	687b      	ldr	r3, [r7, #4]
 8002d7c:	63da      	str	r2, [r3, #60]	; 0x3c
 8002d7e:	687b      	ldr	r3, [r7, #4]
 8002d80:	697a      	ldr	r2, [r7, #20]
 8002d82:	621a      	str	r2, [r3, #32]
 8002d84:	bf00      	nop
 8002d86:	371c      	adds	r7, #28
 8002d88:	46bd      	mov	sp, r7
 8002d8a:	bc80      	pop	{r7}
 8002d8c:	4770      	bx	lr
 8002d8e:	bf00      	nop
 8002d90:	40012c00 	.word	0x40012c00

08002d94 <TIM_OC4_SetConfig>:
 8002d94:	b480      	push	{r7}
 8002d96:	b087      	sub	sp, #28
 8002d98:	af00      	add	r7, sp, #0
 8002d9a:	6078      	str	r0, [r7, #4]
 8002d9c:	6039      	str	r1, [r7, #0]
 8002d9e:	687b      	ldr	r3, [r7, #4]
 8002da0:	6a1b      	ldr	r3, [r3, #32]
 8002da2:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8002da6:	687b      	ldr	r3, [r7, #4]
 8002da8:	621a      	str	r2, [r3, #32]
 8002daa:	687b      	ldr	r3, [r7, #4]
 8002dac:	6a1b      	ldr	r3, [r3, #32]
 8002dae:	613b      	str	r3, [r7, #16]
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	685b      	ldr	r3, [r3, #4]
 8002db4:	617b      	str	r3, [r7, #20]
 8002db6:	687b      	ldr	r3, [r7, #4]
 8002db8:	69db      	ldr	r3, [r3, #28]
 8002dba:	60fb      	str	r3, [r7, #12]
 8002dbc:	68fb      	ldr	r3, [r7, #12]
 8002dbe:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8002dc2:	60fb      	str	r3, [r7, #12]
 8002dc4:	68fb      	ldr	r3, [r7, #12]
 8002dc6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8002dca:	60fb      	str	r3, [r7, #12]
 8002dcc:	683b      	ldr	r3, [r7, #0]
 8002dce:	681b      	ldr	r3, [r3, #0]
 8002dd0:	021b      	lsls	r3, r3, #8
 8002dd2:	68fa      	ldr	r2, [r7, #12]
 8002dd4:	4313      	orrs	r3, r2
 8002dd6:	60fb      	str	r3, [r7, #12]
 8002dd8:	693b      	ldr	r3, [r7, #16]
 8002dda:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8002dde:	613b      	str	r3, [r7, #16]
 8002de0:	683b      	ldr	r3, [r7, #0]
 8002de2:	689b      	ldr	r3, [r3, #8]
 8002de4:	031b      	lsls	r3, r3, #12
 8002de6:	693a      	ldr	r2, [r7, #16]
 8002de8:	4313      	orrs	r3, r2
 8002dea:	613b      	str	r3, [r7, #16]
 8002dec:	687b      	ldr	r3, [r7, #4]
 8002dee:	4a0f      	ldr	r2, [pc, #60]	; (8002e2c <TIM_OC4_SetConfig+0x98>)
 8002df0:	4293      	cmp	r3, r2
 8002df2:	d109      	bne.n	8002e08 <TIM_OC4_SetConfig+0x74>
 8002df4:	697b      	ldr	r3, [r7, #20]
 8002df6:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8002dfa:	617b      	str	r3, [r7, #20]
 8002dfc:	683b      	ldr	r3, [r7, #0]
 8002dfe:	695b      	ldr	r3, [r3, #20]
 8002e00:	019b      	lsls	r3, r3, #6
 8002e02:	697a      	ldr	r2, [r7, #20]
 8002e04:	4313      	orrs	r3, r2
 8002e06:	617b      	str	r3, [r7, #20]
 8002e08:	687b      	ldr	r3, [r7, #4]
 8002e0a:	697a      	ldr	r2, [r7, #20]
 8002e0c:	605a      	str	r2, [r3, #4]
 8002e0e:	687b      	ldr	r3, [r7, #4]
 8002e10:	68fa      	ldr	r2, [r7, #12]
 8002e12:	61da      	str	r2, [r3, #28]
 8002e14:	683b      	ldr	r3, [r7, #0]
 8002e16:	685a      	ldr	r2, [r3, #4]
 8002e18:	687b      	ldr	r3, [r7, #4]
 8002e1a:	641a      	str	r2, [r3, #64]	; 0x40
 8002e1c:	687b      	ldr	r3, [r7, #4]
 8002e1e:	693a      	ldr	r2, [r7, #16]
 8002e20:	621a      	str	r2, [r3, #32]
 8002e22:	bf00      	nop
 8002e24:	371c      	adds	r7, #28
 8002e26:	46bd      	mov	sp, r7
 8002e28:	bc80      	pop	{r7}
 8002e2a:	4770      	bx	lr
 8002e2c:	40012c00 	.word	0x40012c00

08002e30 <TIM_TI1_ConfigInputStage>:
 8002e30:	b480      	push	{r7}
 8002e32:	b087      	sub	sp, #28
 8002e34:	af00      	add	r7, sp, #0
 8002e36:	60f8      	str	r0, [r7, #12]
 8002e38:	60b9      	str	r1, [r7, #8]
 8002e3a:	607a      	str	r2, [r7, #4]
 8002e3c:	68fb      	ldr	r3, [r7, #12]
 8002e3e:	6a1b      	ldr	r3, [r3, #32]
 8002e40:	617b      	str	r3, [r7, #20]
 8002e42:	68fb      	ldr	r3, [r7, #12]
 8002e44:	6a1b      	ldr	r3, [r3, #32]
 8002e46:	f023 0201 	bic.w	r2, r3, #1
 8002e4a:	68fb      	ldr	r3, [r7, #12]
 8002e4c:	621a      	str	r2, [r3, #32]
 8002e4e:	68fb      	ldr	r3, [r7, #12]
 8002e50:	699b      	ldr	r3, [r3, #24]
 8002e52:	613b      	str	r3, [r7, #16]
 8002e54:	693b      	ldr	r3, [r7, #16]
 8002e56:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8002e5a:	613b      	str	r3, [r7, #16]
 8002e5c:	687b      	ldr	r3, [r7, #4]
 8002e5e:	011b      	lsls	r3, r3, #4
 8002e60:	693a      	ldr	r2, [r7, #16]
 8002e62:	4313      	orrs	r3, r2
 8002e64:	613b      	str	r3, [r7, #16]
 8002e66:	697b      	ldr	r3, [r7, #20]
 8002e68:	f023 030a 	bic.w	r3, r3, #10
 8002e6c:	617b      	str	r3, [r7, #20]
 8002e6e:	697a      	ldr	r2, [r7, #20]
 8002e70:	68bb      	ldr	r3, [r7, #8]
 8002e72:	4313      	orrs	r3, r2
 8002e74:	617b      	str	r3, [r7, #20]
 8002e76:	68fb      	ldr	r3, [r7, #12]
 8002e78:	693a      	ldr	r2, [r7, #16]
 8002e7a:	619a      	str	r2, [r3, #24]
 8002e7c:	68fb      	ldr	r3, [r7, #12]
 8002e7e:	697a      	ldr	r2, [r7, #20]
 8002e80:	621a      	str	r2, [r3, #32]
 8002e82:	bf00      	nop
 8002e84:	371c      	adds	r7, #28
 8002e86:	46bd      	mov	sp, r7
 8002e88:	bc80      	pop	{r7}
 8002e8a:	4770      	bx	lr

08002e8c <TIM_TI2_ConfigInputStage>:
 8002e8c:	b480      	push	{r7}
 8002e8e:	b087      	sub	sp, #28
 8002e90:	af00      	add	r7, sp, #0
 8002e92:	60f8      	str	r0, [r7, #12]
 8002e94:	60b9      	str	r1, [r7, #8]
 8002e96:	607a      	str	r2, [r7, #4]
 8002e98:	68fb      	ldr	r3, [r7, #12]
 8002e9a:	6a1b      	ldr	r3, [r3, #32]
 8002e9c:	f023 0210 	bic.w	r2, r3, #16
 8002ea0:	68fb      	ldr	r3, [r7, #12]
 8002ea2:	621a      	str	r2, [r3, #32]
 8002ea4:	68fb      	ldr	r3, [r7, #12]
 8002ea6:	699b      	ldr	r3, [r3, #24]
 8002ea8:	617b      	str	r3, [r7, #20]
 8002eaa:	68fb      	ldr	r3, [r7, #12]
 8002eac:	6a1b      	ldr	r3, [r3, #32]
 8002eae:	613b      	str	r3, [r7, #16]
 8002eb0:	697b      	ldr	r3, [r7, #20]
 8002eb2:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8002eb6:	617b      	str	r3, [r7, #20]
 8002eb8:	687b      	ldr	r3, [r7, #4]
 8002eba:	031b      	lsls	r3, r3, #12
 8002ebc:	697a      	ldr	r2, [r7, #20]
 8002ebe:	4313      	orrs	r3, r2
 8002ec0:	617b      	str	r3, [r7, #20]
 8002ec2:	693b      	ldr	r3, [r7, #16]
 8002ec4:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8002ec8:	613b      	str	r3, [r7, #16]
 8002eca:	68bb      	ldr	r3, [r7, #8]
 8002ecc:	011b      	lsls	r3, r3, #4
 8002ece:	693a      	ldr	r2, [r7, #16]
 8002ed0:	4313      	orrs	r3, r2
 8002ed2:	613b      	str	r3, [r7, #16]
 8002ed4:	68fb      	ldr	r3, [r7, #12]
 8002ed6:	697a      	ldr	r2, [r7, #20]
 8002ed8:	619a      	str	r2, [r3, #24]
 8002eda:	68fb      	ldr	r3, [r7, #12]
 8002edc:	693a      	ldr	r2, [r7, #16]
 8002ede:	621a      	str	r2, [r3, #32]
 8002ee0:	bf00      	nop
 8002ee2:	371c      	adds	r7, #28
 8002ee4:	46bd      	mov	sp, r7
 8002ee6:	bc80      	pop	{r7}
 8002ee8:	4770      	bx	lr

08002eea <TIM_ITRx_SetConfig>:
 8002eea:	b480      	push	{r7}
 8002eec:	b085      	sub	sp, #20
 8002eee:	af00      	add	r7, sp, #0
 8002ef0:	6078      	str	r0, [r7, #4]
 8002ef2:	6039      	str	r1, [r7, #0]
 8002ef4:	687b      	ldr	r3, [r7, #4]
 8002ef6:	689b      	ldr	r3, [r3, #8]
 8002ef8:	60fb      	str	r3, [r7, #12]
 8002efa:	68fb      	ldr	r3, [r7, #12]
 8002efc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002f00:	60fb      	str	r3, [r7, #12]
 8002f02:	683a      	ldr	r2, [r7, #0]
 8002f04:	68fb      	ldr	r3, [r7, #12]
 8002f06:	4313      	orrs	r3, r2
 8002f08:	f043 0307 	orr.w	r3, r3, #7
 8002f0c:	60fb      	str	r3, [r7, #12]
 8002f0e:	687b      	ldr	r3, [r7, #4]
 8002f10:	68fa      	ldr	r2, [r7, #12]
 8002f12:	609a      	str	r2, [r3, #8]
 8002f14:	bf00      	nop
 8002f16:	3714      	adds	r7, #20
 8002f18:	46bd      	mov	sp, r7
 8002f1a:	bc80      	pop	{r7}
 8002f1c:	4770      	bx	lr

08002f1e <TIM_ETR_SetConfig>:
 8002f1e:	b480      	push	{r7}
 8002f20:	b087      	sub	sp, #28
 8002f22:	af00      	add	r7, sp, #0
 8002f24:	60f8      	str	r0, [r7, #12]
 8002f26:	60b9      	str	r1, [r7, #8]
 8002f28:	607a      	str	r2, [r7, #4]
 8002f2a:	603b      	str	r3, [r7, #0]
 8002f2c:	68fb      	ldr	r3, [r7, #12]
 8002f2e:	689b      	ldr	r3, [r3, #8]
 8002f30:	617b      	str	r3, [r7, #20]
 8002f32:	697b      	ldr	r3, [r7, #20]
 8002f34:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002f38:	617b      	str	r3, [r7, #20]
 8002f3a:	683b      	ldr	r3, [r7, #0]
 8002f3c:	021a      	lsls	r2, r3, #8
 8002f3e:	687b      	ldr	r3, [r7, #4]
 8002f40:	431a      	orrs	r2, r3
 8002f42:	68bb      	ldr	r3, [r7, #8]
 8002f44:	4313      	orrs	r3, r2
 8002f46:	697a      	ldr	r2, [r7, #20]
 8002f48:	4313      	orrs	r3, r2
 8002f4a:	617b      	str	r3, [r7, #20]
 8002f4c:	68fb      	ldr	r3, [r7, #12]
 8002f4e:	697a      	ldr	r2, [r7, #20]
 8002f50:	609a      	str	r2, [r3, #8]
 8002f52:	bf00      	nop
 8002f54:	371c      	adds	r7, #28
 8002f56:	46bd      	mov	sp, r7
 8002f58:	bc80      	pop	{r7}
 8002f5a:	4770      	bx	lr

08002f5c <TIM_CCxChannelCmd>:
 8002f5c:	b480      	push	{r7}
 8002f5e:	b087      	sub	sp, #28
 8002f60:	af00      	add	r7, sp, #0
 8002f62:	60f8      	str	r0, [r7, #12]
 8002f64:	60b9      	str	r1, [r7, #8]
 8002f66:	607a      	str	r2, [r7, #4]
 8002f68:	68bb      	ldr	r3, [r7, #8]
 8002f6a:	f003 031f 	and.w	r3, r3, #31
 8002f6e:	2201      	movs	r2, #1
 8002f70:	fa02 f303 	lsl.w	r3, r2, r3
 8002f74:	617b      	str	r3, [r7, #20]
 8002f76:	68fb      	ldr	r3, [r7, #12]
 8002f78:	6a1a      	ldr	r2, [r3, #32]
 8002f7a:	697b      	ldr	r3, [r7, #20]
 8002f7c:	43db      	mvns	r3, r3
 8002f7e:	401a      	ands	r2, r3
 8002f80:	68fb      	ldr	r3, [r7, #12]
 8002f82:	621a      	str	r2, [r3, #32]
 8002f84:	68fb      	ldr	r3, [r7, #12]
 8002f86:	6a1a      	ldr	r2, [r3, #32]
 8002f88:	68bb      	ldr	r3, [r7, #8]
 8002f8a:	f003 031f 	and.w	r3, r3, #31
 8002f8e:	6879      	ldr	r1, [r7, #4]
 8002f90:	fa01 f303 	lsl.w	r3, r1, r3
 8002f94:	431a      	orrs	r2, r3
 8002f96:	68fb      	ldr	r3, [r7, #12]
 8002f98:	621a      	str	r2, [r3, #32]
 8002f9a:	bf00      	nop
 8002f9c:	371c      	adds	r7, #28
 8002f9e:	46bd      	mov	sp, r7
 8002fa0:	bc80      	pop	{r7}
 8002fa2:	4770      	bx	lr

08002fa4 <HAL_TIMEx_MasterConfigSynchronization>:
 8002fa4:	b480      	push	{r7}
 8002fa6:	b085      	sub	sp, #20
 8002fa8:	af00      	add	r7, sp, #0
 8002faa:	6078      	str	r0, [r7, #4]
 8002fac:	6039      	str	r1, [r7, #0]
 8002fae:	687b      	ldr	r3, [r7, #4]
 8002fb0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002fb4:	2b01      	cmp	r3, #1
 8002fb6:	d101      	bne.n	8002fbc <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8002fb8:	2302      	movs	r3, #2
 8002fba:	e046      	b.n	800304a <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8002fbc:	687b      	ldr	r3, [r7, #4]
 8002fbe:	2201      	movs	r2, #1
 8002fc0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002fc4:	687b      	ldr	r3, [r7, #4]
 8002fc6:	2202      	movs	r2, #2
 8002fc8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002fcc:	687b      	ldr	r3, [r7, #4]
 8002fce:	681b      	ldr	r3, [r3, #0]
 8002fd0:	685b      	ldr	r3, [r3, #4]
 8002fd2:	60fb      	str	r3, [r7, #12]
 8002fd4:	687b      	ldr	r3, [r7, #4]
 8002fd6:	681b      	ldr	r3, [r3, #0]
 8002fd8:	689b      	ldr	r3, [r3, #8]
 8002fda:	60bb      	str	r3, [r7, #8]
 8002fdc:	68fb      	ldr	r3, [r7, #12]
 8002fde:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002fe2:	60fb      	str	r3, [r7, #12]
 8002fe4:	683b      	ldr	r3, [r7, #0]
 8002fe6:	681b      	ldr	r3, [r3, #0]
 8002fe8:	68fa      	ldr	r2, [r7, #12]
 8002fea:	4313      	orrs	r3, r2
 8002fec:	60fb      	str	r3, [r7, #12]
 8002fee:	687b      	ldr	r3, [r7, #4]
 8002ff0:	681b      	ldr	r3, [r3, #0]
 8002ff2:	68fa      	ldr	r2, [r7, #12]
 8002ff4:	605a      	str	r2, [r3, #4]
 8002ff6:	687b      	ldr	r3, [r7, #4]
 8002ff8:	681b      	ldr	r3, [r3, #0]
 8002ffa:	4a16      	ldr	r2, [pc, #88]	; (8003054 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8002ffc:	4293      	cmp	r3, r2
 8002ffe:	d00e      	beq.n	800301e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003000:	687b      	ldr	r3, [r7, #4]
 8003002:	681b      	ldr	r3, [r3, #0]
 8003004:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003008:	d009      	beq.n	800301e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 800300a:	687b      	ldr	r3, [r7, #4]
 800300c:	681b      	ldr	r3, [r3, #0]
 800300e:	4a12      	ldr	r2, [pc, #72]	; (8003058 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8003010:	4293      	cmp	r3, r2
 8003012:	d004      	beq.n	800301e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003014:	687b      	ldr	r3, [r7, #4]
 8003016:	681b      	ldr	r3, [r3, #0]
 8003018:	4a10      	ldr	r2, [pc, #64]	; (800305c <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 800301a:	4293      	cmp	r3, r2
 800301c:	d10c      	bne.n	8003038 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 800301e:	68bb      	ldr	r3, [r7, #8]
 8003020:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8003024:	60bb      	str	r3, [r7, #8]
 8003026:	683b      	ldr	r3, [r7, #0]
 8003028:	685b      	ldr	r3, [r3, #4]
 800302a:	68ba      	ldr	r2, [r7, #8]
 800302c:	4313      	orrs	r3, r2
 800302e:	60bb      	str	r3, [r7, #8]
 8003030:	687b      	ldr	r3, [r7, #4]
 8003032:	681b      	ldr	r3, [r3, #0]
 8003034:	68ba      	ldr	r2, [r7, #8]
 8003036:	609a      	str	r2, [r3, #8]
 8003038:	687b      	ldr	r3, [r7, #4]
 800303a:	2201      	movs	r2, #1
 800303c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003040:	687b      	ldr	r3, [r7, #4]
 8003042:	2200      	movs	r2, #0
 8003044:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003048:	2300      	movs	r3, #0
 800304a:	4618      	mov	r0, r3
 800304c:	3714      	adds	r7, #20
 800304e:	46bd      	mov	sp, r7
 8003050:	bc80      	pop	{r7}
 8003052:	4770      	bx	lr
 8003054:	40012c00 	.word	0x40012c00
 8003058:	40000400 	.word	0x40000400
 800305c:	40000800 	.word	0x40000800

08003060 <HAL_TIMEx_CommutCallback>:
 8003060:	b480      	push	{r7}
 8003062:	b083      	sub	sp, #12
 8003064:	af00      	add	r7, sp, #0
 8003066:	6078      	str	r0, [r7, #4]
 8003068:	bf00      	nop
 800306a:	370c      	adds	r7, #12
 800306c:	46bd      	mov	sp, r7
 800306e:	bc80      	pop	{r7}
 8003070:	4770      	bx	lr

08003072 <HAL_TIMEx_BreakCallback>:
 8003072:	b480      	push	{r7}
 8003074:	b083      	sub	sp, #12
 8003076:	af00      	add	r7, sp, #0
 8003078:	6078      	str	r0, [r7, #4]
 800307a:	bf00      	nop
 800307c:	370c      	adds	r7, #12
 800307e:	46bd      	mov	sp, r7
 8003080:	bc80      	pop	{r7}
 8003082:	4770      	bx	lr

08003084 <HAL_UART_Init>:
 8003084:	b580      	push	{r7, lr}
 8003086:	b082      	sub	sp, #8
 8003088:	af00      	add	r7, sp, #0
 800308a:	6078      	str	r0, [r7, #4]
 800308c:	687b      	ldr	r3, [r7, #4]
 800308e:	2b00      	cmp	r3, #0
 8003090:	d101      	bne.n	8003096 <HAL_UART_Init+0x12>
 8003092:	2301      	movs	r3, #1
 8003094:	e03f      	b.n	8003116 <HAL_UART_Init+0x92>
 8003096:	687b      	ldr	r3, [r7, #4]
 8003098:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800309c:	b2db      	uxtb	r3, r3
 800309e:	2b00      	cmp	r3, #0
 80030a0:	d106      	bne.n	80030b0 <HAL_UART_Init+0x2c>
 80030a2:	687b      	ldr	r3, [r7, #4]
 80030a4:	2200      	movs	r2, #0
 80030a6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80030aa:	6878      	ldr	r0, [r7, #4]
 80030ac:	f7fe f878 	bl	80011a0 <HAL_UART_MspInit>
 80030b0:	687b      	ldr	r3, [r7, #4]
 80030b2:	2224      	movs	r2, #36	; 0x24
 80030b4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	681b      	ldr	r3, [r3, #0]
 80030bc:	68da      	ldr	r2, [r3, #12]
 80030be:	687b      	ldr	r3, [r7, #4]
 80030c0:	681b      	ldr	r3, [r3, #0]
 80030c2:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80030c6:	60da      	str	r2, [r3, #12]
 80030c8:	6878      	ldr	r0, [r7, #4]
 80030ca:	f000 f905 	bl	80032d8 <UART_SetConfig>
 80030ce:	687b      	ldr	r3, [r7, #4]
 80030d0:	681b      	ldr	r3, [r3, #0]
 80030d2:	691a      	ldr	r2, [r3, #16]
 80030d4:	687b      	ldr	r3, [r7, #4]
 80030d6:	681b      	ldr	r3, [r3, #0]
 80030d8:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80030dc:	611a      	str	r2, [r3, #16]
 80030de:	687b      	ldr	r3, [r7, #4]
 80030e0:	681b      	ldr	r3, [r3, #0]
 80030e2:	695a      	ldr	r2, [r3, #20]
 80030e4:	687b      	ldr	r3, [r7, #4]
 80030e6:	681b      	ldr	r3, [r3, #0]
 80030e8:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80030ec:	615a      	str	r2, [r3, #20]
 80030ee:	687b      	ldr	r3, [r7, #4]
 80030f0:	681b      	ldr	r3, [r3, #0]
 80030f2:	68da      	ldr	r2, [r3, #12]
 80030f4:	687b      	ldr	r3, [r7, #4]
 80030f6:	681b      	ldr	r3, [r3, #0]
 80030f8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80030fc:	60da      	str	r2, [r3, #12]
 80030fe:	687b      	ldr	r3, [r7, #4]
 8003100:	2200      	movs	r2, #0
 8003102:	641a      	str	r2, [r3, #64]	; 0x40
 8003104:	687b      	ldr	r3, [r7, #4]
 8003106:	2220      	movs	r2, #32
 8003108:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800310c:	687b      	ldr	r3, [r7, #4]
 800310e:	2220      	movs	r2, #32
 8003110:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003114:	2300      	movs	r3, #0
 8003116:	4618      	mov	r0, r3
 8003118:	3708      	adds	r7, #8
 800311a:	46bd      	mov	sp, r7
 800311c:	bd80      	pop	{r7, pc}

0800311e <HAL_UART_Transmit>:
 800311e:	b580      	push	{r7, lr}
 8003120:	b08a      	sub	sp, #40	; 0x28
 8003122:	af02      	add	r7, sp, #8
 8003124:	60f8      	str	r0, [r7, #12]
 8003126:	60b9      	str	r1, [r7, #8]
 8003128:	603b      	str	r3, [r7, #0]
 800312a:	4613      	mov	r3, r2
 800312c:	80fb      	strh	r3, [r7, #6]
 800312e:	2300      	movs	r3, #0
 8003130:	617b      	str	r3, [r7, #20]
 8003132:	68fb      	ldr	r3, [r7, #12]
 8003134:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003138:	b2db      	uxtb	r3, r3
 800313a:	2b20      	cmp	r3, #32
 800313c:	d17c      	bne.n	8003238 <HAL_UART_Transmit+0x11a>
 800313e:	68bb      	ldr	r3, [r7, #8]
 8003140:	2b00      	cmp	r3, #0
 8003142:	d002      	beq.n	800314a <HAL_UART_Transmit+0x2c>
 8003144:	88fb      	ldrh	r3, [r7, #6]
 8003146:	2b00      	cmp	r3, #0
 8003148:	d101      	bne.n	800314e <HAL_UART_Transmit+0x30>
 800314a:	2301      	movs	r3, #1
 800314c:	e075      	b.n	800323a <HAL_UART_Transmit+0x11c>
 800314e:	68fb      	ldr	r3, [r7, #12]
 8003150:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003154:	2b01      	cmp	r3, #1
 8003156:	d101      	bne.n	800315c <HAL_UART_Transmit+0x3e>
 8003158:	2302      	movs	r3, #2
 800315a:	e06e      	b.n	800323a <HAL_UART_Transmit+0x11c>
 800315c:	68fb      	ldr	r3, [r7, #12]
 800315e:	2201      	movs	r2, #1
 8003160:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003164:	68fb      	ldr	r3, [r7, #12]
 8003166:	2200      	movs	r2, #0
 8003168:	641a      	str	r2, [r3, #64]	; 0x40
 800316a:	68fb      	ldr	r3, [r7, #12]
 800316c:	2221      	movs	r2, #33	; 0x21
 800316e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003172:	f7fe f94b 	bl	800140c <HAL_GetTick>
 8003176:	6178      	str	r0, [r7, #20]
 8003178:	68fb      	ldr	r3, [r7, #12]
 800317a:	88fa      	ldrh	r2, [r7, #6]
 800317c:	849a      	strh	r2, [r3, #36]	; 0x24
 800317e:	68fb      	ldr	r3, [r7, #12]
 8003180:	88fa      	ldrh	r2, [r7, #6]
 8003182:	84da      	strh	r2, [r3, #38]	; 0x26
 8003184:	68fb      	ldr	r3, [r7, #12]
 8003186:	689b      	ldr	r3, [r3, #8]
 8003188:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800318c:	d108      	bne.n	80031a0 <HAL_UART_Transmit+0x82>
 800318e:	68fb      	ldr	r3, [r7, #12]
 8003190:	691b      	ldr	r3, [r3, #16]
 8003192:	2b00      	cmp	r3, #0
 8003194:	d104      	bne.n	80031a0 <HAL_UART_Transmit+0x82>
 8003196:	2300      	movs	r3, #0
 8003198:	61fb      	str	r3, [r7, #28]
 800319a:	68bb      	ldr	r3, [r7, #8]
 800319c:	61bb      	str	r3, [r7, #24]
 800319e:	e003      	b.n	80031a8 <HAL_UART_Transmit+0x8a>
 80031a0:	68bb      	ldr	r3, [r7, #8]
 80031a2:	61fb      	str	r3, [r7, #28]
 80031a4:	2300      	movs	r3, #0
 80031a6:	61bb      	str	r3, [r7, #24]
 80031a8:	68fb      	ldr	r3, [r7, #12]
 80031aa:	2200      	movs	r2, #0
 80031ac:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80031b0:	e02a      	b.n	8003208 <HAL_UART_Transmit+0xea>
 80031b2:	683b      	ldr	r3, [r7, #0]
 80031b4:	9300      	str	r3, [sp, #0]
 80031b6:	697b      	ldr	r3, [r7, #20]
 80031b8:	2200      	movs	r2, #0
 80031ba:	2180      	movs	r1, #128	; 0x80
 80031bc:	68f8      	ldr	r0, [r7, #12]
 80031be:	f000 f840 	bl	8003242 <UART_WaitOnFlagUntilTimeout>
 80031c2:	4603      	mov	r3, r0
 80031c4:	2b00      	cmp	r3, #0
 80031c6:	d001      	beq.n	80031cc <HAL_UART_Transmit+0xae>
 80031c8:	2303      	movs	r3, #3
 80031ca:	e036      	b.n	800323a <HAL_UART_Transmit+0x11c>
 80031cc:	69fb      	ldr	r3, [r7, #28]
 80031ce:	2b00      	cmp	r3, #0
 80031d0:	d10b      	bne.n	80031ea <HAL_UART_Transmit+0xcc>
 80031d2:	69bb      	ldr	r3, [r7, #24]
 80031d4:	881b      	ldrh	r3, [r3, #0]
 80031d6:	461a      	mov	r2, r3
 80031d8:	68fb      	ldr	r3, [r7, #12]
 80031da:	681b      	ldr	r3, [r3, #0]
 80031dc:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80031e0:	605a      	str	r2, [r3, #4]
 80031e2:	69bb      	ldr	r3, [r7, #24]
 80031e4:	3302      	adds	r3, #2
 80031e6:	61bb      	str	r3, [r7, #24]
 80031e8:	e007      	b.n	80031fa <HAL_UART_Transmit+0xdc>
 80031ea:	69fb      	ldr	r3, [r7, #28]
 80031ec:	781a      	ldrb	r2, [r3, #0]
 80031ee:	68fb      	ldr	r3, [r7, #12]
 80031f0:	681b      	ldr	r3, [r3, #0]
 80031f2:	605a      	str	r2, [r3, #4]
 80031f4:	69fb      	ldr	r3, [r7, #28]
 80031f6:	3301      	adds	r3, #1
 80031f8:	61fb      	str	r3, [r7, #28]
 80031fa:	68fb      	ldr	r3, [r7, #12]
 80031fc:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80031fe:	b29b      	uxth	r3, r3
 8003200:	3b01      	subs	r3, #1
 8003202:	b29a      	uxth	r2, r3
 8003204:	68fb      	ldr	r3, [r7, #12]
 8003206:	84da      	strh	r2, [r3, #38]	; 0x26
 8003208:	68fb      	ldr	r3, [r7, #12]
 800320a:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800320c:	b29b      	uxth	r3, r3
 800320e:	2b00      	cmp	r3, #0
 8003210:	d1cf      	bne.n	80031b2 <HAL_UART_Transmit+0x94>
 8003212:	683b      	ldr	r3, [r7, #0]
 8003214:	9300      	str	r3, [sp, #0]
 8003216:	697b      	ldr	r3, [r7, #20]
 8003218:	2200      	movs	r2, #0
 800321a:	2140      	movs	r1, #64	; 0x40
 800321c:	68f8      	ldr	r0, [r7, #12]
 800321e:	f000 f810 	bl	8003242 <UART_WaitOnFlagUntilTimeout>
 8003222:	4603      	mov	r3, r0
 8003224:	2b00      	cmp	r3, #0
 8003226:	d001      	beq.n	800322c <HAL_UART_Transmit+0x10e>
 8003228:	2303      	movs	r3, #3
 800322a:	e006      	b.n	800323a <HAL_UART_Transmit+0x11c>
 800322c:	68fb      	ldr	r3, [r7, #12]
 800322e:	2220      	movs	r2, #32
 8003230:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003234:	2300      	movs	r3, #0
 8003236:	e000      	b.n	800323a <HAL_UART_Transmit+0x11c>
 8003238:	2302      	movs	r3, #2
 800323a:	4618      	mov	r0, r3
 800323c:	3720      	adds	r7, #32
 800323e:	46bd      	mov	sp, r7
 8003240:	bd80      	pop	{r7, pc}

08003242 <UART_WaitOnFlagUntilTimeout>:
 8003242:	b580      	push	{r7, lr}
 8003244:	b084      	sub	sp, #16
 8003246:	af00      	add	r7, sp, #0
 8003248:	60f8      	str	r0, [r7, #12]
 800324a:	60b9      	str	r1, [r7, #8]
 800324c:	603b      	str	r3, [r7, #0]
 800324e:	4613      	mov	r3, r2
 8003250:	71fb      	strb	r3, [r7, #7]
 8003252:	e02c      	b.n	80032ae <UART_WaitOnFlagUntilTimeout+0x6c>
 8003254:	69bb      	ldr	r3, [r7, #24]
 8003256:	f1b3 3fff 	cmp.w	r3, #4294967295
 800325a:	d028      	beq.n	80032ae <UART_WaitOnFlagUntilTimeout+0x6c>
 800325c:	69bb      	ldr	r3, [r7, #24]
 800325e:	2b00      	cmp	r3, #0
 8003260:	d007      	beq.n	8003272 <UART_WaitOnFlagUntilTimeout+0x30>
 8003262:	f7fe f8d3 	bl	800140c <HAL_GetTick>
 8003266:	4602      	mov	r2, r0
 8003268:	683b      	ldr	r3, [r7, #0]
 800326a:	1ad3      	subs	r3, r2, r3
 800326c:	69ba      	ldr	r2, [r7, #24]
 800326e:	429a      	cmp	r2, r3
 8003270:	d21d      	bcs.n	80032ae <UART_WaitOnFlagUntilTimeout+0x6c>
 8003272:	68fb      	ldr	r3, [r7, #12]
 8003274:	681b      	ldr	r3, [r3, #0]
 8003276:	68da      	ldr	r2, [r3, #12]
 8003278:	68fb      	ldr	r3, [r7, #12]
 800327a:	681b      	ldr	r3, [r3, #0]
 800327c:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8003280:	60da      	str	r2, [r3, #12]
 8003282:	68fb      	ldr	r3, [r7, #12]
 8003284:	681b      	ldr	r3, [r3, #0]
 8003286:	695a      	ldr	r2, [r3, #20]
 8003288:	68fb      	ldr	r3, [r7, #12]
 800328a:	681b      	ldr	r3, [r3, #0]
 800328c:	f022 0201 	bic.w	r2, r2, #1
 8003290:	615a      	str	r2, [r3, #20]
 8003292:	68fb      	ldr	r3, [r7, #12]
 8003294:	2220      	movs	r2, #32
 8003296:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800329a:	68fb      	ldr	r3, [r7, #12]
 800329c:	2220      	movs	r2, #32
 800329e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80032a2:	68fb      	ldr	r3, [r7, #12]
 80032a4:	2200      	movs	r2, #0
 80032a6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80032aa:	2303      	movs	r3, #3
 80032ac:	e00f      	b.n	80032ce <UART_WaitOnFlagUntilTimeout+0x8c>
 80032ae:	68fb      	ldr	r3, [r7, #12]
 80032b0:	681b      	ldr	r3, [r3, #0]
 80032b2:	681a      	ldr	r2, [r3, #0]
 80032b4:	68bb      	ldr	r3, [r7, #8]
 80032b6:	4013      	ands	r3, r2
 80032b8:	68ba      	ldr	r2, [r7, #8]
 80032ba:	429a      	cmp	r2, r3
 80032bc:	bf0c      	ite	eq
 80032be:	2301      	moveq	r3, #1
 80032c0:	2300      	movne	r3, #0
 80032c2:	b2db      	uxtb	r3, r3
 80032c4:	461a      	mov	r2, r3
 80032c6:	79fb      	ldrb	r3, [r7, #7]
 80032c8:	429a      	cmp	r2, r3
 80032ca:	d0c3      	beq.n	8003254 <UART_WaitOnFlagUntilTimeout+0x12>
 80032cc:	2300      	movs	r3, #0
 80032ce:	4618      	mov	r0, r3
 80032d0:	3710      	adds	r7, #16
 80032d2:	46bd      	mov	sp, r7
 80032d4:	bd80      	pop	{r7, pc}
	...

080032d8 <UART_SetConfig>:
 80032d8:	b580      	push	{r7, lr}
 80032da:	b084      	sub	sp, #16
 80032dc:	af00      	add	r7, sp, #0
 80032de:	6078      	str	r0, [r7, #4]
 80032e0:	687b      	ldr	r3, [r7, #4]
 80032e2:	681b      	ldr	r3, [r3, #0]
 80032e4:	691b      	ldr	r3, [r3, #16]
 80032e6:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 80032ea:	687b      	ldr	r3, [r7, #4]
 80032ec:	68da      	ldr	r2, [r3, #12]
 80032ee:	687b      	ldr	r3, [r7, #4]
 80032f0:	681b      	ldr	r3, [r3, #0]
 80032f2:	430a      	orrs	r2, r1
 80032f4:	611a      	str	r2, [r3, #16]
 80032f6:	687b      	ldr	r3, [r7, #4]
 80032f8:	689a      	ldr	r2, [r3, #8]
 80032fa:	687b      	ldr	r3, [r7, #4]
 80032fc:	691b      	ldr	r3, [r3, #16]
 80032fe:	431a      	orrs	r2, r3
 8003300:	687b      	ldr	r3, [r7, #4]
 8003302:	695b      	ldr	r3, [r3, #20]
 8003304:	4313      	orrs	r3, r2
 8003306:	60bb      	str	r3, [r7, #8]
 8003308:	687b      	ldr	r3, [r7, #4]
 800330a:	681b      	ldr	r3, [r3, #0]
 800330c:	68db      	ldr	r3, [r3, #12]
 800330e:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8003312:	f023 030c 	bic.w	r3, r3, #12
 8003316:	687a      	ldr	r2, [r7, #4]
 8003318:	6812      	ldr	r2, [r2, #0]
 800331a:	68b9      	ldr	r1, [r7, #8]
 800331c:	430b      	orrs	r3, r1
 800331e:	60d3      	str	r3, [r2, #12]
 8003320:	687b      	ldr	r3, [r7, #4]
 8003322:	681b      	ldr	r3, [r3, #0]
 8003324:	695b      	ldr	r3, [r3, #20]
 8003326:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 800332a:	687b      	ldr	r3, [r7, #4]
 800332c:	699a      	ldr	r2, [r3, #24]
 800332e:	687b      	ldr	r3, [r7, #4]
 8003330:	681b      	ldr	r3, [r3, #0]
 8003332:	430a      	orrs	r2, r1
 8003334:	615a      	str	r2, [r3, #20]
 8003336:	687b      	ldr	r3, [r7, #4]
 8003338:	681b      	ldr	r3, [r3, #0]
 800333a:	4a2c      	ldr	r2, [pc, #176]	; (80033ec <UART_SetConfig+0x114>)
 800333c:	4293      	cmp	r3, r2
 800333e:	d103      	bne.n	8003348 <UART_SetConfig+0x70>
 8003340:	f7fe ff18 	bl	8002174 <HAL_RCC_GetPCLK2Freq>
 8003344:	60f8      	str	r0, [r7, #12]
 8003346:	e002      	b.n	800334e <UART_SetConfig+0x76>
 8003348:	f7fe ff00 	bl	800214c <HAL_RCC_GetPCLK1Freq>
 800334c:	60f8      	str	r0, [r7, #12]
 800334e:	68fa      	ldr	r2, [r7, #12]
 8003350:	4613      	mov	r3, r2
 8003352:	009b      	lsls	r3, r3, #2
 8003354:	4413      	add	r3, r2
 8003356:	009a      	lsls	r2, r3, #2
 8003358:	441a      	add	r2, r3
 800335a:	687b      	ldr	r3, [r7, #4]
 800335c:	685b      	ldr	r3, [r3, #4]
 800335e:	009b      	lsls	r3, r3, #2
 8003360:	fbb2 f3f3 	udiv	r3, r2, r3
 8003364:	4a22      	ldr	r2, [pc, #136]	; (80033f0 <UART_SetConfig+0x118>)
 8003366:	fba2 2303 	umull	r2, r3, r2, r3
 800336a:	095b      	lsrs	r3, r3, #5
 800336c:	0119      	lsls	r1, r3, #4
 800336e:	68fa      	ldr	r2, [r7, #12]
 8003370:	4613      	mov	r3, r2
 8003372:	009b      	lsls	r3, r3, #2
 8003374:	4413      	add	r3, r2
 8003376:	009a      	lsls	r2, r3, #2
 8003378:	441a      	add	r2, r3
 800337a:	687b      	ldr	r3, [r7, #4]
 800337c:	685b      	ldr	r3, [r3, #4]
 800337e:	009b      	lsls	r3, r3, #2
 8003380:	fbb2 f2f3 	udiv	r2, r2, r3
 8003384:	4b1a      	ldr	r3, [pc, #104]	; (80033f0 <UART_SetConfig+0x118>)
 8003386:	fba3 0302 	umull	r0, r3, r3, r2
 800338a:	095b      	lsrs	r3, r3, #5
 800338c:	2064      	movs	r0, #100	; 0x64
 800338e:	fb00 f303 	mul.w	r3, r0, r3
 8003392:	1ad3      	subs	r3, r2, r3
 8003394:	011b      	lsls	r3, r3, #4
 8003396:	3332      	adds	r3, #50	; 0x32
 8003398:	4a15      	ldr	r2, [pc, #84]	; (80033f0 <UART_SetConfig+0x118>)
 800339a:	fba2 2303 	umull	r2, r3, r2, r3
 800339e:	095b      	lsrs	r3, r3, #5
 80033a0:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80033a4:	4419      	add	r1, r3
 80033a6:	68fa      	ldr	r2, [r7, #12]
 80033a8:	4613      	mov	r3, r2
 80033aa:	009b      	lsls	r3, r3, #2
 80033ac:	4413      	add	r3, r2
 80033ae:	009a      	lsls	r2, r3, #2
 80033b0:	441a      	add	r2, r3
 80033b2:	687b      	ldr	r3, [r7, #4]
 80033b4:	685b      	ldr	r3, [r3, #4]
 80033b6:	009b      	lsls	r3, r3, #2
 80033b8:	fbb2 f2f3 	udiv	r2, r2, r3
 80033bc:	4b0c      	ldr	r3, [pc, #48]	; (80033f0 <UART_SetConfig+0x118>)
 80033be:	fba3 0302 	umull	r0, r3, r3, r2
 80033c2:	095b      	lsrs	r3, r3, #5
 80033c4:	2064      	movs	r0, #100	; 0x64
 80033c6:	fb00 f303 	mul.w	r3, r0, r3
 80033ca:	1ad3      	subs	r3, r2, r3
 80033cc:	011b      	lsls	r3, r3, #4
 80033ce:	3332      	adds	r3, #50	; 0x32
 80033d0:	4a07      	ldr	r2, [pc, #28]	; (80033f0 <UART_SetConfig+0x118>)
 80033d2:	fba2 2303 	umull	r2, r3, r2, r3
 80033d6:	095b      	lsrs	r3, r3, #5
 80033d8:	f003 020f 	and.w	r2, r3, #15
 80033dc:	687b      	ldr	r3, [r7, #4]
 80033de:	681b      	ldr	r3, [r3, #0]
 80033e0:	440a      	add	r2, r1
 80033e2:	609a      	str	r2, [r3, #8]
 80033e4:	bf00      	nop
 80033e6:	3710      	adds	r7, #16
 80033e8:	46bd      	mov	sp, r7
 80033ea:	bd80      	pop	{r7, pc}
 80033ec:	40013800 	.word	0x40013800
 80033f0:	51eb851f 	.word	0x51eb851f

080033f4 <__errno>:
 80033f4:	4b01      	ldr	r3, [pc, #4]	; (80033fc <__errno+0x8>)
 80033f6:	6818      	ldr	r0, [r3, #0]
 80033f8:	4770      	bx	lr
 80033fa:	bf00      	nop
 80033fc:	20000058 	.word	0x20000058

08003400 <__libc_init_array>:
 8003400:	b570      	push	{r4, r5, r6, lr}
 8003402:	2600      	movs	r6, #0
 8003404:	4d0c      	ldr	r5, [pc, #48]	; (8003438 <__libc_init_array+0x38>)
 8003406:	4c0d      	ldr	r4, [pc, #52]	; (800343c <__libc_init_array+0x3c>)
 8003408:	1b64      	subs	r4, r4, r5
 800340a:	10a4      	asrs	r4, r4, #2
 800340c:	42a6      	cmp	r6, r4
 800340e:	d109      	bne.n	8003424 <__libc_init_array+0x24>
 8003410:	f000 fc9c 	bl	8003d4c <_init>
 8003414:	2600      	movs	r6, #0
 8003416:	4d0a      	ldr	r5, [pc, #40]	; (8003440 <__libc_init_array+0x40>)
 8003418:	4c0a      	ldr	r4, [pc, #40]	; (8003444 <__libc_init_array+0x44>)
 800341a:	1b64      	subs	r4, r4, r5
 800341c:	10a4      	asrs	r4, r4, #2
 800341e:	42a6      	cmp	r6, r4
 8003420:	d105      	bne.n	800342e <__libc_init_array+0x2e>
 8003422:	bd70      	pop	{r4, r5, r6, pc}
 8003424:	f855 3b04 	ldr.w	r3, [r5], #4
 8003428:	4798      	blx	r3
 800342a:	3601      	adds	r6, #1
 800342c:	e7ee      	b.n	800340c <__libc_init_array+0xc>
 800342e:	f855 3b04 	ldr.w	r3, [r5], #4
 8003432:	4798      	blx	r3
 8003434:	3601      	adds	r6, #1
 8003436:	e7f2      	b.n	800341e <__libc_init_array+0x1e>
 8003438:	08003e50 	.word	0x08003e50
 800343c:	08003e50 	.word	0x08003e50
 8003440:	08003e50 	.word	0x08003e50
 8003444:	08003e54 	.word	0x08003e54

08003448 <memset>:
 8003448:	4603      	mov	r3, r0
 800344a:	4402      	add	r2, r0
 800344c:	4293      	cmp	r3, r2
 800344e:	d100      	bne.n	8003452 <memset+0xa>
 8003450:	4770      	bx	lr
 8003452:	f803 1b01 	strb.w	r1, [r3], #1
 8003456:	e7f9      	b.n	800344c <memset+0x4>

08003458 <siprintf>:
 8003458:	b40e      	push	{r1, r2, r3}
 800345a:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800345e:	b500      	push	{lr}
 8003460:	b09c      	sub	sp, #112	; 0x70
 8003462:	ab1d      	add	r3, sp, #116	; 0x74
 8003464:	9002      	str	r0, [sp, #8]
 8003466:	9006      	str	r0, [sp, #24]
 8003468:	9107      	str	r1, [sp, #28]
 800346a:	9104      	str	r1, [sp, #16]
 800346c:	4808      	ldr	r0, [pc, #32]	; (8003490 <siprintf+0x38>)
 800346e:	4909      	ldr	r1, [pc, #36]	; (8003494 <siprintf+0x3c>)
 8003470:	f853 2b04 	ldr.w	r2, [r3], #4
 8003474:	9105      	str	r1, [sp, #20]
 8003476:	6800      	ldr	r0, [r0, #0]
 8003478:	a902      	add	r1, sp, #8
 800347a:	9301      	str	r3, [sp, #4]
 800347c:	f000 f868 	bl	8003550 <_svfiprintf_r>
 8003480:	2200      	movs	r2, #0
 8003482:	9b02      	ldr	r3, [sp, #8]
 8003484:	701a      	strb	r2, [r3, #0]
 8003486:	b01c      	add	sp, #112	; 0x70
 8003488:	f85d eb04 	ldr.w	lr, [sp], #4
 800348c:	b003      	add	sp, #12
 800348e:	4770      	bx	lr
 8003490:	20000058 	.word	0x20000058
 8003494:	ffff0208 	.word	0xffff0208

08003498 <__ssputs_r>:
 8003498:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800349c:	688e      	ldr	r6, [r1, #8]
 800349e:	4682      	mov	sl, r0
 80034a0:	429e      	cmp	r6, r3
 80034a2:	460c      	mov	r4, r1
 80034a4:	4690      	mov	r8, r2
 80034a6:	461f      	mov	r7, r3
 80034a8:	d838      	bhi.n	800351c <__ssputs_r+0x84>
 80034aa:	898a      	ldrh	r2, [r1, #12]
 80034ac:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80034b0:	d032      	beq.n	8003518 <__ssputs_r+0x80>
 80034b2:	6825      	ldr	r5, [r4, #0]
 80034b4:	6909      	ldr	r1, [r1, #16]
 80034b6:	3301      	adds	r3, #1
 80034b8:	eba5 0901 	sub.w	r9, r5, r1
 80034bc:	6965      	ldr	r5, [r4, #20]
 80034be:	444b      	add	r3, r9
 80034c0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80034c4:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80034c8:	106d      	asrs	r5, r5, #1
 80034ca:	429d      	cmp	r5, r3
 80034cc:	bf38      	it	cc
 80034ce:	461d      	movcc	r5, r3
 80034d0:	0553      	lsls	r3, r2, #21
 80034d2:	d531      	bpl.n	8003538 <__ssputs_r+0xa0>
 80034d4:	4629      	mov	r1, r5
 80034d6:	f000 fb6f 	bl	8003bb8 <_malloc_r>
 80034da:	4606      	mov	r6, r0
 80034dc:	b950      	cbnz	r0, 80034f4 <__ssputs_r+0x5c>
 80034de:	230c      	movs	r3, #12
 80034e0:	f04f 30ff 	mov.w	r0, #4294967295
 80034e4:	f8ca 3000 	str.w	r3, [sl]
 80034e8:	89a3      	ldrh	r3, [r4, #12]
 80034ea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80034ee:	81a3      	strh	r3, [r4, #12]
 80034f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80034f4:	464a      	mov	r2, r9
 80034f6:	6921      	ldr	r1, [r4, #16]
 80034f8:	f000 face 	bl	8003a98 <memcpy>
 80034fc:	89a3      	ldrh	r3, [r4, #12]
 80034fe:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8003502:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003506:	81a3      	strh	r3, [r4, #12]
 8003508:	6126      	str	r6, [r4, #16]
 800350a:	444e      	add	r6, r9
 800350c:	6026      	str	r6, [r4, #0]
 800350e:	463e      	mov	r6, r7
 8003510:	6165      	str	r5, [r4, #20]
 8003512:	eba5 0509 	sub.w	r5, r5, r9
 8003516:	60a5      	str	r5, [r4, #8]
 8003518:	42be      	cmp	r6, r7
 800351a:	d900      	bls.n	800351e <__ssputs_r+0x86>
 800351c:	463e      	mov	r6, r7
 800351e:	4632      	mov	r2, r6
 8003520:	4641      	mov	r1, r8
 8003522:	6820      	ldr	r0, [r4, #0]
 8003524:	f000 fac6 	bl	8003ab4 <memmove>
 8003528:	68a3      	ldr	r3, [r4, #8]
 800352a:	2000      	movs	r0, #0
 800352c:	1b9b      	subs	r3, r3, r6
 800352e:	60a3      	str	r3, [r4, #8]
 8003530:	6823      	ldr	r3, [r4, #0]
 8003532:	4433      	add	r3, r6
 8003534:	6023      	str	r3, [r4, #0]
 8003536:	e7db      	b.n	80034f0 <__ssputs_r+0x58>
 8003538:	462a      	mov	r2, r5
 800353a:	f000 fbb1 	bl	8003ca0 <_realloc_r>
 800353e:	4606      	mov	r6, r0
 8003540:	2800      	cmp	r0, #0
 8003542:	d1e1      	bne.n	8003508 <__ssputs_r+0x70>
 8003544:	4650      	mov	r0, sl
 8003546:	6921      	ldr	r1, [r4, #16]
 8003548:	f000 face 	bl	8003ae8 <_free_r>
 800354c:	e7c7      	b.n	80034de <__ssputs_r+0x46>
	...

08003550 <_svfiprintf_r>:
 8003550:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003554:	4698      	mov	r8, r3
 8003556:	898b      	ldrh	r3, [r1, #12]
 8003558:	4607      	mov	r7, r0
 800355a:	061b      	lsls	r3, r3, #24
 800355c:	460d      	mov	r5, r1
 800355e:	4614      	mov	r4, r2
 8003560:	b09d      	sub	sp, #116	; 0x74
 8003562:	d50e      	bpl.n	8003582 <_svfiprintf_r+0x32>
 8003564:	690b      	ldr	r3, [r1, #16]
 8003566:	b963      	cbnz	r3, 8003582 <_svfiprintf_r+0x32>
 8003568:	2140      	movs	r1, #64	; 0x40
 800356a:	f000 fb25 	bl	8003bb8 <_malloc_r>
 800356e:	6028      	str	r0, [r5, #0]
 8003570:	6128      	str	r0, [r5, #16]
 8003572:	b920      	cbnz	r0, 800357e <_svfiprintf_r+0x2e>
 8003574:	230c      	movs	r3, #12
 8003576:	603b      	str	r3, [r7, #0]
 8003578:	f04f 30ff 	mov.w	r0, #4294967295
 800357c:	e0d1      	b.n	8003722 <_svfiprintf_r+0x1d2>
 800357e:	2340      	movs	r3, #64	; 0x40
 8003580:	616b      	str	r3, [r5, #20]
 8003582:	2300      	movs	r3, #0
 8003584:	9309      	str	r3, [sp, #36]	; 0x24
 8003586:	2320      	movs	r3, #32
 8003588:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800358c:	2330      	movs	r3, #48	; 0x30
 800358e:	f04f 0901 	mov.w	r9, #1
 8003592:	f8cd 800c 	str.w	r8, [sp, #12]
 8003596:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 800373c <_svfiprintf_r+0x1ec>
 800359a:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800359e:	4623      	mov	r3, r4
 80035a0:	469a      	mov	sl, r3
 80035a2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80035a6:	b10a      	cbz	r2, 80035ac <_svfiprintf_r+0x5c>
 80035a8:	2a25      	cmp	r2, #37	; 0x25
 80035aa:	d1f9      	bne.n	80035a0 <_svfiprintf_r+0x50>
 80035ac:	ebba 0b04 	subs.w	fp, sl, r4
 80035b0:	d00b      	beq.n	80035ca <_svfiprintf_r+0x7a>
 80035b2:	465b      	mov	r3, fp
 80035b4:	4622      	mov	r2, r4
 80035b6:	4629      	mov	r1, r5
 80035b8:	4638      	mov	r0, r7
 80035ba:	f7ff ff6d 	bl	8003498 <__ssputs_r>
 80035be:	3001      	adds	r0, #1
 80035c0:	f000 80aa 	beq.w	8003718 <_svfiprintf_r+0x1c8>
 80035c4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80035c6:	445a      	add	r2, fp
 80035c8:	9209      	str	r2, [sp, #36]	; 0x24
 80035ca:	f89a 3000 	ldrb.w	r3, [sl]
 80035ce:	2b00      	cmp	r3, #0
 80035d0:	f000 80a2 	beq.w	8003718 <_svfiprintf_r+0x1c8>
 80035d4:	2300      	movs	r3, #0
 80035d6:	f04f 32ff 	mov.w	r2, #4294967295
 80035da:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80035de:	f10a 0a01 	add.w	sl, sl, #1
 80035e2:	9304      	str	r3, [sp, #16]
 80035e4:	9307      	str	r3, [sp, #28]
 80035e6:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80035ea:	931a      	str	r3, [sp, #104]	; 0x68
 80035ec:	4654      	mov	r4, sl
 80035ee:	2205      	movs	r2, #5
 80035f0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80035f4:	4851      	ldr	r0, [pc, #324]	; (800373c <_svfiprintf_r+0x1ec>)
 80035f6:	f000 fa41 	bl	8003a7c <memchr>
 80035fa:	9a04      	ldr	r2, [sp, #16]
 80035fc:	b9d8      	cbnz	r0, 8003636 <_svfiprintf_r+0xe6>
 80035fe:	06d0      	lsls	r0, r2, #27
 8003600:	bf44      	itt	mi
 8003602:	2320      	movmi	r3, #32
 8003604:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003608:	0711      	lsls	r1, r2, #28
 800360a:	bf44      	itt	mi
 800360c:	232b      	movmi	r3, #43	; 0x2b
 800360e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003612:	f89a 3000 	ldrb.w	r3, [sl]
 8003616:	2b2a      	cmp	r3, #42	; 0x2a
 8003618:	d015      	beq.n	8003646 <_svfiprintf_r+0xf6>
 800361a:	4654      	mov	r4, sl
 800361c:	2000      	movs	r0, #0
 800361e:	f04f 0c0a 	mov.w	ip, #10
 8003622:	9a07      	ldr	r2, [sp, #28]
 8003624:	4621      	mov	r1, r4
 8003626:	f811 3b01 	ldrb.w	r3, [r1], #1
 800362a:	3b30      	subs	r3, #48	; 0x30
 800362c:	2b09      	cmp	r3, #9
 800362e:	d94e      	bls.n	80036ce <_svfiprintf_r+0x17e>
 8003630:	b1b0      	cbz	r0, 8003660 <_svfiprintf_r+0x110>
 8003632:	9207      	str	r2, [sp, #28]
 8003634:	e014      	b.n	8003660 <_svfiprintf_r+0x110>
 8003636:	eba0 0308 	sub.w	r3, r0, r8
 800363a:	fa09 f303 	lsl.w	r3, r9, r3
 800363e:	4313      	orrs	r3, r2
 8003640:	46a2      	mov	sl, r4
 8003642:	9304      	str	r3, [sp, #16]
 8003644:	e7d2      	b.n	80035ec <_svfiprintf_r+0x9c>
 8003646:	9b03      	ldr	r3, [sp, #12]
 8003648:	1d19      	adds	r1, r3, #4
 800364a:	681b      	ldr	r3, [r3, #0]
 800364c:	9103      	str	r1, [sp, #12]
 800364e:	2b00      	cmp	r3, #0
 8003650:	bfbb      	ittet	lt
 8003652:	425b      	neglt	r3, r3
 8003654:	f042 0202 	orrlt.w	r2, r2, #2
 8003658:	9307      	strge	r3, [sp, #28]
 800365a:	9307      	strlt	r3, [sp, #28]
 800365c:	bfb8      	it	lt
 800365e:	9204      	strlt	r2, [sp, #16]
 8003660:	7823      	ldrb	r3, [r4, #0]
 8003662:	2b2e      	cmp	r3, #46	; 0x2e
 8003664:	d10c      	bne.n	8003680 <_svfiprintf_r+0x130>
 8003666:	7863      	ldrb	r3, [r4, #1]
 8003668:	2b2a      	cmp	r3, #42	; 0x2a
 800366a:	d135      	bne.n	80036d8 <_svfiprintf_r+0x188>
 800366c:	9b03      	ldr	r3, [sp, #12]
 800366e:	3402      	adds	r4, #2
 8003670:	1d1a      	adds	r2, r3, #4
 8003672:	681b      	ldr	r3, [r3, #0]
 8003674:	9203      	str	r2, [sp, #12]
 8003676:	2b00      	cmp	r3, #0
 8003678:	bfb8      	it	lt
 800367a:	f04f 33ff 	movlt.w	r3, #4294967295
 800367e:	9305      	str	r3, [sp, #20]
 8003680:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 8003740 <_svfiprintf_r+0x1f0>
 8003684:	2203      	movs	r2, #3
 8003686:	4650      	mov	r0, sl
 8003688:	7821      	ldrb	r1, [r4, #0]
 800368a:	f000 f9f7 	bl	8003a7c <memchr>
 800368e:	b140      	cbz	r0, 80036a2 <_svfiprintf_r+0x152>
 8003690:	2340      	movs	r3, #64	; 0x40
 8003692:	eba0 000a 	sub.w	r0, r0, sl
 8003696:	fa03 f000 	lsl.w	r0, r3, r0
 800369a:	9b04      	ldr	r3, [sp, #16]
 800369c:	3401      	adds	r4, #1
 800369e:	4303      	orrs	r3, r0
 80036a0:	9304      	str	r3, [sp, #16]
 80036a2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80036a6:	2206      	movs	r2, #6
 80036a8:	4826      	ldr	r0, [pc, #152]	; (8003744 <_svfiprintf_r+0x1f4>)
 80036aa:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80036ae:	f000 f9e5 	bl	8003a7c <memchr>
 80036b2:	2800      	cmp	r0, #0
 80036b4:	d038      	beq.n	8003728 <_svfiprintf_r+0x1d8>
 80036b6:	4b24      	ldr	r3, [pc, #144]	; (8003748 <_svfiprintf_r+0x1f8>)
 80036b8:	bb1b      	cbnz	r3, 8003702 <_svfiprintf_r+0x1b2>
 80036ba:	9b03      	ldr	r3, [sp, #12]
 80036bc:	3307      	adds	r3, #7
 80036be:	f023 0307 	bic.w	r3, r3, #7
 80036c2:	3308      	adds	r3, #8
 80036c4:	9303      	str	r3, [sp, #12]
 80036c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80036c8:	4433      	add	r3, r6
 80036ca:	9309      	str	r3, [sp, #36]	; 0x24
 80036cc:	e767      	b.n	800359e <_svfiprintf_r+0x4e>
 80036ce:	460c      	mov	r4, r1
 80036d0:	2001      	movs	r0, #1
 80036d2:	fb0c 3202 	mla	r2, ip, r2, r3
 80036d6:	e7a5      	b.n	8003624 <_svfiprintf_r+0xd4>
 80036d8:	2300      	movs	r3, #0
 80036da:	f04f 0c0a 	mov.w	ip, #10
 80036de:	4619      	mov	r1, r3
 80036e0:	3401      	adds	r4, #1
 80036e2:	9305      	str	r3, [sp, #20]
 80036e4:	4620      	mov	r0, r4
 80036e6:	f810 2b01 	ldrb.w	r2, [r0], #1
 80036ea:	3a30      	subs	r2, #48	; 0x30
 80036ec:	2a09      	cmp	r2, #9
 80036ee:	d903      	bls.n	80036f8 <_svfiprintf_r+0x1a8>
 80036f0:	2b00      	cmp	r3, #0
 80036f2:	d0c5      	beq.n	8003680 <_svfiprintf_r+0x130>
 80036f4:	9105      	str	r1, [sp, #20]
 80036f6:	e7c3      	b.n	8003680 <_svfiprintf_r+0x130>
 80036f8:	4604      	mov	r4, r0
 80036fa:	2301      	movs	r3, #1
 80036fc:	fb0c 2101 	mla	r1, ip, r1, r2
 8003700:	e7f0      	b.n	80036e4 <_svfiprintf_r+0x194>
 8003702:	ab03      	add	r3, sp, #12
 8003704:	9300      	str	r3, [sp, #0]
 8003706:	462a      	mov	r2, r5
 8003708:	4638      	mov	r0, r7
 800370a:	4b10      	ldr	r3, [pc, #64]	; (800374c <_svfiprintf_r+0x1fc>)
 800370c:	a904      	add	r1, sp, #16
 800370e:	f3af 8000 	nop.w
 8003712:	1c42      	adds	r2, r0, #1
 8003714:	4606      	mov	r6, r0
 8003716:	d1d6      	bne.n	80036c6 <_svfiprintf_r+0x176>
 8003718:	89ab      	ldrh	r3, [r5, #12]
 800371a:	065b      	lsls	r3, r3, #25
 800371c:	f53f af2c 	bmi.w	8003578 <_svfiprintf_r+0x28>
 8003720:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003722:	b01d      	add	sp, #116	; 0x74
 8003724:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003728:	ab03      	add	r3, sp, #12
 800372a:	9300      	str	r3, [sp, #0]
 800372c:	462a      	mov	r2, r5
 800372e:	4638      	mov	r0, r7
 8003730:	4b06      	ldr	r3, [pc, #24]	; (800374c <_svfiprintf_r+0x1fc>)
 8003732:	a904      	add	r1, sp, #16
 8003734:	f000 f87c 	bl	8003830 <_printf_i>
 8003738:	e7eb      	b.n	8003712 <_svfiprintf_r+0x1c2>
 800373a:	bf00      	nop
 800373c:	08003e1c 	.word	0x08003e1c
 8003740:	08003e22 	.word	0x08003e22
 8003744:	08003e26 	.word	0x08003e26
 8003748:	00000000 	.word	0x00000000
 800374c:	08003499 	.word	0x08003499

08003750 <_printf_common>:
 8003750:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003754:	4616      	mov	r6, r2
 8003756:	4699      	mov	r9, r3
 8003758:	688a      	ldr	r2, [r1, #8]
 800375a:	690b      	ldr	r3, [r1, #16]
 800375c:	4607      	mov	r7, r0
 800375e:	4293      	cmp	r3, r2
 8003760:	bfb8      	it	lt
 8003762:	4613      	movlt	r3, r2
 8003764:	6033      	str	r3, [r6, #0]
 8003766:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800376a:	460c      	mov	r4, r1
 800376c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8003770:	b10a      	cbz	r2, 8003776 <_printf_common+0x26>
 8003772:	3301      	adds	r3, #1
 8003774:	6033      	str	r3, [r6, #0]
 8003776:	6823      	ldr	r3, [r4, #0]
 8003778:	0699      	lsls	r1, r3, #26
 800377a:	bf42      	ittt	mi
 800377c:	6833      	ldrmi	r3, [r6, #0]
 800377e:	3302      	addmi	r3, #2
 8003780:	6033      	strmi	r3, [r6, #0]
 8003782:	6825      	ldr	r5, [r4, #0]
 8003784:	f015 0506 	ands.w	r5, r5, #6
 8003788:	d106      	bne.n	8003798 <_printf_common+0x48>
 800378a:	f104 0a19 	add.w	sl, r4, #25
 800378e:	68e3      	ldr	r3, [r4, #12]
 8003790:	6832      	ldr	r2, [r6, #0]
 8003792:	1a9b      	subs	r3, r3, r2
 8003794:	42ab      	cmp	r3, r5
 8003796:	dc28      	bgt.n	80037ea <_printf_common+0x9a>
 8003798:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800379c:	1e13      	subs	r3, r2, #0
 800379e:	6822      	ldr	r2, [r4, #0]
 80037a0:	bf18      	it	ne
 80037a2:	2301      	movne	r3, #1
 80037a4:	0692      	lsls	r2, r2, #26
 80037a6:	d42d      	bmi.n	8003804 <_printf_common+0xb4>
 80037a8:	4649      	mov	r1, r9
 80037aa:	4638      	mov	r0, r7
 80037ac:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80037b0:	47c0      	blx	r8
 80037b2:	3001      	adds	r0, #1
 80037b4:	d020      	beq.n	80037f8 <_printf_common+0xa8>
 80037b6:	6823      	ldr	r3, [r4, #0]
 80037b8:	68e5      	ldr	r5, [r4, #12]
 80037ba:	f003 0306 	and.w	r3, r3, #6
 80037be:	2b04      	cmp	r3, #4
 80037c0:	bf18      	it	ne
 80037c2:	2500      	movne	r5, #0
 80037c4:	6832      	ldr	r2, [r6, #0]
 80037c6:	f04f 0600 	mov.w	r6, #0
 80037ca:	68a3      	ldr	r3, [r4, #8]
 80037cc:	bf08      	it	eq
 80037ce:	1aad      	subeq	r5, r5, r2
 80037d0:	6922      	ldr	r2, [r4, #16]
 80037d2:	bf08      	it	eq
 80037d4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80037d8:	4293      	cmp	r3, r2
 80037da:	bfc4      	itt	gt
 80037dc:	1a9b      	subgt	r3, r3, r2
 80037de:	18ed      	addgt	r5, r5, r3
 80037e0:	341a      	adds	r4, #26
 80037e2:	42b5      	cmp	r5, r6
 80037e4:	d11a      	bne.n	800381c <_printf_common+0xcc>
 80037e6:	2000      	movs	r0, #0
 80037e8:	e008      	b.n	80037fc <_printf_common+0xac>
 80037ea:	2301      	movs	r3, #1
 80037ec:	4652      	mov	r2, sl
 80037ee:	4649      	mov	r1, r9
 80037f0:	4638      	mov	r0, r7
 80037f2:	47c0      	blx	r8
 80037f4:	3001      	adds	r0, #1
 80037f6:	d103      	bne.n	8003800 <_printf_common+0xb0>
 80037f8:	f04f 30ff 	mov.w	r0, #4294967295
 80037fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003800:	3501      	adds	r5, #1
 8003802:	e7c4      	b.n	800378e <_printf_common+0x3e>
 8003804:	2030      	movs	r0, #48	; 0x30
 8003806:	18e1      	adds	r1, r4, r3
 8003808:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800380c:	1c5a      	adds	r2, r3, #1
 800380e:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8003812:	4422      	add	r2, r4
 8003814:	3302      	adds	r3, #2
 8003816:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800381a:	e7c5      	b.n	80037a8 <_printf_common+0x58>
 800381c:	2301      	movs	r3, #1
 800381e:	4622      	mov	r2, r4
 8003820:	4649      	mov	r1, r9
 8003822:	4638      	mov	r0, r7
 8003824:	47c0      	blx	r8
 8003826:	3001      	adds	r0, #1
 8003828:	d0e6      	beq.n	80037f8 <_printf_common+0xa8>
 800382a:	3601      	adds	r6, #1
 800382c:	e7d9      	b.n	80037e2 <_printf_common+0x92>
	...

08003830 <_printf_i>:
 8003830:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003834:	7e0f      	ldrb	r7, [r1, #24]
 8003836:	4691      	mov	r9, r2
 8003838:	2f78      	cmp	r7, #120	; 0x78
 800383a:	4680      	mov	r8, r0
 800383c:	460c      	mov	r4, r1
 800383e:	469a      	mov	sl, r3
 8003840:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8003842:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8003846:	d807      	bhi.n	8003858 <_printf_i+0x28>
 8003848:	2f62      	cmp	r7, #98	; 0x62
 800384a:	d80a      	bhi.n	8003862 <_printf_i+0x32>
 800384c:	2f00      	cmp	r7, #0
 800384e:	f000 80d9 	beq.w	8003a04 <_printf_i+0x1d4>
 8003852:	2f58      	cmp	r7, #88	; 0x58
 8003854:	f000 80a4 	beq.w	80039a0 <_printf_i+0x170>
 8003858:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800385c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8003860:	e03a      	b.n	80038d8 <_printf_i+0xa8>
 8003862:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8003866:	2b15      	cmp	r3, #21
 8003868:	d8f6      	bhi.n	8003858 <_printf_i+0x28>
 800386a:	a101      	add	r1, pc, #4	; (adr r1, 8003870 <_printf_i+0x40>)
 800386c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8003870:	080038c9 	.word	0x080038c9
 8003874:	080038dd 	.word	0x080038dd
 8003878:	08003859 	.word	0x08003859
 800387c:	08003859 	.word	0x08003859
 8003880:	08003859 	.word	0x08003859
 8003884:	08003859 	.word	0x08003859
 8003888:	080038dd 	.word	0x080038dd
 800388c:	08003859 	.word	0x08003859
 8003890:	08003859 	.word	0x08003859
 8003894:	08003859 	.word	0x08003859
 8003898:	08003859 	.word	0x08003859
 800389c:	080039eb 	.word	0x080039eb
 80038a0:	0800390d 	.word	0x0800390d
 80038a4:	080039cd 	.word	0x080039cd
 80038a8:	08003859 	.word	0x08003859
 80038ac:	08003859 	.word	0x08003859
 80038b0:	08003a0d 	.word	0x08003a0d
 80038b4:	08003859 	.word	0x08003859
 80038b8:	0800390d 	.word	0x0800390d
 80038bc:	08003859 	.word	0x08003859
 80038c0:	08003859 	.word	0x08003859
 80038c4:	080039d5 	.word	0x080039d5
 80038c8:	682b      	ldr	r3, [r5, #0]
 80038ca:	1d1a      	adds	r2, r3, #4
 80038cc:	681b      	ldr	r3, [r3, #0]
 80038ce:	602a      	str	r2, [r5, #0]
 80038d0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80038d4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80038d8:	2301      	movs	r3, #1
 80038da:	e0a4      	b.n	8003a26 <_printf_i+0x1f6>
 80038dc:	6820      	ldr	r0, [r4, #0]
 80038de:	6829      	ldr	r1, [r5, #0]
 80038e0:	0606      	lsls	r6, r0, #24
 80038e2:	f101 0304 	add.w	r3, r1, #4
 80038e6:	d50a      	bpl.n	80038fe <_printf_i+0xce>
 80038e8:	680e      	ldr	r6, [r1, #0]
 80038ea:	602b      	str	r3, [r5, #0]
 80038ec:	2e00      	cmp	r6, #0
 80038ee:	da03      	bge.n	80038f8 <_printf_i+0xc8>
 80038f0:	232d      	movs	r3, #45	; 0x2d
 80038f2:	4276      	negs	r6, r6
 80038f4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80038f8:	230a      	movs	r3, #10
 80038fa:	485e      	ldr	r0, [pc, #376]	; (8003a74 <_printf_i+0x244>)
 80038fc:	e019      	b.n	8003932 <_printf_i+0x102>
 80038fe:	680e      	ldr	r6, [r1, #0]
 8003900:	f010 0f40 	tst.w	r0, #64	; 0x40
 8003904:	602b      	str	r3, [r5, #0]
 8003906:	bf18      	it	ne
 8003908:	b236      	sxthne	r6, r6
 800390a:	e7ef      	b.n	80038ec <_printf_i+0xbc>
 800390c:	682b      	ldr	r3, [r5, #0]
 800390e:	6820      	ldr	r0, [r4, #0]
 8003910:	1d19      	adds	r1, r3, #4
 8003912:	6029      	str	r1, [r5, #0]
 8003914:	0601      	lsls	r1, r0, #24
 8003916:	d501      	bpl.n	800391c <_printf_i+0xec>
 8003918:	681e      	ldr	r6, [r3, #0]
 800391a:	e002      	b.n	8003922 <_printf_i+0xf2>
 800391c:	0646      	lsls	r6, r0, #25
 800391e:	d5fb      	bpl.n	8003918 <_printf_i+0xe8>
 8003920:	881e      	ldrh	r6, [r3, #0]
 8003922:	2f6f      	cmp	r7, #111	; 0x6f
 8003924:	bf0c      	ite	eq
 8003926:	2308      	moveq	r3, #8
 8003928:	230a      	movne	r3, #10
 800392a:	4852      	ldr	r0, [pc, #328]	; (8003a74 <_printf_i+0x244>)
 800392c:	2100      	movs	r1, #0
 800392e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8003932:	6865      	ldr	r5, [r4, #4]
 8003934:	2d00      	cmp	r5, #0
 8003936:	bfa8      	it	ge
 8003938:	6821      	ldrge	r1, [r4, #0]
 800393a:	60a5      	str	r5, [r4, #8]
 800393c:	bfa4      	itt	ge
 800393e:	f021 0104 	bicge.w	r1, r1, #4
 8003942:	6021      	strge	r1, [r4, #0]
 8003944:	b90e      	cbnz	r6, 800394a <_printf_i+0x11a>
 8003946:	2d00      	cmp	r5, #0
 8003948:	d04d      	beq.n	80039e6 <_printf_i+0x1b6>
 800394a:	4615      	mov	r5, r2
 800394c:	fbb6 f1f3 	udiv	r1, r6, r3
 8003950:	fb03 6711 	mls	r7, r3, r1, r6
 8003954:	5dc7      	ldrb	r7, [r0, r7]
 8003956:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800395a:	4637      	mov	r7, r6
 800395c:	42bb      	cmp	r3, r7
 800395e:	460e      	mov	r6, r1
 8003960:	d9f4      	bls.n	800394c <_printf_i+0x11c>
 8003962:	2b08      	cmp	r3, #8
 8003964:	d10b      	bne.n	800397e <_printf_i+0x14e>
 8003966:	6823      	ldr	r3, [r4, #0]
 8003968:	07de      	lsls	r6, r3, #31
 800396a:	d508      	bpl.n	800397e <_printf_i+0x14e>
 800396c:	6923      	ldr	r3, [r4, #16]
 800396e:	6861      	ldr	r1, [r4, #4]
 8003970:	4299      	cmp	r1, r3
 8003972:	bfde      	ittt	le
 8003974:	2330      	movle	r3, #48	; 0x30
 8003976:	f805 3c01 	strble.w	r3, [r5, #-1]
 800397a:	f105 35ff 	addle.w	r5, r5, #4294967295
 800397e:	1b52      	subs	r2, r2, r5
 8003980:	6122      	str	r2, [r4, #16]
 8003982:	464b      	mov	r3, r9
 8003984:	4621      	mov	r1, r4
 8003986:	4640      	mov	r0, r8
 8003988:	f8cd a000 	str.w	sl, [sp]
 800398c:	aa03      	add	r2, sp, #12
 800398e:	f7ff fedf 	bl	8003750 <_printf_common>
 8003992:	3001      	adds	r0, #1
 8003994:	d14c      	bne.n	8003a30 <_printf_i+0x200>
 8003996:	f04f 30ff 	mov.w	r0, #4294967295
 800399a:	b004      	add	sp, #16
 800399c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80039a0:	4834      	ldr	r0, [pc, #208]	; (8003a74 <_printf_i+0x244>)
 80039a2:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 80039a6:	6829      	ldr	r1, [r5, #0]
 80039a8:	6823      	ldr	r3, [r4, #0]
 80039aa:	f851 6b04 	ldr.w	r6, [r1], #4
 80039ae:	6029      	str	r1, [r5, #0]
 80039b0:	061d      	lsls	r5, r3, #24
 80039b2:	d514      	bpl.n	80039de <_printf_i+0x1ae>
 80039b4:	07df      	lsls	r7, r3, #31
 80039b6:	bf44      	itt	mi
 80039b8:	f043 0320 	orrmi.w	r3, r3, #32
 80039bc:	6023      	strmi	r3, [r4, #0]
 80039be:	b91e      	cbnz	r6, 80039c8 <_printf_i+0x198>
 80039c0:	6823      	ldr	r3, [r4, #0]
 80039c2:	f023 0320 	bic.w	r3, r3, #32
 80039c6:	6023      	str	r3, [r4, #0]
 80039c8:	2310      	movs	r3, #16
 80039ca:	e7af      	b.n	800392c <_printf_i+0xfc>
 80039cc:	6823      	ldr	r3, [r4, #0]
 80039ce:	f043 0320 	orr.w	r3, r3, #32
 80039d2:	6023      	str	r3, [r4, #0]
 80039d4:	2378      	movs	r3, #120	; 0x78
 80039d6:	4828      	ldr	r0, [pc, #160]	; (8003a78 <_printf_i+0x248>)
 80039d8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80039dc:	e7e3      	b.n	80039a6 <_printf_i+0x176>
 80039de:	0659      	lsls	r1, r3, #25
 80039e0:	bf48      	it	mi
 80039e2:	b2b6      	uxthmi	r6, r6
 80039e4:	e7e6      	b.n	80039b4 <_printf_i+0x184>
 80039e6:	4615      	mov	r5, r2
 80039e8:	e7bb      	b.n	8003962 <_printf_i+0x132>
 80039ea:	682b      	ldr	r3, [r5, #0]
 80039ec:	6826      	ldr	r6, [r4, #0]
 80039ee:	1d18      	adds	r0, r3, #4
 80039f0:	6961      	ldr	r1, [r4, #20]
 80039f2:	6028      	str	r0, [r5, #0]
 80039f4:	0635      	lsls	r5, r6, #24
 80039f6:	681b      	ldr	r3, [r3, #0]
 80039f8:	d501      	bpl.n	80039fe <_printf_i+0x1ce>
 80039fa:	6019      	str	r1, [r3, #0]
 80039fc:	e002      	b.n	8003a04 <_printf_i+0x1d4>
 80039fe:	0670      	lsls	r0, r6, #25
 8003a00:	d5fb      	bpl.n	80039fa <_printf_i+0x1ca>
 8003a02:	8019      	strh	r1, [r3, #0]
 8003a04:	2300      	movs	r3, #0
 8003a06:	4615      	mov	r5, r2
 8003a08:	6123      	str	r3, [r4, #16]
 8003a0a:	e7ba      	b.n	8003982 <_printf_i+0x152>
 8003a0c:	682b      	ldr	r3, [r5, #0]
 8003a0e:	2100      	movs	r1, #0
 8003a10:	1d1a      	adds	r2, r3, #4
 8003a12:	602a      	str	r2, [r5, #0]
 8003a14:	681d      	ldr	r5, [r3, #0]
 8003a16:	6862      	ldr	r2, [r4, #4]
 8003a18:	4628      	mov	r0, r5
 8003a1a:	f000 f82f 	bl	8003a7c <memchr>
 8003a1e:	b108      	cbz	r0, 8003a24 <_printf_i+0x1f4>
 8003a20:	1b40      	subs	r0, r0, r5
 8003a22:	6060      	str	r0, [r4, #4]
 8003a24:	6863      	ldr	r3, [r4, #4]
 8003a26:	6123      	str	r3, [r4, #16]
 8003a28:	2300      	movs	r3, #0
 8003a2a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003a2e:	e7a8      	b.n	8003982 <_printf_i+0x152>
 8003a30:	462a      	mov	r2, r5
 8003a32:	4649      	mov	r1, r9
 8003a34:	4640      	mov	r0, r8
 8003a36:	6923      	ldr	r3, [r4, #16]
 8003a38:	47d0      	blx	sl
 8003a3a:	3001      	adds	r0, #1
 8003a3c:	d0ab      	beq.n	8003996 <_printf_i+0x166>
 8003a3e:	6823      	ldr	r3, [r4, #0]
 8003a40:	079b      	lsls	r3, r3, #30
 8003a42:	d413      	bmi.n	8003a6c <_printf_i+0x23c>
 8003a44:	68e0      	ldr	r0, [r4, #12]
 8003a46:	9b03      	ldr	r3, [sp, #12]
 8003a48:	4298      	cmp	r0, r3
 8003a4a:	bfb8      	it	lt
 8003a4c:	4618      	movlt	r0, r3
 8003a4e:	e7a4      	b.n	800399a <_printf_i+0x16a>
 8003a50:	2301      	movs	r3, #1
 8003a52:	4632      	mov	r2, r6
 8003a54:	4649      	mov	r1, r9
 8003a56:	4640      	mov	r0, r8
 8003a58:	47d0      	blx	sl
 8003a5a:	3001      	adds	r0, #1
 8003a5c:	d09b      	beq.n	8003996 <_printf_i+0x166>
 8003a5e:	3501      	adds	r5, #1
 8003a60:	68e3      	ldr	r3, [r4, #12]
 8003a62:	9903      	ldr	r1, [sp, #12]
 8003a64:	1a5b      	subs	r3, r3, r1
 8003a66:	42ab      	cmp	r3, r5
 8003a68:	dcf2      	bgt.n	8003a50 <_printf_i+0x220>
 8003a6a:	e7eb      	b.n	8003a44 <_printf_i+0x214>
 8003a6c:	2500      	movs	r5, #0
 8003a6e:	f104 0619 	add.w	r6, r4, #25
 8003a72:	e7f5      	b.n	8003a60 <_printf_i+0x230>
 8003a74:	08003e2d 	.word	0x08003e2d
 8003a78:	08003e3e 	.word	0x08003e3e

08003a7c <memchr>:
 8003a7c:	4603      	mov	r3, r0
 8003a7e:	b510      	push	{r4, lr}
 8003a80:	b2c9      	uxtb	r1, r1
 8003a82:	4402      	add	r2, r0
 8003a84:	4293      	cmp	r3, r2
 8003a86:	4618      	mov	r0, r3
 8003a88:	d101      	bne.n	8003a8e <memchr+0x12>
 8003a8a:	2000      	movs	r0, #0
 8003a8c:	e003      	b.n	8003a96 <memchr+0x1a>
 8003a8e:	7804      	ldrb	r4, [r0, #0]
 8003a90:	3301      	adds	r3, #1
 8003a92:	428c      	cmp	r4, r1
 8003a94:	d1f6      	bne.n	8003a84 <memchr+0x8>
 8003a96:	bd10      	pop	{r4, pc}

08003a98 <memcpy>:
 8003a98:	440a      	add	r2, r1
 8003a9a:	4291      	cmp	r1, r2
 8003a9c:	f100 33ff 	add.w	r3, r0, #4294967295
 8003aa0:	d100      	bne.n	8003aa4 <memcpy+0xc>
 8003aa2:	4770      	bx	lr
 8003aa4:	b510      	push	{r4, lr}
 8003aa6:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003aaa:	4291      	cmp	r1, r2
 8003aac:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003ab0:	d1f9      	bne.n	8003aa6 <memcpy+0xe>
 8003ab2:	bd10      	pop	{r4, pc}

08003ab4 <memmove>:
 8003ab4:	4288      	cmp	r0, r1
 8003ab6:	b510      	push	{r4, lr}
 8003ab8:	eb01 0402 	add.w	r4, r1, r2
 8003abc:	d902      	bls.n	8003ac4 <memmove+0x10>
 8003abe:	4284      	cmp	r4, r0
 8003ac0:	4623      	mov	r3, r4
 8003ac2:	d807      	bhi.n	8003ad4 <memmove+0x20>
 8003ac4:	1e43      	subs	r3, r0, #1
 8003ac6:	42a1      	cmp	r1, r4
 8003ac8:	d008      	beq.n	8003adc <memmove+0x28>
 8003aca:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003ace:	f803 2f01 	strb.w	r2, [r3, #1]!
 8003ad2:	e7f8      	b.n	8003ac6 <memmove+0x12>
 8003ad4:	4601      	mov	r1, r0
 8003ad6:	4402      	add	r2, r0
 8003ad8:	428a      	cmp	r2, r1
 8003ada:	d100      	bne.n	8003ade <memmove+0x2a>
 8003adc:	bd10      	pop	{r4, pc}
 8003ade:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8003ae2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8003ae6:	e7f7      	b.n	8003ad8 <memmove+0x24>

08003ae8 <_free_r>:
 8003ae8:	b538      	push	{r3, r4, r5, lr}
 8003aea:	4605      	mov	r5, r0
 8003aec:	2900      	cmp	r1, #0
 8003aee:	d040      	beq.n	8003b72 <_free_r+0x8a>
 8003af0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003af4:	1f0c      	subs	r4, r1, #4
 8003af6:	2b00      	cmp	r3, #0
 8003af8:	bfb8      	it	lt
 8003afa:	18e4      	addlt	r4, r4, r3
 8003afc:	f000 f910 	bl	8003d20 <__malloc_lock>
 8003b00:	4a1c      	ldr	r2, [pc, #112]	; (8003b74 <_free_r+0x8c>)
 8003b02:	6813      	ldr	r3, [r2, #0]
 8003b04:	b933      	cbnz	r3, 8003b14 <_free_r+0x2c>
 8003b06:	6063      	str	r3, [r4, #4]
 8003b08:	6014      	str	r4, [r2, #0]
 8003b0a:	4628      	mov	r0, r5
 8003b0c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003b10:	f000 b90c 	b.w	8003d2c <__malloc_unlock>
 8003b14:	42a3      	cmp	r3, r4
 8003b16:	d908      	bls.n	8003b2a <_free_r+0x42>
 8003b18:	6820      	ldr	r0, [r4, #0]
 8003b1a:	1821      	adds	r1, r4, r0
 8003b1c:	428b      	cmp	r3, r1
 8003b1e:	bf01      	itttt	eq
 8003b20:	6819      	ldreq	r1, [r3, #0]
 8003b22:	685b      	ldreq	r3, [r3, #4]
 8003b24:	1809      	addeq	r1, r1, r0
 8003b26:	6021      	streq	r1, [r4, #0]
 8003b28:	e7ed      	b.n	8003b06 <_free_r+0x1e>
 8003b2a:	461a      	mov	r2, r3
 8003b2c:	685b      	ldr	r3, [r3, #4]
 8003b2e:	b10b      	cbz	r3, 8003b34 <_free_r+0x4c>
 8003b30:	42a3      	cmp	r3, r4
 8003b32:	d9fa      	bls.n	8003b2a <_free_r+0x42>
 8003b34:	6811      	ldr	r1, [r2, #0]
 8003b36:	1850      	adds	r0, r2, r1
 8003b38:	42a0      	cmp	r0, r4
 8003b3a:	d10b      	bne.n	8003b54 <_free_r+0x6c>
 8003b3c:	6820      	ldr	r0, [r4, #0]
 8003b3e:	4401      	add	r1, r0
 8003b40:	1850      	adds	r0, r2, r1
 8003b42:	4283      	cmp	r3, r0
 8003b44:	6011      	str	r1, [r2, #0]
 8003b46:	d1e0      	bne.n	8003b0a <_free_r+0x22>
 8003b48:	6818      	ldr	r0, [r3, #0]
 8003b4a:	685b      	ldr	r3, [r3, #4]
 8003b4c:	4401      	add	r1, r0
 8003b4e:	6011      	str	r1, [r2, #0]
 8003b50:	6053      	str	r3, [r2, #4]
 8003b52:	e7da      	b.n	8003b0a <_free_r+0x22>
 8003b54:	d902      	bls.n	8003b5c <_free_r+0x74>
 8003b56:	230c      	movs	r3, #12
 8003b58:	602b      	str	r3, [r5, #0]
 8003b5a:	e7d6      	b.n	8003b0a <_free_r+0x22>
 8003b5c:	6820      	ldr	r0, [r4, #0]
 8003b5e:	1821      	adds	r1, r4, r0
 8003b60:	428b      	cmp	r3, r1
 8003b62:	bf01      	itttt	eq
 8003b64:	6819      	ldreq	r1, [r3, #0]
 8003b66:	685b      	ldreq	r3, [r3, #4]
 8003b68:	1809      	addeq	r1, r1, r0
 8003b6a:	6021      	streq	r1, [r4, #0]
 8003b6c:	6063      	str	r3, [r4, #4]
 8003b6e:	6054      	str	r4, [r2, #4]
 8003b70:	e7cb      	b.n	8003b0a <_free_r+0x22>
 8003b72:	bd38      	pop	{r3, r4, r5, pc}
 8003b74:	20000224 	.word	0x20000224

08003b78 <sbrk_aligned>:
 8003b78:	b570      	push	{r4, r5, r6, lr}
 8003b7a:	4e0e      	ldr	r6, [pc, #56]	; (8003bb4 <sbrk_aligned+0x3c>)
 8003b7c:	460c      	mov	r4, r1
 8003b7e:	6831      	ldr	r1, [r6, #0]
 8003b80:	4605      	mov	r5, r0
 8003b82:	b911      	cbnz	r1, 8003b8a <sbrk_aligned+0x12>
 8003b84:	f000 f8bc 	bl	8003d00 <_sbrk_r>
 8003b88:	6030      	str	r0, [r6, #0]
 8003b8a:	4621      	mov	r1, r4
 8003b8c:	4628      	mov	r0, r5
 8003b8e:	f000 f8b7 	bl	8003d00 <_sbrk_r>
 8003b92:	1c43      	adds	r3, r0, #1
 8003b94:	d00a      	beq.n	8003bac <sbrk_aligned+0x34>
 8003b96:	1cc4      	adds	r4, r0, #3
 8003b98:	f024 0403 	bic.w	r4, r4, #3
 8003b9c:	42a0      	cmp	r0, r4
 8003b9e:	d007      	beq.n	8003bb0 <sbrk_aligned+0x38>
 8003ba0:	1a21      	subs	r1, r4, r0
 8003ba2:	4628      	mov	r0, r5
 8003ba4:	f000 f8ac 	bl	8003d00 <_sbrk_r>
 8003ba8:	3001      	adds	r0, #1
 8003baa:	d101      	bne.n	8003bb0 <sbrk_aligned+0x38>
 8003bac:	f04f 34ff 	mov.w	r4, #4294967295
 8003bb0:	4620      	mov	r0, r4
 8003bb2:	bd70      	pop	{r4, r5, r6, pc}
 8003bb4:	20000228 	.word	0x20000228

08003bb8 <_malloc_r>:
 8003bb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003bbc:	1ccd      	adds	r5, r1, #3
 8003bbe:	f025 0503 	bic.w	r5, r5, #3
 8003bc2:	3508      	adds	r5, #8
 8003bc4:	2d0c      	cmp	r5, #12
 8003bc6:	bf38      	it	cc
 8003bc8:	250c      	movcc	r5, #12
 8003bca:	2d00      	cmp	r5, #0
 8003bcc:	4607      	mov	r7, r0
 8003bce:	db01      	blt.n	8003bd4 <_malloc_r+0x1c>
 8003bd0:	42a9      	cmp	r1, r5
 8003bd2:	d905      	bls.n	8003be0 <_malloc_r+0x28>
 8003bd4:	230c      	movs	r3, #12
 8003bd6:	2600      	movs	r6, #0
 8003bd8:	603b      	str	r3, [r7, #0]
 8003bda:	4630      	mov	r0, r6
 8003bdc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003be0:	4e2e      	ldr	r6, [pc, #184]	; (8003c9c <_malloc_r+0xe4>)
 8003be2:	f000 f89d 	bl	8003d20 <__malloc_lock>
 8003be6:	6833      	ldr	r3, [r6, #0]
 8003be8:	461c      	mov	r4, r3
 8003bea:	bb34      	cbnz	r4, 8003c3a <_malloc_r+0x82>
 8003bec:	4629      	mov	r1, r5
 8003bee:	4638      	mov	r0, r7
 8003bf0:	f7ff ffc2 	bl	8003b78 <sbrk_aligned>
 8003bf4:	1c43      	adds	r3, r0, #1
 8003bf6:	4604      	mov	r4, r0
 8003bf8:	d14d      	bne.n	8003c96 <_malloc_r+0xde>
 8003bfa:	6834      	ldr	r4, [r6, #0]
 8003bfc:	4626      	mov	r6, r4
 8003bfe:	2e00      	cmp	r6, #0
 8003c00:	d140      	bne.n	8003c84 <_malloc_r+0xcc>
 8003c02:	6823      	ldr	r3, [r4, #0]
 8003c04:	4631      	mov	r1, r6
 8003c06:	4638      	mov	r0, r7
 8003c08:	eb04 0803 	add.w	r8, r4, r3
 8003c0c:	f000 f878 	bl	8003d00 <_sbrk_r>
 8003c10:	4580      	cmp	r8, r0
 8003c12:	d13a      	bne.n	8003c8a <_malloc_r+0xd2>
 8003c14:	6821      	ldr	r1, [r4, #0]
 8003c16:	3503      	adds	r5, #3
 8003c18:	1a6d      	subs	r5, r5, r1
 8003c1a:	f025 0503 	bic.w	r5, r5, #3
 8003c1e:	3508      	adds	r5, #8
 8003c20:	2d0c      	cmp	r5, #12
 8003c22:	bf38      	it	cc
 8003c24:	250c      	movcc	r5, #12
 8003c26:	4638      	mov	r0, r7
 8003c28:	4629      	mov	r1, r5
 8003c2a:	f7ff ffa5 	bl	8003b78 <sbrk_aligned>
 8003c2e:	3001      	adds	r0, #1
 8003c30:	d02b      	beq.n	8003c8a <_malloc_r+0xd2>
 8003c32:	6823      	ldr	r3, [r4, #0]
 8003c34:	442b      	add	r3, r5
 8003c36:	6023      	str	r3, [r4, #0]
 8003c38:	e00e      	b.n	8003c58 <_malloc_r+0xa0>
 8003c3a:	6822      	ldr	r2, [r4, #0]
 8003c3c:	1b52      	subs	r2, r2, r5
 8003c3e:	d41e      	bmi.n	8003c7e <_malloc_r+0xc6>
 8003c40:	2a0b      	cmp	r2, #11
 8003c42:	d916      	bls.n	8003c72 <_malloc_r+0xba>
 8003c44:	1961      	adds	r1, r4, r5
 8003c46:	42a3      	cmp	r3, r4
 8003c48:	6025      	str	r5, [r4, #0]
 8003c4a:	bf18      	it	ne
 8003c4c:	6059      	strne	r1, [r3, #4]
 8003c4e:	6863      	ldr	r3, [r4, #4]
 8003c50:	bf08      	it	eq
 8003c52:	6031      	streq	r1, [r6, #0]
 8003c54:	5162      	str	r2, [r4, r5]
 8003c56:	604b      	str	r3, [r1, #4]
 8003c58:	4638      	mov	r0, r7
 8003c5a:	f104 060b 	add.w	r6, r4, #11
 8003c5e:	f000 f865 	bl	8003d2c <__malloc_unlock>
 8003c62:	f026 0607 	bic.w	r6, r6, #7
 8003c66:	1d23      	adds	r3, r4, #4
 8003c68:	1af2      	subs	r2, r6, r3
 8003c6a:	d0b6      	beq.n	8003bda <_malloc_r+0x22>
 8003c6c:	1b9b      	subs	r3, r3, r6
 8003c6e:	50a3      	str	r3, [r4, r2]
 8003c70:	e7b3      	b.n	8003bda <_malloc_r+0x22>
 8003c72:	6862      	ldr	r2, [r4, #4]
 8003c74:	42a3      	cmp	r3, r4
 8003c76:	bf0c      	ite	eq
 8003c78:	6032      	streq	r2, [r6, #0]
 8003c7a:	605a      	strne	r2, [r3, #4]
 8003c7c:	e7ec      	b.n	8003c58 <_malloc_r+0xa0>
 8003c7e:	4623      	mov	r3, r4
 8003c80:	6864      	ldr	r4, [r4, #4]
 8003c82:	e7b2      	b.n	8003bea <_malloc_r+0x32>
 8003c84:	4634      	mov	r4, r6
 8003c86:	6876      	ldr	r6, [r6, #4]
 8003c88:	e7b9      	b.n	8003bfe <_malloc_r+0x46>
 8003c8a:	230c      	movs	r3, #12
 8003c8c:	4638      	mov	r0, r7
 8003c8e:	603b      	str	r3, [r7, #0]
 8003c90:	f000 f84c 	bl	8003d2c <__malloc_unlock>
 8003c94:	e7a1      	b.n	8003bda <_malloc_r+0x22>
 8003c96:	6025      	str	r5, [r4, #0]
 8003c98:	e7de      	b.n	8003c58 <_malloc_r+0xa0>
 8003c9a:	bf00      	nop
 8003c9c:	20000224 	.word	0x20000224

08003ca0 <_realloc_r>:
 8003ca0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003ca4:	4680      	mov	r8, r0
 8003ca6:	4614      	mov	r4, r2
 8003ca8:	460e      	mov	r6, r1
 8003caa:	b921      	cbnz	r1, 8003cb6 <_realloc_r+0x16>
 8003cac:	4611      	mov	r1, r2
 8003cae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003cb2:	f7ff bf81 	b.w	8003bb8 <_malloc_r>
 8003cb6:	b92a      	cbnz	r2, 8003cc4 <_realloc_r+0x24>
 8003cb8:	f7ff ff16 	bl	8003ae8 <_free_r>
 8003cbc:	4625      	mov	r5, r4
 8003cbe:	4628      	mov	r0, r5
 8003cc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003cc4:	f000 f838 	bl	8003d38 <_malloc_usable_size_r>
 8003cc8:	4284      	cmp	r4, r0
 8003cca:	4607      	mov	r7, r0
 8003ccc:	d802      	bhi.n	8003cd4 <_realloc_r+0x34>
 8003cce:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8003cd2:	d812      	bhi.n	8003cfa <_realloc_r+0x5a>
 8003cd4:	4621      	mov	r1, r4
 8003cd6:	4640      	mov	r0, r8
 8003cd8:	f7ff ff6e 	bl	8003bb8 <_malloc_r>
 8003cdc:	4605      	mov	r5, r0
 8003cde:	2800      	cmp	r0, #0
 8003ce0:	d0ed      	beq.n	8003cbe <_realloc_r+0x1e>
 8003ce2:	42bc      	cmp	r4, r7
 8003ce4:	4622      	mov	r2, r4
 8003ce6:	4631      	mov	r1, r6
 8003ce8:	bf28      	it	cs
 8003cea:	463a      	movcs	r2, r7
 8003cec:	f7ff fed4 	bl	8003a98 <memcpy>
 8003cf0:	4631      	mov	r1, r6
 8003cf2:	4640      	mov	r0, r8
 8003cf4:	f7ff fef8 	bl	8003ae8 <_free_r>
 8003cf8:	e7e1      	b.n	8003cbe <_realloc_r+0x1e>
 8003cfa:	4635      	mov	r5, r6
 8003cfc:	e7df      	b.n	8003cbe <_realloc_r+0x1e>
	...

08003d00 <_sbrk_r>:
 8003d00:	b538      	push	{r3, r4, r5, lr}
 8003d02:	2300      	movs	r3, #0
 8003d04:	4d05      	ldr	r5, [pc, #20]	; (8003d1c <_sbrk_r+0x1c>)
 8003d06:	4604      	mov	r4, r0
 8003d08:	4608      	mov	r0, r1
 8003d0a:	602b      	str	r3, [r5, #0]
 8003d0c:	f7fd fac4 	bl	8001298 <_sbrk>
 8003d10:	1c43      	adds	r3, r0, #1
 8003d12:	d102      	bne.n	8003d1a <_sbrk_r+0x1a>
 8003d14:	682b      	ldr	r3, [r5, #0]
 8003d16:	b103      	cbz	r3, 8003d1a <_sbrk_r+0x1a>
 8003d18:	6023      	str	r3, [r4, #0]
 8003d1a:	bd38      	pop	{r3, r4, r5, pc}
 8003d1c:	2000022c 	.word	0x2000022c

08003d20 <__malloc_lock>:
 8003d20:	4801      	ldr	r0, [pc, #4]	; (8003d28 <__malloc_lock+0x8>)
 8003d22:	f000 b811 	b.w	8003d48 <__retarget_lock_acquire_recursive>
 8003d26:	bf00      	nop
 8003d28:	20000230 	.word	0x20000230

08003d2c <__malloc_unlock>:
 8003d2c:	4801      	ldr	r0, [pc, #4]	; (8003d34 <__malloc_unlock+0x8>)
 8003d2e:	f000 b80c 	b.w	8003d4a <__retarget_lock_release_recursive>
 8003d32:	bf00      	nop
 8003d34:	20000230 	.word	0x20000230

08003d38 <_malloc_usable_size_r>:
 8003d38:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003d3c:	1f18      	subs	r0, r3, #4
 8003d3e:	2b00      	cmp	r3, #0
 8003d40:	bfbc      	itt	lt
 8003d42:	580b      	ldrlt	r3, [r1, r0]
 8003d44:	18c0      	addlt	r0, r0, r3
 8003d46:	4770      	bx	lr

08003d48 <__retarget_lock_acquire_recursive>:
 8003d48:	4770      	bx	lr

08003d4a <__retarget_lock_release_recursive>:
 8003d4a:	4770      	bx	lr

08003d4c <_init>:
 8003d4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003d4e:	bf00      	nop
 8003d50:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003d52:	bc08      	pop	{r3}
 8003d54:	469e      	mov	lr, r3
 8003d56:	4770      	bx	lr

08003d58 <_fini>:
 8003d58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003d5a:	bf00      	nop
 8003d5c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003d5e:	bc08      	pop	{r3}
 8003d60:	469e      	mov	lr, r3
 8003d62:	4770      	bx	lr
